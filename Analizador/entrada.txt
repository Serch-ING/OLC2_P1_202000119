
struct Points {
    right : i64,
    left : i64
}

struct Node {
    idx : i64,
    val : i64,
    point : Points
}

struct ValoresPiv{
    first: i64,
    last:i64,
    count:i64
}


fn InsertFirst(val : i64, actualDL : &mut Vec<Node>, valores: &mut ValoresPiv){


    
    if (valores.first !=  -1) {
    
        let indice = actualDL[valores.first as usize].idx;
    
        valores.first = valores.count;

        actualDL[valores.first as usize].val = val;
        actualDL[valores.first as usize].idx = valores.first;
        
        
        actualDL[valores.first as usize].point.left = -1;
        actualDL[valores.first as usize].point.right = indice;
        

        actualDL[indice as usize].point.left = valores.first ;
    
    } else{
        valores.first = valores.count;
        valores.last = valores.first;
        
            
        //let ind:usize = valores.count as usize;
        actualDL[valores.count as usize].idx = valores.count;
        actualDL[valores.count as usize].val = val;
        actualDL[valores.count as usize].point.left = -1;
        actualDL[valores.count as usize].point.right = -1;
        
    }
    
    
    
    
    valores.count = valores.count + 1;
	

}







fn main (){


    let mut actualDL: Vec<Node> = Vec::with_capacity(10);
    
    actualDL.push(Node{idx :0,val:0, point:Points{left:0,right:0}});
    actualDL.push(Node{idx :0,val:0, point:Points{left:0,right:0}});
    actualDL.push(Node{idx :0,val:0, point:Points{left:0,right:0}});
    actualDL.push(Node{idx :0,val:0, point:Points{left:0,right:0}});
    actualDL.push(Node{idx :0,val:0, point:Points{left:0,right:0}});
    actualDL.push(Node{idx :0,val:0, point:Points{left:0,right:0}});
    actualDL.push(Node{idx :0,val:0, point:Points{left:0,right:0}});
    actualDL.push(Node{idx :0,val:0, point:Points{left:0,right:0}});
    actualDL.push(Node{idx :0,val:0, point:Points{left:0,right:0}});
    actualDL.push(Node{idx :0,val:0, point:Points{left:0,right:0}});

        
    let mut refs: ValoresPiv = ValoresPiv{first:-1,count:0,last:-1};
    
    
    println!("Primero: {},  Ultimo: {}, Tamaño: {}",  refs.first,refs.last, refs.count);
    
    println!("---Insertar al inicio---");
    InsertFirst(10, &mut actualDL, &mut refs);
    
    println!("Primero: {},  Ultimo: {}, Tamaño: {}",  refs.first,refs.last, refs.count);
    
    println!("val: {} indice: {} right: {} left: {}",actualDL[0].val, actualDL[0].idx,actualDL[0].point.right, actualDL[0].point.left);

}