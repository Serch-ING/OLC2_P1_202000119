Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CAPACITY
    CONTAINS
    ERR
    FOR
    IN
    INSERT
    LEN
    MOD
    NEW
    PUSH
    REMOVE
    STRUCT
    VECT
    WCAPACITY

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> funcion
Rule 5     instruccion -> declaracion
Rule 6     instruccion -> asignacion
Rule 7     instruccion -> declaracion_arreglo
Rule 8     lista_bloque -> lista_bloque bloque
Rule 9     lista_bloque -> bloque
Rule 10    bloque -> impresiones PYC
Rule 11    bloque -> declaracion
Rule 12    bloque -> asignacion PYC
Rule 13    bloque -> llamada PYC
Rule 14    bloque -> start_match
Rule 15    bloque -> start_if
Rule 16    bloque -> start_while
Rule 17    bloque -> return_ins PYC
Rule 18    bloque -> break_ins PYC
Rule 19    bloque -> continue_ins PYC
Rule 20    bloque -> start_loop
Rule 21    bloque -> declaracion_arreglo
Rule 22    bloque -> asignacion_arreglo
Rule 23    bloque -> <empty>
Rule 24    bloque_match -> impresiones
Rule 25    bloque_match -> asignacion
Rule 26    bloque_match -> llamada
Rule 27    bloque_match -> start_match
Rule 28    bloque_match -> start_if
Rule 29    bloque_match -> start_while
Rule 30    bloque_match -> return_ins
Rule 31    bloque_match -> start_loop
Rule 32    bloque_match -> declaracion_arreglo
Rule 33    bloque_match -> <empty>
Rule 34    asignacion_arreglo -> acceso_arreglo IGUAL expresiones
Rule 35    declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC
Rule 36    validacion_dimension -> DP dimensiones_def
Rule 37    dimensiones_def -> CI dimensiones_def PYC expresiones CD
Rule 38    dimensiones_def -> CI tipo_datos PYC expresiones CD
Rule 39    acceso_arreglo -> ID dimensiones
Rule 40    dimensiones -> dimensiones dimension
Rule 41    dimensiones -> dimension
Rule 42    dimension -> CI expresiones CD
Rule 43    start_loop -> LOOP LI lista_bloque LD
Rule 44    continue_ins -> CONTINUE
Rule 45    break_ins -> BREAK
Rule 46    break_ins -> BREAK expresiones
Rule 47    return_ins -> RETURN
Rule 48    return_ins -> RETURN expresiones
Rule 49    start_while -> WHILE expresiones LI lista_bloque LD
Rule 50    list_exp_ins -> list_exp_ins bloque_exp
Rule 51    list_exp_ins -> bloque_exp
Rule 52    start_if -> IF expresiones LI list_exp_ins LD
Rule 53    start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
Rule 54    start_if -> IF expresiones LI list_exp_ins LD lista_elif
Rule 55    start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
Rule 56    lista_elif -> lista_elif else_if
Rule 57    lista_elif -> else_if
Rule 58    else_if -> ELSE IF expresiones LI list_exp_ins LD
Rule 59    start_match -> MATCH expresiones LI matches LD
Rule 60    matches -> matches bloque_match
Rule 61    matches -> bloque_match
Rule 62    bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA
Rule 63    bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD
Rule 64    simple_bloque_exp -> expresiones
Rule 65    simple_bloque_exp -> bloque_match
Rule 66    bloque_exp -> bloque
Rule 67    bloque_exp -> expresiones
Rule 68    varios_match -> varios_match BARRA expresiones
Rule 69    varios_match -> expresiones
Rule 70    varios_match -> GBAJO
Rule 71    llamada -> ID PI PD
Rule 72    llamada -> ID PI lista_expres PD
Rule 73    lista_expres -> lista_expres COMA expresiones
Rule 74    lista_expres -> expresiones
Rule 75    funcion -> FUNCION MAIN PI PD LI lista_bloque LD
Rule 76    funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD
Rule 77    funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD
Rule 78    parametros -> parametros COMA definiciones
Rule 79    parametros -> definiciones
Rule 80    definiciones -> MUT ID tipado
Rule 81    definiciones -> ID tipado
Rule 82    definiciones -> ID tipados_tipos
Rule 83    tipados_tipos -> DP REFERENCE dimensiones_def
Rule 84    referencias -> REFER
Rule 85    referencias -> <empty>
Rule 86    tipado_vector -> <empty>
Rule 87    acceso -> PUBLICO
Rule 88    acceso -> <empty>
Rule 89    tipo_funcion -> RESTA MAYOR tipo_datos
Rule 90    tipo_funcion -> RESTA MAYOR VECTOR MENOR tipo_datos MAYOR
Rule 91    tipo_funcion -> <empty>
Rule 92    declaracion -> LET mutable ID tipado PYC
Rule 93    declaracion -> LET mutable ID tipado IGUAL expresiones PYC
Rule 94    asignacion -> ID IGUAL expresiones
Rule 95    mutable -> MUT
Rule 96    mutable -> <empty>
Rule 97    tipado -> DP tipo_datos
Rule 98    tipado -> <empty>
Rule 99    tipo_datos -> TIPOINT
Rule 100   tipo_datos -> TIPOFLOAT
Rule 101   tipo_datos -> TIPOCHAR
Rule 102   tipo_datos -> TIPOSTRING
Rule 103   tipo_datos -> DIRSTRING
Rule 104   tipo_datos -> TIPOBOOL
Rule 105   impresiones -> PRINTLN PI CADENA PD
Rule 106   impresiones -> PRINT PI CADENA PD
Rule 107   impresiones -> PRINTLN PI CADENA COMA impresion_valores PD
Rule 108   impresiones -> PRINT PI CADENA COMA impresion_valores PD
Rule 109   impresion_valores -> impresion_valores COMA expresiones
Rule 110   impresion_valores -> expresiones
Rule 111   expresiones -> funcion_nativa
Rule 112   expresiones -> expre_logica
Rule 113   expresiones -> expre_relacional
Rule 114   expresiones -> expre_aritmetica
Rule 115   expresiones -> expre_valor
Rule 116   expresiones -> <empty>
Rule 117   expre_valor -> datos_cast
Rule 118   expre_valor -> start_match
Rule 119   expre_valor -> start_if
Rule 120   expre_valor -> start_loop
Rule 121   expre_valor -> llamada
Rule 122   expre_valor -> arreglo_init
Rule 123   expre_valor -> acceso_arreglo
Rule 124   arreglo_init -> CI lista_Expresiones CD
Rule 125   lista_Expresiones -> lista_Expresiones COMA expresiones
Rule 126   lista_Expresiones -> expresiones
Rule 127   funcion_nativa -> expresiones PUNTO nativas
Rule 128   nativas -> ABS
Rule 129   nativas -> SQRT
Rule 130   nativas -> TOSTRING
Rule 131   nativas -> TOOWNED
Rule 132   nativas -> CLONE
Rule 133   expre_logica -> expresiones OR expresiones
Rule 134   expre_logica -> expresiones AND expresiones
Rule 135   expre_logica -> NOT expresiones
Rule 136   expre_relacional -> expresiones MAYORIGUAL expresiones
Rule 137   expre_relacional -> expresiones MAYOR expresiones
Rule 138   expre_relacional -> expresiones MENORIGUAL expresiones
Rule 139   expre_relacional -> expresiones MENOR expresiones
Rule 140   expre_relacional -> expresiones IGUALDAD expresiones
Rule 141   expre_relacional -> expresiones DESIGUALDAD expresiones
Rule 142   expre_aritmetica -> RESTA expresiones
Rule 143   expre_aritmetica -> PI expresiones PD
Rule 144   expre_aritmetica -> expresiones RESTA expresiones
Rule 145   expre_aritmetica -> expresiones SUMA expresiones
Rule 146   expre_aritmetica -> expresiones MULTI expresiones
Rule 147   expre_aritmetica -> expresiones DIVI expresiones
Rule 148   expre_aritmetica -> expresiones MODULO expresiones
Rule 149   expre_aritmetica -> POWF PI expresiones COMA expresiones PD
Rule 150   expre_aritmetica -> POW PI expresiones COMA expresiones PD
Rule 151   datos_cast -> datos
Rule 152   datos_cast -> expresiones AS tipo_datos
Rule 153   datos -> ENTERO
Rule 154   datos -> FLOAT
Rule 155   datos -> CADENA
Rule 156   datos -> CARACTER
Rule 157   datos -> ID
Rule 158   datos -> TRUE
Rule 159   datos -> FALSE

Terminals, with rules where they appear

ABS                  : 128
AND                  : 134
AS                   : 152
BARRA                : 68
BREAK                : 45 46
CADENA               : 105 106 107 108 155
CAPACITY             : 
CARACTER             : 156
CD                   : 37 38 42 124
CI                   : 37 38 42 124
CLONE                : 132
COMA                 : 62 73 78 107 108 109 125 149 150
CONTAINS             : 
CONTINUE             : 44
DESIGUALDAD          : 141
DIRSTRING            : 103
DIVI                 : 147
DP                   : 36 83 97
ELSE                 : 53 55 58
ENTERO               : 153
ERR                  : 
FALSE                : 159
FLOAT                : 154
FOR                  : 
FUNCION              : 75 76 77
GBAJO                : 70
ID                   : 35 39 71 72 76 77 80 81 82 92 93 94 157
IF                   : 52 53 54 55 58
IGUAL                : 34 35 62 63 93 94
IGUALDAD             : 140
IN                   : 
INSERT               : 
LD                   : 43 49 52 53 53 54 55 55 58 59 63 75 76 77
LEN                  : 
LET                  : 35 92 93
LI                   : 43 49 52 53 53 54 55 55 58 59 63 75 76 77
LOOP                 : 43
MAIN                 : 75
MATCH                : 59
MAYOR                : 62 63 89 90 90 137
MAYORIGUAL           : 136
MENOR                : 90 139
MENORIGUAL           : 138
MOD                  : 
MODULO               : 148
MULTI                : 146
MUT                  : 80 95
NEW                  : 
NOT                  : 135
OR                   : 133
PD                   : 71 72 75 76 77 105 106 107 108 143 149 150
PI                   : 71 72 75 76 77 105 106 107 108 143 149 150
POW                  : 150
POWF                 : 149
PRINT                : 106 108
PRINTLN              : 105 107
PUBLICO              : 87
PUNTO                : 127
PUSH                 : 
PYC                  : 10 12 13 17 18 19 35 37 38 92 93
REFER                : 84
REFERENCE            : 83
REMOVE               : 
RESTA                : 89 90 142 144
RETURN               : 47 48
SQRT                 : 129
STRUCT               : 
SUMA                 : 145
TIPOBOOL             : 104
TIPOCHAR             : 101
TIPOFLOAT            : 100
TIPOINT              : 99
TIPOSTRING           : 102
TOOWNED              : 131
TOSTRING             : 130
TRUE                 : 158
VECT                 : 
VECTOR               : 90
WCAPACITY            : 
WHILE                : 49
error                : 

Nonterminals, with rules where they appear

acceso               : 
acceso_arreglo       : 34 123
arreglo_init         : 122
asignacion           : 6 12 25
asignacion_arreglo   : 22
bloque               : 8 9 66
bloque_exp           : 50 51
bloque_match         : 60 61 65
break_ins            : 18
continue_ins         : 19
datos                : 151
datos_cast           : 117
declaracion          : 5 11
declaracion_arreglo  : 7 21 32
definiciones         : 78 79
dimension            : 40 41
dimensiones          : 39 40
dimensiones_def      : 36 37 83
else_if              : 56 57
expre_aritmetica     : 114
expre_logica         : 112
expre_relacional     : 113
expre_valor          : 115
expresiones          : 34 35 37 38 42 46 48 49 52 53 54 55 58 59 64 67 68 69 73 74 93 94 109 110 125 126 127 133 133 134 134 135 136 136 137 137 138 138 139 139 140 140 141 141 142 143 144 144 145 145 146 146 147 147 148 148 149 149 150 150 152
funcion              : 4
funcion_nativa       : 111
impresion_valores    : 107 108 109
impresiones          : 10 24
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
list_exp_ins         : 50 52 53 53 54 55 55 58 63
lista_Expresiones    : 124 125
lista_bloque         : 8 43 49 75 76 77
lista_elif           : 54 55 56
lista_expres         : 72 73
llamada              : 13 26 121
matches              : 59 60
mutable              : 35 92 93
nativas              : 127
parametros           : 77 78
referencias          : 
return_ins           : 17 30
simple_bloque_exp    : 62
start_if             : 15 28 119
start_loop           : 20 31 120
start_match          : 14 27 118
start_while          : 16 29
tipado               : 80 81 92 93
tipado_vector        : 
tipados_tipos        : 82
tipo_datos           : 38 89 90 97 152
tipo_funcion         : 76 77
validacion_dimension : 35
varios_match         : 62 63 68

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . funcion
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion
    (7) instruccion -> . declaracion_arreglo
    (75) funcion -> . FUNCION MAIN PI PD LI lista_bloque LD
    (76) funcion -> . FUNCION ID PI PD tipo_funcion LI lista_bloque LD
    (77) funcion -> . FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC

    FUNCION         shift and go to state 8
    LET             shift and go to state 10
    ID              shift and go to state 9

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    funcion                        shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion_arreglo            shift and go to state 7

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . funcion
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion
    (7) instruccion -> . declaracion_arreglo
    (75) funcion -> . FUNCION MAIN PI PD LI lista_bloque LD
    (76) funcion -> . FUNCION ID PI PD tipo_funcion LI lista_bloque LD
    (77) funcion -> . FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC

    $end            reduce using rule 1 (init -> instrucciones .)
    FUNCION         shift and go to state 8
    LET             shift and go to state 10
    ID              shift and go to state 9

    instruccion                    shift and go to state 11
    funcion                        shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6
    declaracion_arreglo            shift and go to state 7

state 3

    (3) instrucciones -> instruccion .

    FUNCION         reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> funcion .

    FUNCION         reduce using rule 4 (instruccion -> funcion .)
    LET             reduce using rule 4 (instruccion -> funcion .)
    ID              reduce using rule 4 (instruccion -> funcion .)
    $end            reduce using rule 4 (instruccion -> funcion .)


state 5

    (5) instruccion -> declaracion .

    FUNCION         reduce using rule 5 (instruccion -> declaracion .)
    LET             reduce using rule 5 (instruccion -> declaracion .)
    ID              reduce using rule 5 (instruccion -> declaracion .)
    $end            reduce using rule 5 (instruccion -> declaracion .)


state 6

    (6) instruccion -> asignacion .

    FUNCION         reduce using rule 6 (instruccion -> asignacion .)
    LET             reduce using rule 6 (instruccion -> asignacion .)
    ID              reduce using rule 6 (instruccion -> asignacion .)
    $end            reduce using rule 6 (instruccion -> asignacion .)


state 7

    (7) instruccion -> declaracion_arreglo .

    FUNCION         reduce using rule 7 (instruccion -> declaracion_arreglo .)
    LET             reduce using rule 7 (instruccion -> declaracion_arreglo .)
    ID              reduce using rule 7 (instruccion -> declaracion_arreglo .)
    $end            reduce using rule 7 (instruccion -> declaracion_arreglo .)


state 8

    (75) funcion -> FUNCION . MAIN PI PD LI lista_bloque LD
    (76) funcion -> FUNCION . ID PI PD tipo_funcion LI lista_bloque LD
    (77) funcion -> FUNCION . ID PI parametros PD tipo_funcion LI lista_bloque LD

    MAIN            shift and go to state 12
    ID              shift and go to state 13


state 9

    (94) asignacion -> ID . IGUAL expresiones

    IGUAL           shift and go to state 14


state 10

    (92) declaracion -> LET . mutable ID tipado PYC
    (93) declaracion -> LET . mutable ID tipado IGUAL expresiones PYC
    (35) declaracion_arreglo -> LET . mutable ID validacion_dimension IGUAL expresiones PYC
    (95) mutable -> . MUT
    (96) mutable -> .

    MUT             shift and go to state 16
    ID              reduce using rule 96 (mutable -> .)

    mutable                        shift and go to state 15

state 11

    (2) instrucciones -> instrucciones instruccion .

    FUNCION         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 12

    (75) funcion -> FUNCION MAIN . PI PD LI lista_bloque LD

    PI              shift and go to state 17


state 13

    (76) funcion -> FUNCION ID . PI PD tipo_funcion LI lista_bloque LD
    (77) funcion -> FUNCION ID . PI parametros PD tipo_funcion LI lista_bloque LD

    PI              shift and go to state 18


state 14

    (94) asignacion -> ID IGUAL . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 20
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 15

    (92) declaracion -> LET mutable . ID tipado PYC
    (93) declaracion -> LET mutable . ID tipado IGUAL expresiones PYC
    (35) declaracion_arreglo -> LET mutable . ID validacion_dimension IGUAL expresiones PYC

    ID              shift and go to state 49


state 16

    (95) mutable -> MUT .

    ID              reduce using rule 95 (mutable -> MUT .)


state 17

    (75) funcion -> FUNCION MAIN PI . PD LI lista_bloque LD

    PD              shift and go to state 50


state 18

    (76) funcion -> FUNCION ID PI . PD tipo_funcion LI lista_bloque LD
    (77) funcion -> FUNCION ID PI . parametros PD tipo_funcion LI lista_bloque LD
    (78) parametros -> . parametros COMA definiciones
    (79) parametros -> . definiciones
    (80) definiciones -> . MUT ID tipado
    (81) definiciones -> . ID tipado
    (82) definiciones -> . ID tipados_tipos

    PD              shift and go to state 52
    MUT             shift and go to state 55
    ID              shift and go to state 51

    parametros                     shift and go to state 53
    definiciones                   shift and go to state 54

state 19

    (71) llamada -> ID . PI PD
    (72) llamada -> ID . PI lista_expres PD
    (39) acceso_arreglo -> ID . dimensiones
    (157) datos -> ID .
    (40) dimensiones -> . dimensiones dimension
    (41) dimensiones -> . dimension
    (42) dimension -> . CI expresiones CD

  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for CI resolved as shift
    PI              shift and go to state 56
    PUNTO           reduce using rule 157 (datos -> ID .)
    OR              reduce using rule 157 (datos -> ID .)
    AND             reduce using rule 157 (datos -> ID .)
    MAYORIGUAL      reduce using rule 157 (datos -> ID .)
    MAYOR           reduce using rule 157 (datos -> ID .)
    MENORIGUAL      reduce using rule 157 (datos -> ID .)
    MENOR           reduce using rule 157 (datos -> ID .)
    IGUALDAD        reduce using rule 157 (datos -> ID .)
    DESIGUALDAD     reduce using rule 157 (datos -> ID .)
    RESTA           reduce using rule 157 (datos -> ID .)
    SUMA            reduce using rule 157 (datos -> ID .)
    MULTI           reduce using rule 157 (datos -> ID .)
    DIVI            reduce using rule 157 (datos -> ID .)
    MODULO          reduce using rule 157 (datos -> ID .)
    AS              reduce using rule 157 (datos -> ID .)
    FUNCION         reduce using rule 157 (datos -> ID .)
    LET             reduce using rule 157 (datos -> ID .)
    ID              reduce using rule 157 (datos -> ID .)
    $end            reduce using rule 157 (datos -> ID .)
    PYC             reduce using rule 157 (datos -> ID .)
    LD              reduce using rule 157 (datos -> ID .)
    PRINTLN         reduce using rule 157 (datos -> ID .)
    PRINT           reduce using rule 157 (datos -> ID .)
    MATCH           reduce using rule 157 (datos -> ID .)
    IF              reduce using rule 157 (datos -> ID .)
    WHILE           reduce using rule 157 (datos -> ID .)
    RETURN          reduce using rule 157 (datos -> ID .)
    LOOP            reduce using rule 157 (datos -> ID .)
    GBAJO           reduce using rule 157 (datos -> ID .)
    NOT             reduce using rule 157 (datos -> ID .)
    POWF            reduce using rule 157 (datos -> ID .)
    POW             reduce using rule 157 (datos -> ID .)
    ENTERO          reduce using rule 157 (datos -> ID .)
    FLOAT           reduce using rule 157 (datos -> ID .)
    CADENA          reduce using rule 157 (datos -> ID .)
    CARACTER        reduce using rule 157 (datos -> ID .)
    TRUE            reduce using rule 157 (datos -> ID .)
    FALSE           reduce using rule 157 (datos -> ID .)
    IGUAL           reduce using rule 157 (datos -> ID .)
    BARRA           reduce using rule 157 (datos -> ID .)
    COMA            reduce using rule 157 (datos -> ID .)
    PD              reduce using rule 157 (datos -> ID .)
    LI              reduce using rule 157 (datos -> ID .)
    CD              reduce using rule 157 (datos -> ID .)
    BREAK           reduce using rule 157 (datos -> ID .)
    CONTINUE        reduce using rule 157 (datos -> ID .)
    CI              shift and go to state 59

  ! PI              [ reduce using rule 157 (datos -> ID .) ]
  ! CI              [ reduce using rule 157 (datos -> ID .) ]

    dimensiones                    shift and go to state 57
    dimension                      shift and go to state 58

state 20

    (94) asignacion -> ID IGUAL expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DESIGUALDAD resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIVI resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for AS resolved as shift
    FUNCION         reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    LET             reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    ID              reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    $end            reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    PYC             reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    LD              reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    PRINTLN         reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    PRINT           reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    MATCH           reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    IF              reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    WHILE           reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    RETURN          reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    LOOP            reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    GBAJO           reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    NOT             reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    PI              reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    POWF            reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    POW             reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    CI              reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    ENTERO          reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    FLOAT           reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    CADENA          reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    CARACTER        reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    TRUE            reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    FALSE           reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    IGUAL           reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    BARRA           reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    COMA            reduce using rule 94 (asignacion -> ID IGUAL expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74

  ! RESTA           [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! PUNTO           [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! OR              [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! AND             [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! MAYORIGUAL      [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! MAYOR           [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! MENORIGUAL      [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! MENOR           [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! IGUALDAD        [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! DESIGUALDAD     [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! SUMA            [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! MULTI           [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! DIVI            [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! MODULO          [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]
  ! AS              [ reduce using rule 94 (asignacion -> ID IGUAL expresiones .) ]


state 21

    (111) expresiones -> funcion_nativa .

    PUNTO           reduce using rule 111 (expresiones -> funcion_nativa .)
    OR              reduce using rule 111 (expresiones -> funcion_nativa .)
    AND             reduce using rule 111 (expresiones -> funcion_nativa .)
    MAYORIGUAL      reduce using rule 111 (expresiones -> funcion_nativa .)
    MAYOR           reduce using rule 111 (expresiones -> funcion_nativa .)
    MENORIGUAL      reduce using rule 111 (expresiones -> funcion_nativa .)
    MENOR           reduce using rule 111 (expresiones -> funcion_nativa .)
    IGUALDAD        reduce using rule 111 (expresiones -> funcion_nativa .)
    DESIGUALDAD     reduce using rule 111 (expresiones -> funcion_nativa .)
    RESTA           reduce using rule 111 (expresiones -> funcion_nativa .)
    SUMA            reduce using rule 111 (expresiones -> funcion_nativa .)
    MULTI           reduce using rule 111 (expresiones -> funcion_nativa .)
    DIVI            reduce using rule 111 (expresiones -> funcion_nativa .)
    MODULO          reduce using rule 111 (expresiones -> funcion_nativa .)
    AS              reduce using rule 111 (expresiones -> funcion_nativa .)
    FUNCION         reduce using rule 111 (expresiones -> funcion_nativa .)
    LET             reduce using rule 111 (expresiones -> funcion_nativa .)
    ID              reduce using rule 111 (expresiones -> funcion_nativa .)
    $end            reduce using rule 111 (expresiones -> funcion_nativa .)
    PYC             reduce using rule 111 (expresiones -> funcion_nativa .)
    LD              reduce using rule 111 (expresiones -> funcion_nativa .)
    PRINTLN         reduce using rule 111 (expresiones -> funcion_nativa .)
    PRINT           reduce using rule 111 (expresiones -> funcion_nativa .)
    MATCH           reduce using rule 111 (expresiones -> funcion_nativa .)
    IF              reduce using rule 111 (expresiones -> funcion_nativa .)
    WHILE           reduce using rule 111 (expresiones -> funcion_nativa .)
    RETURN          reduce using rule 111 (expresiones -> funcion_nativa .)
    LOOP            reduce using rule 111 (expresiones -> funcion_nativa .)
    GBAJO           reduce using rule 111 (expresiones -> funcion_nativa .)
    NOT             reduce using rule 111 (expresiones -> funcion_nativa .)
    PI              reduce using rule 111 (expresiones -> funcion_nativa .)
    POWF            reduce using rule 111 (expresiones -> funcion_nativa .)
    POW             reduce using rule 111 (expresiones -> funcion_nativa .)
    CI              reduce using rule 111 (expresiones -> funcion_nativa .)
    ENTERO          reduce using rule 111 (expresiones -> funcion_nativa .)
    FLOAT           reduce using rule 111 (expresiones -> funcion_nativa .)
    CADENA          reduce using rule 111 (expresiones -> funcion_nativa .)
    CARACTER        reduce using rule 111 (expresiones -> funcion_nativa .)
    TRUE            reduce using rule 111 (expresiones -> funcion_nativa .)
    FALSE           reduce using rule 111 (expresiones -> funcion_nativa .)
    IGUAL           reduce using rule 111 (expresiones -> funcion_nativa .)
    BARRA           reduce using rule 111 (expresiones -> funcion_nativa .)
    COMA            reduce using rule 111 (expresiones -> funcion_nativa .)
    PD              reduce using rule 111 (expresiones -> funcion_nativa .)
    LI              reduce using rule 111 (expresiones -> funcion_nativa .)
    CD              reduce using rule 111 (expresiones -> funcion_nativa .)
    BREAK           reduce using rule 111 (expresiones -> funcion_nativa .)
    CONTINUE        reduce using rule 111 (expresiones -> funcion_nativa .)


state 22

    (112) expresiones -> expre_logica .

    PUNTO           reduce using rule 112 (expresiones -> expre_logica .)
    OR              reduce using rule 112 (expresiones -> expre_logica .)
    AND             reduce using rule 112 (expresiones -> expre_logica .)
    MAYORIGUAL      reduce using rule 112 (expresiones -> expre_logica .)
    MAYOR           reduce using rule 112 (expresiones -> expre_logica .)
    MENORIGUAL      reduce using rule 112 (expresiones -> expre_logica .)
    MENOR           reduce using rule 112 (expresiones -> expre_logica .)
    IGUALDAD        reduce using rule 112 (expresiones -> expre_logica .)
    DESIGUALDAD     reduce using rule 112 (expresiones -> expre_logica .)
    RESTA           reduce using rule 112 (expresiones -> expre_logica .)
    SUMA            reduce using rule 112 (expresiones -> expre_logica .)
    MULTI           reduce using rule 112 (expresiones -> expre_logica .)
    DIVI            reduce using rule 112 (expresiones -> expre_logica .)
    MODULO          reduce using rule 112 (expresiones -> expre_logica .)
    AS              reduce using rule 112 (expresiones -> expre_logica .)
    FUNCION         reduce using rule 112 (expresiones -> expre_logica .)
    LET             reduce using rule 112 (expresiones -> expre_logica .)
    ID              reduce using rule 112 (expresiones -> expre_logica .)
    $end            reduce using rule 112 (expresiones -> expre_logica .)
    PYC             reduce using rule 112 (expresiones -> expre_logica .)
    LD              reduce using rule 112 (expresiones -> expre_logica .)
    PRINTLN         reduce using rule 112 (expresiones -> expre_logica .)
    PRINT           reduce using rule 112 (expresiones -> expre_logica .)
    MATCH           reduce using rule 112 (expresiones -> expre_logica .)
    IF              reduce using rule 112 (expresiones -> expre_logica .)
    WHILE           reduce using rule 112 (expresiones -> expre_logica .)
    RETURN          reduce using rule 112 (expresiones -> expre_logica .)
    LOOP            reduce using rule 112 (expresiones -> expre_logica .)
    GBAJO           reduce using rule 112 (expresiones -> expre_logica .)
    NOT             reduce using rule 112 (expresiones -> expre_logica .)
    PI              reduce using rule 112 (expresiones -> expre_logica .)
    POWF            reduce using rule 112 (expresiones -> expre_logica .)
    POW             reduce using rule 112 (expresiones -> expre_logica .)
    CI              reduce using rule 112 (expresiones -> expre_logica .)
    ENTERO          reduce using rule 112 (expresiones -> expre_logica .)
    FLOAT           reduce using rule 112 (expresiones -> expre_logica .)
    CADENA          reduce using rule 112 (expresiones -> expre_logica .)
    CARACTER        reduce using rule 112 (expresiones -> expre_logica .)
    TRUE            reduce using rule 112 (expresiones -> expre_logica .)
    FALSE           reduce using rule 112 (expresiones -> expre_logica .)
    IGUAL           reduce using rule 112 (expresiones -> expre_logica .)
    BARRA           reduce using rule 112 (expresiones -> expre_logica .)
    COMA            reduce using rule 112 (expresiones -> expre_logica .)
    PD              reduce using rule 112 (expresiones -> expre_logica .)
    LI              reduce using rule 112 (expresiones -> expre_logica .)
    CD              reduce using rule 112 (expresiones -> expre_logica .)
    BREAK           reduce using rule 112 (expresiones -> expre_logica .)
    CONTINUE        reduce using rule 112 (expresiones -> expre_logica .)


state 23

    (113) expresiones -> expre_relacional .

    PUNTO           reduce using rule 113 (expresiones -> expre_relacional .)
    OR              reduce using rule 113 (expresiones -> expre_relacional .)
    AND             reduce using rule 113 (expresiones -> expre_relacional .)
    MAYORIGUAL      reduce using rule 113 (expresiones -> expre_relacional .)
    MAYOR           reduce using rule 113 (expresiones -> expre_relacional .)
    MENORIGUAL      reduce using rule 113 (expresiones -> expre_relacional .)
    MENOR           reduce using rule 113 (expresiones -> expre_relacional .)
    IGUALDAD        reduce using rule 113 (expresiones -> expre_relacional .)
    DESIGUALDAD     reduce using rule 113 (expresiones -> expre_relacional .)
    RESTA           reduce using rule 113 (expresiones -> expre_relacional .)
    SUMA            reduce using rule 113 (expresiones -> expre_relacional .)
    MULTI           reduce using rule 113 (expresiones -> expre_relacional .)
    DIVI            reduce using rule 113 (expresiones -> expre_relacional .)
    MODULO          reduce using rule 113 (expresiones -> expre_relacional .)
    AS              reduce using rule 113 (expresiones -> expre_relacional .)
    FUNCION         reduce using rule 113 (expresiones -> expre_relacional .)
    LET             reduce using rule 113 (expresiones -> expre_relacional .)
    ID              reduce using rule 113 (expresiones -> expre_relacional .)
    $end            reduce using rule 113 (expresiones -> expre_relacional .)
    PYC             reduce using rule 113 (expresiones -> expre_relacional .)
    LD              reduce using rule 113 (expresiones -> expre_relacional .)
    PRINTLN         reduce using rule 113 (expresiones -> expre_relacional .)
    PRINT           reduce using rule 113 (expresiones -> expre_relacional .)
    MATCH           reduce using rule 113 (expresiones -> expre_relacional .)
    IF              reduce using rule 113 (expresiones -> expre_relacional .)
    WHILE           reduce using rule 113 (expresiones -> expre_relacional .)
    RETURN          reduce using rule 113 (expresiones -> expre_relacional .)
    LOOP            reduce using rule 113 (expresiones -> expre_relacional .)
    GBAJO           reduce using rule 113 (expresiones -> expre_relacional .)
    NOT             reduce using rule 113 (expresiones -> expre_relacional .)
    PI              reduce using rule 113 (expresiones -> expre_relacional .)
    POWF            reduce using rule 113 (expresiones -> expre_relacional .)
    POW             reduce using rule 113 (expresiones -> expre_relacional .)
    CI              reduce using rule 113 (expresiones -> expre_relacional .)
    ENTERO          reduce using rule 113 (expresiones -> expre_relacional .)
    FLOAT           reduce using rule 113 (expresiones -> expre_relacional .)
    CADENA          reduce using rule 113 (expresiones -> expre_relacional .)
    CARACTER        reduce using rule 113 (expresiones -> expre_relacional .)
    TRUE            reduce using rule 113 (expresiones -> expre_relacional .)
    FALSE           reduce using rule 113 (expresiones -> expre_relacional .)
    IGUAL           reduce using rule 113 (expresiones -> expre_relacional .)
    BARRA           reduce using rule 113 (expresiones -> expre_relacional .)
    COMA            reduce using rule 113 (expresiones -> expre_relacional .)
    PD              reduce using rule 113 (expresiones -> expre_relacional .)
    LI              reduce using rule 113 (expresiones -> expre_relacional .)
    CD              reduce using rule 113 (expresiones -> expre_relacional .)
    BREAK           reduce using rule 113 (expresiones -> expre_relacional .)
    CONTINUE        reduce using rule 113 (expresiones -> expre_relacional .)


state 24

    (114) expresiones -> expre_aritmetica .

    PUNTO           reduce using rule 114 (expresiones -> expre_aritmetica .)
    OR              reduce using rule 114 (expresiones -> expre_aritmetica .)
    AND             reduce using rule 114 (expresiones -> expre_aritmetica .)
    MAYORIGUAL      reduce using rule 114 (expresiones -> expre_aritmetica .)
    MAYOR           reduce using rule 114 (expresiones -> expre_aritmetica .)
    MENORIGUAL      reduce using rule 114 (expresiones -> expre_aritmetica .)
    MENOR           reduce using rule 114 (expresiones -> expre_aritmetica .)
    IGUALDAD        reduce using rule 114 (expresiones -> expre_aritmetica .)
    DESIGUALDAD     reduce using rule 114 (expresiones -> expre_aritmetica .)
    RESTA           reduce using rule 114 (expresiones -> expre_aritmetica .)
    SUMA            reduce using rule 114 (expresiones -> expre_aritmetica .)
    MULTI           reduce using rule 114 (expresiones -> expre_aritmetica .)
    DIVI            reduce using rule 114 (expresiones -> expre_aritmetica .)
    MODULO          reduce using rule 114 (expresiones -> expre_aritmetica .)
    AS              reduce using rule 114 (expresiones -> expre_aritmetica .)
    FUNCION         reduce using rule 114 (expresiones -> expre_aritmetica .)
    LET             reduce using rule 114 (expresiones -> expre_aritmetica .)
    ID              reduce using rule 114 (expresiones -> expre_aritmetica .)
    $end            reduce using rule 114 (expresiones -> expre_aritmetica .)
    PYC             reduce using rule 114 (expresiones -> expre_aritmetica .)
    LD              reduce using rule 114 (expresiones -> expre_aritmetica .)
    PRINTLN         reduce using rule 114 (expresiones -> expre_aritmetica .)
    PRINT           reduce using rule 114 (expresiones -> expre_aritmetica .)
    MATCH           reduce using rule 114 (expresiones -> expre_aritmetica .)
    IF              reduce using rule 114 (expresiones -> expre_aritmetica .)
    WHILE           reduce using rule 114 (expresiones -> expre_aritmetica .)
    RETURN          reduce using rule 114 (expresiones -> expre_aritmetica .)
    LOOP            reduce using rule 114 (expresiones -> expre_aritmetica .)
    GBAJO           reduce using rule 114 (expresiones -> expre_aritmetica .)
    NOT             reduce using rule 114 (expresiones -> expre_aritmetica .)
    PI              reduce using rule 114 (expresiones -> expre_aritmetica .)
    POWF            reduce using rule 114 (expresiones -> expre_aritmetica .)
    POW             reduce using rule 114 (expresiones -> expre_aritmetica .)
    CI              reduce using rule 114 (expresiones -> expre_aritmetica .)
    ENTERO          reduce using rule 114 (expresiones -> expre_aritmetica .)
    FLOAT           reduce using rule 114 (expresiones -> expre_aritmetica .)
    CADENA          reduce using rule 114 (expresiones -> expre_aritmetica .)
    CARACTER        reduce using rule 114 (expresiones -> expre_aritmetica .)
    TRUE            reduce using rule 114 (expresiones -> expre_aritmetica .)
    FALSE           reduce using rule 114 (expresiones -> expre_aritmetica .)
    IGUAL           reduce using rule 114 (expresiones -> expre_aritmetica .)
    BARRA           reduce using rule 114 (expresiones -> expre_aritmetica .)
    COMA            reduce using rule 114 (expresiones -> expre_aritmetica .)
    PD              reduce using rule 114 (expresiones -> expre_aritmetica .)
    LI              reduce using rule 114 (expresiones -> expre_aritmetica .)
    CD              reduce using rule 114 (expresiones -> expre_aritmetica .)
    BREAK           reduce using rule 114 (expresiones -> expre_aritmetica .)
    CONTINUE        reduce using rule 114 (expresiones -> expre_aritmetica .)


state 25

    (115) expresiones -> expre_valor .

    PUNTO           reduce using rule 115 (expresiones -> expre_valor .)
    OR              reduce using rule 115 (expresiones -> expre_valor .)
    AND             reduce using rule 115 (expresiones -> expre_valor .)
    MAYORIGUAL      reduce using rule 115 (expresiones -> expre_valor .)
    MAYOR           reduce using rule 115 (expresiones -> expre_valor .)
    MENORIGUAL      reduce using rule 115 (expresiones -> expre_valor .)
    MENOR           reduce using rule 115 (expresiones -> expre_valor .)
    IGUALDAD        reduce using rule 115 (expresiones -> expre_valor .)
    DESIGUALDAD     reduce using rule 115 (expresiones -> expre_valor .)
    RESTA           reduce using rule 115 (expresiones -> expre_valor .)
    SUMA            reduce using rule 115 (expresiones -> expre_valor .)
    MULTI           reduce using rule 115 (expresiones -> expre_valor .)
    DIVI            reduce using rule 115 (expresiones -> expre_valor .)
    MODULO          reduce using rule 115 (expresiones -> expre_valor .)
    AS              reduce using rule 115 (expresiones -> expre_valor .)
    FUNCION         reduce using rule 115 (expresiones -> expre_valor .)
    LET             reduce using rule 115 (expresiones -> expre_valor .)
    ID              reduce using rule 115 (expresiones -> expre_valor .)
    $end            reduce using rule 115 (expresiones -> expre_valor .)
    PYC             reduce using rule 115 (expresiones -> expre_valor .)
    LD              reduce using rule 115 (expresiones -> expre_valor .)
    PRINTLN         reduce using rule 115 (expresiones -> expre_valor .)
    PRINT           reduce using rule 115 (expresiones -> expre_valor .)
    MATCH           reduce using rule 115 (expresiones -> expre_valor .)
    IF              reduce using rule 115 (expresiones -> expre_valor .)
    WHILE           reduce using rule 115 (expresiones -> expre_valor .)
    RETURN          reduce using rule 115 (expresiones -> expre_valor .)
    LOOP            reduce using rule 115 (expresiones -> expre_valor .)
    GBAJO           reduce using rule 115 (expresiones -> expre_valor .)
    NOT             reduce using rule 115 (expresiones -> expre_valor .)
    PI              reduce using rule 115 (expresiones -> expre_valor .)
    POWF            reduce using rule 115 (expresiones -> expre_valor .)
    POW             reduce using rule 115 (expresiones -> expre_valor .)
    CI              reduce using rule 115 (expresiones -> expre_valor .)
    ENTERO          reduce using rule 115 (expresiones -> expre_valor .)
    FLOAT           reduce using rule 115 (expresiones -> expre_valor .)
    CADENA          reduce using rule 115 (expresiones -> expre_valor .)
    CARACTER        reduce using rule 115 (expresiones -> expre_valor .)
    TRUE            reduce using rule 115 (expresiones -> expre_valor .)
    FALSE           reduce using rule 115 (expresiones -> expre_valor .)
    IGUAL           reduce using rule 115 (expresiones -> expre_valor .)
    BARRA           reduce using rule 115 (expresiones -> expre_valor .)
    COMA            reduce using rule 115 (expresiones -> expre_valor .)
    PD              reduce using rule 115 (expresiones -> expre_valor .)
    LI              reduce using rule 115 (expresiones -> expre_valor .)
    CD              reduce using rule 115 (expresiones -> expre_valor .)
    BREAK           reduce using rule 115 (expresiones -> expre_valor .)
    CONTINUE        reduce using rule 115 (expresiones -> expre_valor .)


state 26

    (135) expre_logica -> NOT . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 75
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 27

    (142) expre_aritmetica -> RESTA . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 76
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 28

    (143) expre_aritmetica -> PI . expresiones PD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PD              reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 77
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 29

    (149) expre_aritmetica -> POWF . PI expresiones COMA expresiones PD

    PI              shift and go to state 78


state 30

    (150) expre_aritmetica -> POW . PI expresiones COMA expresiones PD

    PI              shift and go to state 79


state 31

    (117) expre_valor -> datos_cast .

    PUNTO           reduce using rule 117 (expre_valor -> datos_cast .)
    OR              reduce using rule 117 (expre_valor -> datos_cast .)
    AND             reduce using rule 117 (expre_valor -> datos_cast .)
    MAYORIGUAL      reduce using rule 117 (expre_valor -> datos_cast .)
    MAYOR           reduce using rule 117 (expre_valor -> datos_cast .)
    MENORIGUAL      reduce using rule 117 (expre_valor -> datos_cast .)
    MENOR           reduce using rule 117 (expre_valor -> datos_cast .)
    IGUALDAD        reduce using rule 117 (expre_valor -> datos_cast .)
    DESIGUALDAD     reduce using rule 117 (expre_valor -> datos_cast .)
    RESTA           reduce using rule 117 (expre_valor -> datos_cast .)
    SUMA            reduce using rule 117 (expre_valor -> datos_cast .)
    MULTI           reduce using rule 117 (expre_valor -> datos_cast .)
    DIVI            reduce using rule 117 (expre_valor -> datos_cast .)
    MODULO          reduce using rule 117 (expre_valor -> datos_cast .)
    AS              reduce using rule 117 (expre_valor -> datos_cast .)
    FUNCION         reduce using rule 117 (expre_valor -> datos_cast .)
    LET             reduce using rule 117 (expre_valor -> datos_cast .)
    ID              reduce using rule 117 (expre_valor -> datos_cast .)
    $end            reduce using rule 117 (expre_valor -> datos_cast .)
    PYC             reduce using rule 117 (expre_valor -> datos_cast .)
    LD              reduce using rule 117 (expre_valor -> datos_cast .)
    PRINTLN         reduce using rule 117 (expre_valor -> datos_cast .)
    PRINT           reduce using rule 117 (expre_valor -> datos_cast .)
    MATCH           reduce using rule 117 (expre_valor -> datos_cast .)
    IF              reduce using rule 117 (expre_valor -> datos_cast .)
    WHILE           reduce using rule 117 (expre_valor -> datos_cast .)
    RETURN          reduce using rule 117 (expre_valor -> datos_cast .)
    LOOP            reduce using rule 117 (expre_valor -> datos_cast .)
    GBAJO           reduce using rule 117 (expre_valor -> datos_cast .)
    NOT             reduce using rule 117 (expre_valor -> datos_cast .)
    PI              reduce using rule 117 (expre_valor -> datos_cast .)
    POWF            reduce using rule 117 (expre_valor -> datos_cast .)
    POW             reduce using rule 117 (expre_valor -> datos_cast .)
    CI              reduce using rule 117 (expre_valor -> datos_cast .)
    ENTERO          reduce using rule 117 (expre_valor -> datos_cast .)
    FLOAT           reduce using rule 117 (expre_valor -> datos_cast .)
    CADENA          reduce using rule 117 (expre_valor -> datos_cast .)
    CARACTER        reduce using rule 117 (expre_valor -> datos_cast .)
    TRUE            reduce using rule 117 (expre_valor -> datos_cast .)
    FALSE           reduce using rule 117 (expre_valor -> datos_cast .)
    IGUAL           reduce using rule 117 (expre_valor -> datos_cast .)
    BARRA           reduce using rule 117 (expre_valor -> datos_cast .)
    COMA            reduce using rule 117 (expre_valor -> datos_cast .)
    PD              reduce using rule 117 (expre_valor -> datos_cast .)
    LI              reduce using rule 117 (expre_valor -> datos_cast .)
    CD              reduce using rule 117 (expre_valor -> datos_cast .)
    BREAK           reduce using rule 117 (expre_valor -> datos_cast .)
    CONTINUE        reduce using rule 117 (expre_valor -> datos_cast .)


state 32

    (118) expre_valor -> start_match .

    PUNTO           reduce using rule 118 (expre_valor -> start_match .)
    OR              reduce using rule 118 (expre_valor -> start_match .)
    AND             reduce using rule 118 (expre_valor -> start_match .)
    MAYORIGUAL      reduce using rule 118 (expre_valor -> start_match .)
    MAYOR           reduce using rule 118 (expre_valor -> start_match .)
    MENORIGUAL      reduce using rule 118 (expre_valor -> start_match .)
    MENOR           reduce using rule 118 (expre_valor -> start_match .)
    IGUALDAD        reduce using rule 118 (expre_valor -> start_match .)
    DESIGUALDAD     reduce using rule 118 (expre_valor -> start_match .)
    RESTA           reduce using rule 118 (expre_valor -> start_match .)
    SUMA            reduce using rule 118 (expre_valor -> start_match .)
    MULTI           reduce using rule 118 (expre_valor -> start_match .)
    DIVI            reduce using rule 118 (expre_valor -> start_match .)
    MODULO          reduce using rule 118 (expre_valor -> start_match .)
    AS              reduce using rule 118 (expre_valor -> start_match .)
    FUNCION         reduce using rule 118 (expre_valor -> start_match .)
    LET             reduce using rule 118 (expre_valor -> start_match .)
    ID              reduce using rule 118 (expre_valor -> start_match .)
    $end            reduce using rule 118 (expre_valor -> start_match .)
    PYC             reduce using rule 118 (expre_valor -> start_match .)
    LD              reduce using rule 118 (expre_valor -> start_match .)
    PRINTLN         reduce using rule 118 (expre_valor -> start_match .)
    PRINT           reduce using rule 118 (expre_valor -> start_match .)
    MATCH           reduce using rule 118 (expre_valor -> start_match .)
    IF              reduce using rule 118 (expre_valor -> start_match .)
    WHILE           reduce using rule 118 (expre_valor -> start_match .)
    RETURN          reduce using rule 118 (expre_valor -> start_match .)
    LOOP            reduce using rule 118 (expre_valor -> start_match .)
    GBAJO           reduce using rule 118 (expre_valor -> start_match .)
    NOT             reduce using rule 118 (expre_valor -> start_match .)
    PI              reduce using rule 118 (expre_valor -> start_match .)
    POWF            reduce using rule 118 (expre_valor -> start_match .)
    POW             reduce using rule 118 (expre_valor -> start_match .)
    CI              reduce using rule 118 (expre_valor -> start_match .)
    ENTERO          reduce using rule 118 (expre_valor -> start_match .)
    FLOAT           reduce using rule 118 (expre_valor -> start_match .)
    CADENA          reduce using rule 118 (expre_valor -> start_match .)
    CARACTER        reduce using rule 118 (expre_valor -> start_match .)
    TRUE            reduce using rule 118 (expre_valor -> start_match .)
    FALSE           reduce using rule 118 (expre_valor -> start_match .)
    IGUAL           reduce using rule 118 (expre_valor -> start_match .)
    BARRA           reduce using rule 118 (expre_valor -> start_match .)
    COMA            reduce using rule 118 (expre_valor -> start_match .)
    PD              reduce using rule 118 (expre_valor -> start_match .)
    LI              reduce using rule 118 (expre_valor -> start_match .)
    CD              reduce using rule 118 (expre_valor -> start_match .)
    BREAK           reduce using rule 118 (expre_valor -> start_match .)
    CONTINUE        reduce using rule 118 (expre_valor -> start_match .)


state 33

    (119) expre_valor -> start_if .

    PUNTO           reduce using rule 119 (expre_valor -> start_if .)
    OR              reduce using rule 119 (expre_valor -> start_if .)
    AND             reduce using rule 119 (expre_valor -> start_if .)
    MAYORIGUAL      reduce using rule 119 (expre_valor -> start_if .)
    MAYOR           reduce using rule 119 (expre_valor -> start_if .)
    MENORIGUAL      reduce using rule 119 (expre_valor -> start_if .)
    MENOR           reduce using rule 119 (expre_valor -> start_if .)
    IGUALDAD        reduce using rule 119 (expre_valor -> start_if .)
    DESIGUALDAD     reduce using rule 119 (expre_valor -> start_if .)
    RESTA           reduce using rule 119 (expre_valor -> start_if .)
    SUMA            reduce using rule 119 (expre_valor -> start_if .)
    MULTI           reduce using rule 119 (expre_valor -> start_if .)
    DIVI            reduce using rule 119 (expre_valor -> start_if .)
    MODULO          reduce using rule 119 (expre_valor -> start_if .)
    AS              reduce using rule 119 (expre_valor -> start_if .)
    FUNCION         reduce using rule 119 (expre_valor -> start_if .)
    LET             reduce using rule 119 (expre_valor -> start_if .)
    ID              reduce using rule 119 (expre_valor -> start_if .)
    $end            reduce using rule 119 (expre_valor -> start_if .)
    PYC             reduce using rule 119 (expre_valor -> start_if .)
    LD              reduce using rule 119 (expre_valor -> start_if .)
    PRINTLN         reduce using rule 119 (expre_valor -> start_if .)
    PRINT           reduce using rule 119 (expre_valor -> start_if .)
    MATCH           reduce using rule 119 (expre_valor -> start_if .)
    IF              reduce using rule 119 (expre_valor -> start_if .)
    WHILE           reduce using rule 119 (expre_valor -> start_if .)
    RETURN          reduce using rule 119 (expre_valor -> start_if .)
    LOOP            reduce using rule 119 (expre_valor -> start_if .)
    GBAJO           reduce using rule 119 (expre_valor -> start_if .)
    NOT             reduce using rule 119 (expre_valor -> start_if .)
    PI              reduce using rule 119 (expre_valor -> start_if .)
    POWF            reduce using rule 119 (expre_valor -> start_if .)
    POW             reduce using rule 119 (expre_valor -> start_if .)
    CI              reduce using rule 119 (expre_valor -> start_if .)
    ENTERO          reduce using rule 119 (expre_valor -> start_if .)
    FLOAT           reduce using rule 119 (expre_valor -> start_if .)
    CADENA          reduce using rule 119 (expre_valor -> start_if .)
    CARACTER        reduce using rule 119 (expre_valor -> start_if .)
    TRUE            reduce using rule 119 (expre_valor -> start_if .)
    FALSE           reduce using rule 119 (expre_valor -> start_if .)
    IGUAL           reduce using rule 119 (expre_valor -> start_if .)
    BARRA           reduce using rule 119 (expre_valor -> start_if .)
    COMA            reduce using rule 119 (expre_valor -> start_if .)
    PD              reduce using rule 119 (expre_valor -> start_if .)
    LI              reduce using rule 119 (expre_valor -> start_if .)
    CD              reduce using rule 119 (expre_valor -> start_if .)
    BREAK           reduce using rule 119 (expre_valor -> start_if .)
    CONTINUE        reduce using rule 119 (expre_valor -> start_if .)


state 34

    (120) expre_valor -> start_loop .

    PUNTO           reduce using rule 120 (expre_valor -> start_loop .)
    OR              reduce using rule 120 (expre_valor -> start_loop .)
    AND             reduce using rule 120 (expre_valor -> start_loop .)
    MAYORIGUAL      reduce using rule 120 (expre_valor -> start_loop .)
    MAYOR           reduce using rule 120 (expre_valor -> start_loop .)
    MENORIGUAL      reduce using rule 120 (expre_valor -> start_loop .)
    MENOR           reduce using rule 120 (expre_valor -> start_loop .)
    IGUALDAD        reduce using rule 120 (expre_valor -> start_loop .)
    DESIGUALDAD     reduce using rule 120 (expre_valor -> start_loop .)
    RESTA           reduce using rule 120 (expre_valor -> start_loop .)
    SUMA            reduce using rule 120 (expre_valor -> start_loop .)
    MULTI           reduce using rule 120 (expre_valor -> start_loop .)
    DIVI            reduce using rule 120 (expre_valor -> start_loop .)
    MODULO          reduce using rule 120 (expre_valor -> start_loop .)
    AS              reduce using rule 120 (expre_valor -> start_loop .)
    FUNCION         reduce using rule 120 (expre_valor -> start_loop .)
    LET             reduce using rule 120 (expre_valor -> start_loop .)
    ID              reduce using rule 120 (expre_valor -> start_loop .)
    $end            reduce using rule 120 (expre_valor -> start_loop .)
    PYC             reduce using rule 120 (expre_valor -> start_loop .)
    LD              reduce using rule 120 (expre_valor -> start_loop .)
    PRINTLN         reduce using rule 120 (expre_valor -> start_loop .)
    PRINT           reduce using rule 120 (expre_valor -> start_loop .)
    MATCH           reduce using rule 120 (expre_valor -> start_loop .)
    IF              reduce using rule 120 (expre_valor -> start_loop .)
    WHILE           reduce using rule 120 (expre_valor -> start_loop .)
    RETURN          reduce using rule 120 (expre_valor -> start_loop .)
    LOOP            reduce using rule 120 (expre_valor -> start_loop .)
    GBAJO           reduce using rule 120 (expre_valor -> start_loop .)
    NOT             reduce using rule 120 (expre_valor -> start_loop .)
    PI              reduce using rule 120 (expre_valor -> start_loop .)
    POWF            reduce using rule 120 (expre_valor -> start_loop .)
    POW             reduce using rule 120 (expre_valor -> start_loop .)
    CI              reduce using rule 120 (expre_valor -> start_loop .)
    ENTERO          reduce using rule 120 (expre_valor -> start_loop .)
    FLOAT           reduce using rule 120 (expre_valor -> start_loop .)
    CADENA          reduce using rule 120 (expre_valor -> start_loop .)
    CARACTER        reduce using rule 120 (expre_valor -> start_loop .)
    TRUE            reduce using rule 120 (expre_valor -> start_loop .)
    FALSE           reduce using rule 120 (expre_valor -> start_loop .)
    IGUAL           reduce using rule 120 (expre_valor -> start_loop .)
    BARRA           reduce using rule 120 (expre_valor -> start_loop .)
    COMA            reduce using rule 120 (expre_valor -> start_loop .)
    PD              reduce using rule 120 (expre_valor -> start_loop .)
    LI              reduce using rule 120 (expre_valor -> start_loop .)
    CD              reduce using rule 120 (expre_valor -> start_loop .)
    BREAK           reduce using rule 120 (expre_valor -> start_loop .)
    CONTINUE        reduce using rule 120 (expre_valor -> start_loop .)


state 35

    (121) expre_valor -> llamada .

    PUNTO           reduce using rule 121 (expre_valor -> llamada .)
    OR              reduce using rule 121 (expre_valor -> llamada .)
    AND             reduce using rule 121 (expre_valor -> llamada .)
    MAYORIGUAL      reduce using rule 121 (expre_valor -> llamada .)
    MAYOR           reduce using rule 121 (expre_valor -> llamada .)
    MENORIGUAL      reduce using rule 121 (expre_valor -> llamada .)
    MENOR           reduce using rule 121 (expre_valor -> llamada .)
    IGUALDAD        reduce using rule 121 (expre_valor -> llamada .)
    DESIGUALDAD     reduce using rule 121 (expre_valor -> llamada .)
    RESTA           reduce using rule 121 (expre_valor -> llamada .)
    SUMA            reduce using rule 121 (expre_valor -> llamada .)
    MULTI           reduce using rule 121 (expre_valor -> llamada .)
    DIVI            reduce using rule 121 (expre_valor -> llamada .)
    MODULO          reduce using rule 121 (expre_valor -> llamada .)
    AS              reduce using rule 121 (expre_valor -> llamada .)
    FUNCION         reduce using rule 121 (expre_valor -> llamada .)
    LET             reduce using rule 121 (expre_valor -> llamada .)
    ID              reduce using rule 121 (expre_valor -> llamada .)
    $end            reduce using rule 121 (expre_valor -> llamada .)
    PYC             reduce using rule 121 (expre_valor -> llamada .)
    LD              reduce using rule 121 (expre_valor -> llamada .)
    PRINTLN         reduce using rule 121 (expre_valor -> llamada .)
    PRINT           reduce using rule 121 (expre_valor -> llamada .)
    MATCH           reduce using rule 121 (expre_valor -> llamada .)
    IF              reduce using rule 121 (expre_valor -> llamada .)
    WHILE           reduce using rule 121 (expre_valor -> llamada .)
    RETURN          reduce using rule 121 (expre_valor -> llamada .)
    LOOP            reduce using rule 121 (expre_valor -> llamada .)
    GBAJO           reduce using rule 121 (expre_valor -> llamada .)
    NOT             reduce using rule 121 (expre_valor -> llamada .)
    PI              reduce using rule 121 (expre_valor -> llamada .)
    POWF            reduce using rule 121 (expre_valor -> llamada .)
    POW             reduce using rule 121 (expre_valor -> llamada .)
    CI              reduce using rule 121 (expre_valor -> llamada .)
    ENTERO          reduce using rule 121 (expre_valor -> llamada .)
    FLOAT           reduce using rule 121 (expre_valor -> llamada .)
    CADENA          reduce using rule 121 (expre_valor -> llamada .)
    CARACTER        reduce using rule 121 (expre_valor -> llamada .)
    TRUE            reduce using rule 121 (expre_valor -> llamada .)
    FALSE           reduce using rule 121 (expre_valor -> llamada .)
    IGUAL           reduce using rule 121 (expre_valor -> llamada .)
    BARRA           reduce using rule 121 (expre_valor -> llamada .)
    COMA            reduce using rule 121 (expre_valor -> llamada .)
    PD              reduce using rule 121 (expre_valor -> llamada .)
    LI              reduce using rule 121 (expre_valor -> llamada .)
    CD              reduce using rule 121 (expre_valor -> llamada .)
    BREAK           reduce using rule 121 (expre_valor -> llamada .)
    CONTINUE        reduce using rule 121 (expre_valor -> llamada .)


state 36

    (122) expre_valor -> arreglo_init .

    PUNTO           reduce using rule 122 (expre_valor -> arreglo_init .)
    OR              reduce using rule 122 (expre_valor -> arreglo_init .)
    AND             reduce using rule 122 (expre_valor -> arreglo_init .)
    MAYORIGUAL      reduce using rule 122 (expre_valor -> arreglo_init .)
    MAYOR           reduce using rule 122 (expre_valor -> arreglo_init .)
    MENORIGUAL      reduce using rule 122 (expre_valor -> arreglo_init .)
    MENOR           reduce using rule 122 (expre_valor -> arreglo_init .)
    IGUALDAD        reduce using rule 122 (expre_valor -> arreglo_init .)
    DESIGUALDAD     reduce using rule 122 (expre_valor -> arreglo_init .)
    RESTA           reduce using rule 122 (expre_valor -> arreglo_init .)
    SUMA            reduce using rule 122 (expre_valor -> arreglo_init .)
    MULTI           reduce using rule 122 (expre_valor -> arreglo_init .)
    DIVI            reduce using rule 122 (expre_valor -> arreglo_init .)
    MODULO          reduce using rule 122 (expre_valor -> arreglo_init .)
    AS              reduce using rule 122 (expre_valor -> arreglo_init .)
    FUNCION         reduce using rule 122 (expre_valor -> arreglo_init .)
    LET             reduce using rule 122 (expre_valor -> arreglo_init .)
    ID              reduce using rule 122 (expre_valor -> arreglo_init .)
    $end            reduce using rule 122 (expre_valor -> arreglo_init .)
    PYC             reduce using rule 122 (expre_valor -> arreglo_init .)
    LD              reduce using rule 122 (expre_valor -> arreglo_init .)
    PRINTLN         reduce using rule 122 (expre_valor -> arreglo_init .)
    PRINT           reduce using rule 122 (expre_valor -> arreglo_init .)
    MATCH           reduce using rule 122 (expre_valor -> arreglo_init .)
    IF              reduce using rule 122 (expre_valor -> arreglo_init .)
    WHILE           reduce using rule 122 (expre_valor -> arreglo_init .)
    RETURN          reduce using rule 122 (expre_valor -> arreglo_init .)
    LOOP            reduce using rule 122 (expre_valor -> arreglo_init .)
    GBAJO           reduce using rule 122 (expre_valor -> arreglo_init .)
    NOT             reduce using rule 122 (expre_valor -> arreglo_init .)
    PI              reduce using rule 122 (expre_valor -> arreglo_init .)
    POWF            reduce using rule 122 (expre_valor -> arreglo_init .)
    POW             reduce using rule 122 (expre_valor -> arreglo_init .)
    CI              reduce using rule 122 (expre_valor -> arreglo_init .)
    ENTERO          reduce using rule 122 (expre_valor -> arreglo_init .)
    FLOAT           reduce using rule 122 (expre_valor -> arreglo_init .)
    CADENA          reduce using rule 122 (expre_valor -> arreglo_init .)
    CARACTER        reduce using rule 122 (expre_valor -> arreglo_init .)
    TRUE            reduce using rule 122 (expre_valor -> arreglo_init .)
    FALSE           reduce using rule 122 (expre_valor -> arreglo_init .)
    IGUAL           reduce using rule 122 (expre_valor -> arreglo_init .)
    BARRA           reduce using rule 122 (expre_valor -> arreglo_init .)
    COMA            reduce using rule 122 (expre_valor -> arreglo_init .)
    PD              reduce using rule 122 (expre_valor -> arreglo_init .)
    LI              reduce using rule 122 (expre_valor -> arreglo_init .)
    CD              reduce using rule 122 (expre_valor -> arreglo_init .)
    BREAK           reduce using rule 122 (expre_valor -> arreglo_init .)
    CONTINUE        reduce using rule 122 (expre_valor -> arreglo_init .)


state 37

    (123) expre_valor -> acceso_arreglo .

    PUNTO           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    OR              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    AND             reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MAYORIGUAL      reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MAYOR           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MENORIGUAL      reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MENOR           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    IGUALDAD        reduce using rule 123 (expre_valor -> acceso_arreglo .)
    DESIGUALDAD     reduce using rule 123 (expre_valor -> acceso_arreglo .)
    RESTA           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    SUMA            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MULTI           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    DIVI            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MODULO          reduce using rule 123 (expre_valor -> acceso_arreglo .)
    AS              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    FUNCION         reduce using rule 123 (expre_valor -> acceso_arreglo .)
    LET             reduce using rule 123 (expre_valor -> acceso_arreglo .)
    ID              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    $end            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    PYC             reduce using rule 123 (expre_valor -> acceso_arreglo .)
    LD              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    PRINTLN         reduce using rule 123 (expre_valor -> acceso_arreglo .)
    PRINT           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MATCH           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    IF              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    WHILE           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    RETURN          reduce using rule 123 (expre_valor -> acceso_arreglo .)
    LOOP            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    GBAJO           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    NOT             reduce using rule 123 (expre_valor -> acceso_arreglo .)
    PI              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    POWF            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    POW             reduce using rule 123 (expre_valor -> acceso_arreglo .)
    CI              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    ENTERO          reduce using rule 123 (expre_valor -> acceso_arreglo .)
    FLOAT           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    CADENA          reduce using rule 123 (expre_valor -> acceso_arreglo .)
    CARACTER        reduce using rule 123 (expre_valor -> acceso_arreglo .)
    TRUE            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    FALSE           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    IGUAL           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    BARRA           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    COMA            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    PD              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    LI              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    CD              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    BREAK           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    CONTINUE        reduce using rule 123 (expre_valor -> acceso_arreglo .)


state 38

    (151) datos_cast -> datos .

    PUNTO           reduce using rule 151 (datos_cast -> datos .)
    OR              reduce using rule 151 (datos_cast -> datos .)
    AND             reduce using rule 151 (datos_cast -> datos .)
    MAYORIGUAL      reduce using rule 151 (datos_cast -> datos .)
    MAYOR           reduce using rule 151 (datos_cast -> datos .)
    MENORIGUAL      reduce using rule 151 (datos_cast -> datos .)
    MENOR           reduce using rule 151 (datos_cast -> datos .)
    IGUALDAD        reduce using rule 151 (datos_cast -> datos .)
    DESIGUALDAD     reduce using rule 151 (datos_cast -> datos .)
    RESTA           reduce using rule 151 (datos_cast -> datos .)
    SUMA            reduce using rule 151 (datos_cast -> datos .)
    MULTI           reduce using rule 151 (datos_cast -> datos .)
    DIVI            reduce using rule 151 (datos_cast -> datos .)
    MODULO          reduce using rule 151 (datos_cast -> datos .)
    AS              reduce using rule 151 (datos_cast -> datos .)
    FUNCION         reduce using rule 151 (datos_cast -> datos .)
    LET             reduce using rule 151 (datos_cast -> datos .)
    ID              reduce using rule 151 (datos_cast -> datos .)
    $end            reduce using rule 151 (datos_cast -> datos .)
    PYC             reduce using rule 151 (datos_cast -> datos .)
    LD              reduce using rule 151 (datos_cast -> datos .)
    PRINTLN         reduce using rule 151 (datos_cast -> datos .)
    PRINT           reduce using rule 151 (datos_cast -> datos .)
    MATCH           reduce using rule 151 (datos_cast -> datos .)
    IF              reduce using rule 151 (datos_cast -> datos .)
    WHILE           reduce using rule 151 (datos_cast -> datos .)
    RETURN          reduce using rule 151 (datos_cast -> datos .)
    LOOP            reduce using rule 151 (datos_cast -> datos .)
    GBAJO           reduce using rule 151 (datos_cast -> datos .)
    NOT             reduce using rule 151 (datos_cast -> datos .)
    PI              reduce using rule 151 (datos_cast -> datos .)
    POWF            reduce using rule 151 (datos_cast -> datos .)
    POW             reduce using rule 151 (datos_cast -> datos .)
    CI              reduce using rule 151 (datos_cast -> datos .)
    ENTERO          reduce using rule 151 (datos_cast -> datos .)
    FLOAT           reduce using rule 151 (datos_cast -> datos .)
    CADENA          reduce using rule 151 (datos_cast -> datos .)
    CARACTER        reduce using rule 151 (datos_cast -> datos .)
    TRUE            reduce using rule 151 (datos_cast -> datos .)
    FALSE           reduce using rule 151 (datos_cast -> datos .)
    IGUAL           reduce using rule 151 (datos_cast -> datos .)
    BARRA           reduce using rule 151 (datos_cast -> datos .)
    COMA            reduce using rule 151 (datos_cast -> datos .)
    PD              reduce using rule 151 (datos_cast -> datos .)
    LI              reduce using rule 151 (datos_cast -> datos .)
    CD              reduce using rule 151 (datos_cast -> datos .)
    BREAK           reduce using rule 151 (datos_cast -> datos .)
    CONTINUE        reduce using rule 151 (datos_cast -> datos .)


state 39

    (59) start_match -> MATCH . expresiones LI matches LD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    LI              reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 80
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 40

    (52) start_if -> IF . expresiones LI list_exp_ins LD
    (53) start_if -> IF . expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> IF . expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> IF . expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    LI              reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 81
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 41

    (43) start_loop -> LOOP . LI lista_bloque LD

    LI              shift and go to state 82


state 42

    (124) arreglo_init -> CI . lista_Expresiones CD
    (125) lista_Expresiones -> . lista_Expresiones COMA expresiones
    (126) lista_Expresiones -> . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    lista_Expresiones              shift and go to state 83
    expresiones                    shift and go to state 84
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 43

    (153) datos -> ENTERO .

    PUNTO           reduce using rule 153 (datos -> ENTERO .)
    OR              reduce using rule 153 (datos -> ENTERO .)
    AND             reduce using rule 153 (datos -> ENTERO .)
    MAYORIGUAL      reduce using rule 153 (datos -> ENTERO .)
    MAYOR           reduce using rule 153 (datos -> ENTERO .)
    MENORIGUAL      reduce using rule 153 (datos -> ENTERO .)
    MENOR           reduce using rule 153 (datos -> ENTERO .)
    IGUALDAD        reduce using rule 153 (datos -> ENTERO .)
    DESIGUALDAD     reduce using rule 153 (datos -> ENTERO .)
    RESTA           reduce using rule 153 (datos -> ENTERO .)
    SUMA            reduce using rule 153 (datos -> ENTERO .)
    MULTI           reduce using rule 153 (datos -> ENTERO .)
    DIVI            reduce using rule 153 (datos -> ENTERO .)
    MODULO          reduce using rule 153 (datos -> ENTERO .)
    AS              reduce using rule 153 (datos -> ENTERO .)
    FUNCION         reduce using rule 153 (datos -> ENTERO .)
    LET             reduce using rule 153 (datos -> ENTERO .)
    ID              reduce using rule 153 (datos -> ENTERO .)
    $end            reduce using rule 153 (datos -> ENTERO .)
    PYC             reduce using rule 153 (datos -> ENTERO .)
    LD              reduce using rule 153 (datos -> ENTERO .)
    PRINTLN         reduce using rule 153 (datos -> ENTERO .)
    PRINT           reduce using rule 153 (datos -> ENTERO .)
    MATCH           reduce using rule 153 (datos -> ENTERO .)
    IF              reduce using rule 153 (datos -> ENTERO .)
    WHILE           reduce using rule 153 (datos -> ENTERO .)
    RETURN          reduce using rule 153 (datos -> ENTERO .)
    LOOP            reduce using rule 153 (datos -> ENTERO .)
    GBAJO           reduce using rule 153 (datos -> ENTERO .)
    NOT             reduce using rule 153 (datos -> ENTERO .)
    PI              reduce using rule 153 (datos -> ENTERO .)
    POWF            reduce using rule 153 (datos -> ENTERO .)
    POW             reduce using rule 153 (datos -> ENTERO .)
    CI              reduce using rule 153 (datos -> ENTERO .)
    ENTERO          reduce using rule 153 (datos -> ENTERO .)
    FLOAT           reduce using rule 153 (datos -> ENTERO .)
    CADENA          reduce using rule 153 (datos -> ENTERO .)
    CARACTER        reduce using rule 153 (datos -> ENTERO .)
    TRUE            reduce using rule 153 (datos -> ENTERO .)
    FALSE           reduce using rule 153 (datos -> ENTERO .)
    IGUAL           reduce using rule 153 (datos -> ENTERO .)
    BARRA           reduce using rule 153 (datos -> ENTERO .)
    COMA            reduce using rule 153 (datos -> ENTERO .)
    PD              reduce using rule 153 (datos -> ENTERO .)
    LI              reduce using rule 153 (datos -> ENTERO .)
    CD              reduce using rule 153 (datos -> ENTERO .)
    BREAK           reduce using rule 153 (datos -> ENTERO .)
    CONTINUE        reduce using rule 153 (datos -> ENTERO .)


state 44

    (154) datos -> FLOAT .

    PUNTO           reduce using rule 154 (datos -> FLOAT .)
    OR              reduce using rule 154 (datos -> FLOAT .)
    AND             reduce using rule 154 (datos -> FLOAT .)
    MAYORIGUAL      reduce using rule 154 (datos -> FLOAT .)
    MAYOR           reduce using rule 154 (datos -> FLOAT .)
    MENORIGUAL      reduce using rule 154 (datos -> FLOAT .)
    MENOR           reduce using rule 154 (datos -> FLOAT .)
    IGUALDAD        reduce using rule 154 (datos -> FLOAT .)
    DESIGUALDAD     reduce using rule 154 (datos -> FLOAT .)
    RESTA           reduce using rule 154 (datos -> FLOAT .)
    SUMA            reduce using rule 154 (datos -> FLOAT .)
    MULTI           reduce using rule 154 (datos -> FLOAT .)
    DIVI            reduce using rule 154 (datos -> FLOAT .)
    MODULO          reduce using rule 154 (datos -> FLOAT .)
    AS              reduce using rule 154 (datos -> FLOAT .)
    FUNCION         reduce using rule 154 (datos -> FLOAT .)
    LET             reduce using rule 154 (datos -> FLOAT .)
    ID              reduce using rule 154 (datos -> FLOAT .)
    $end            reduce using rule 154 (datos -> FLOAT .)
    PYC             reduce using rule 154 (datos -> FLOAT .)
    LD              reduce using rule 154 (datos -> FLOAT .)
    PRINTLN         reduce using rule 154 (datos -> FLOAT .)
    PRINT           reduce using rule 154 (datos -> FLOAT .)
    MATCH           reduce using rule 154 (datos -> FLOAT .)
    IF              reduce using rule 154 (datos -> FLOAT .)
    WHILE           reduce using rule 154 (datos -> FLOAT .)
    RETURN          reduce using rule 154 (datos -> FLOAT .)
    LOOP            reduce using rule 154 (datos -> FLOAT .)
    GBAJO           reduce using rule 154 (datos -> FLOAT .)
    NOT             reduce using rule 154 (datos -> FLOAT .)
    PI              reduce using rule 154 (datos -> FLOAT .)
    POWF            reduce using rule 154 (datos -> FLOAT .)
    POW             reduce using rule 154 (datos -> FLOAT .)
    CI              reduce using rule 154 (datos -> FLOAT .)
    ENTERO          reduce using rule 154 (datos -> FLOAT .)
    FLOAT           reduce using rule 154 (datos -> FLOAT .)
    CADENA          reduce using rule 154 (datos -> FLOAT .)
    CARACTER        reduce using rule 154 (datos -> FLOAT .)
    TRUE            reduce using rule 154 (datos -> FLOAT .)
    FALSE           reduce using rule 154 (datos -> FLOAT .)
    IGUAL           reduce using rule 154 (datos -> FLOAT .)
    BARRA           reduce using rule 154 (datos -> FLOAT .)
    COMA            reduce using rule 154 (datos -> FLOAT .)
    PD              reduce using rule 154 (datos -> FLOAT .)
    LI              reduce using rule 154 (datos -> FLOAT .)
    CD              reduce using rule 154 (datos -> FLOAT .)
    BREAK           reduce using rule 154 (datos -> FLOAT .)
    CONTINUE        reduce using rule 154 (datos -> FLOAT .)


state 45

    (155) datos -> CADENA .

    PUNTO           reduce using rule 155 (datos -> CADENA .)
    OR              reduce using rule 155 (datos -> CADENA .)
    AND             reduce using rule 155 (datos -> CADENA .)
    MAYORIGUAL      reduce using rule 155 (datos -> CADENA .)
    MAYOR           reduce using rule 155 (datos -> CADENA .)
    MENORIGUAL      reduce using rule 155 (datos -> CADENA .)
    MENOR           reduce using rule 155 (datos -> CADENA .)
    IGUALDAD        reduce using rule 155 (datos -> CADENA .)
    DESIGUALDAD     reduce using rule 155 (datos -> CADENA .)
    RESTA           reduce using rule 155 (datos -> CADENA .)
    SUMA            reduce using rule 155 (datos -> CADENA .)
    MULTI           reduce using rule 155 (datos -> CADENA .)
    DIVI            reduce using rule 155 (datos -> CADENA .)
    MODULO          reduce using rule 155 (datos -> CADENA .)
    AS              reduce using rule 155 (datos -> CADENA .)
    FUNCION         reduce using rule 155 (datos -> CADENA .)
    LET             reduce using rule 155 (datos -> CADENA .)
    ID              reduce using rule 155 (datos -> CADENA .)
    $end            reduce using rule 155 (datos -> CADENA .)
    PYC             reduce using rule 155 (datos -> CADENA .)
    LD              reduce using rule 155 (datos -> CADENA .)
    PRINTLN         reduce using rule 155 (datos -> CADENA .)
    PRINT           reduce using rule 155 (datos -> CADENA .)
    MATCH           reduce using rule 155 (datos -> CADENA .)
    IF              reduce using rule 155 (datos -> CADENA .)
    WHILE           reduce using rule 155 (datos -> CADENA .)
    RETURN          reduce using rule 155 (datos -> CADENA .)
    LOOP            reduce using rule 155 (datos -> CADENA .)
    GBAJO           reduce using rule 155 (datos -> CADENA .)
    NOT             reduce using rule 155 (datos -> CADENA .)
    PI              reduce using rule 155 (datos -> CADENA .)
    POWF            reduce using rule 155 (datos -> CADENA .)
    POW             reduce using rule 155 (datos -> CADENA .)
    CI              reduce using rule 155 (datos -> CADENA .)
    ENTERO          reduce using rule 155 (datos -> CADENA .)
    FLOAT           reduce using rule 155 (datos -> CADENA .)
    CADENA          reduce using rule 155 (datos -> CADENA .)
    CARACTER        reduce using rule 155 (datos -> CADENA .)
    TRUE            reduce using rule 155 (datos -> CADENA .)
    FALSE           reduce using rule 155 (datos -> CADENA .)
    IGUAL           reduce using rule 155 (datos -> CADENA .)
    BARRA           reduce using rule 155 (datos -> CADENA .)
    COMA            reduce using rule 155 (datos -> CADENA .)
    PD              reduce using rule 155 (datos -> CADENA .)
    LI              reduce using rule 155 (datos -> CADENA .)
    CD              reduce using rule 155 (datos -> CADENA .)
    BREAK           reduce using rule 155 (datos -> CADENA .)
    CONTINUE        reduce using rule 155 (datos -> CADENA .)


state 46

    (156) datos -> CARACTER .

    PUNTO           reduce using rule 156 (datos -> CARACTER .)
    OR              reduce using rule 156 (datos -> CARACTER .)
    AND             reduce using rule 156 (datos -> CARACTER .)
    MAYORIGUAL      reduce using rule 156 (datos -> CARACTER .)
    MAYOR           reduce using rule 156 (datos -> CARACTER .)
    MENORIGUAL      reduce using rule 156 (datos -> CARACTER .)
    MENOR           reduce using rule 156 (datos -> CARACTER .)
    IGUALDAD        reduce using rule 156 (datos -> CARACTER .)
    DESIGUALDAD     reduce using rule 156 (datos -> CARACTER .)
    RESTA           reduce using rule 156 (datos -> CARACTER .)
    SUMA            reduce using rule 156 (datos -> CARACTER .)
    MULTI           reduce using rule 156 (datos -> CARACTER .)
    DIVI            reduce using rule 156 (datos -> CARACTER .)
    MODULO          reduce using rule 156 (datos -> CARACTER .)
    AS              reduce using rule 156 (datos -> CARACTER .)
    FUNCION         reduce using rule 156 (datos -> CARACTER .)
    LET             reduce using rule 156 (datos -> CARACTER .)
    ID              reduce using rule 156 (datos -> CARACTER .)
    $end            reduce using rule 156 (datos -> CARACTER .)
    PYC             reduce using rule 156 (datos -> CARACTER .)
    LD              reduce using rule 156 (datos -> CARACTER .)
    PRINTLN         reduce using rule 156 (datos -> CARACTER .)
    PRINT           reduce using rule 156 (datos -> CARACTER .)
    MATCH           reduce using rule 156 (datos -> CARACTER .)
    IF              reduce using rule 156 (datos -> CARACTER .)
    WHILE           reduce using rule 156 (datos -> CARACTER .)
    RETURN          reduce using rule 156 (datos -> CARACTER .)
    LOOP            reduce using rule 156 (datos -> CARACTER .)
    GBAJO           reduce using rule 156 (datos -> CARACTER .)
    NOT             reduce using rule 156 (datos -> CARACTER .)
    PI              reduce using rule 156 (datos -> CARACTER .)
    POWF            reduce using rule 156 (datos -> CARACTER .)
    POW             reduce using rule 156 (datos -> CARACTER .)
    CI              reduce using rule 156 (datos -> CARACTER .)
    ENTERO          reduce using rule 156 (datos -> CARACTER .)
    FLOAT           reduce using rule 156 (datos -> CARACTER .)
    CADENA          reduce using rule 156 (datos -> CARACTER .)
    CARACTER        reduce using rule 156 (datos -> CARACTER .)
    TRUE            reduce using rule 156 (datos -> CARACTER .)
    FALSE           reduce using rule 156 (datos -> CARACTER .)
    IGUAL           reduce using rule 156 (datos -> CARACTER .)
    BARRA           reduce using rule 156 (datos -> CARACTER .)
    COMA            reduce using rule 156 (datos -> CARACTER .)
    PD              reduce using rule 156 (datos -> CARACTER .)
    LI              reduce using rule 156 (datos -> CARACTER .)
    CD              reduce using rule 156 (datos -> CARACTER .)
    BREAK           reduce using rule 156 (datos -> CARACTER .)
    CONTINUE        reduce using rule 156 (datos -> CARACTER .)


state 47

    (158) datos -> TRUE .

    PUNTO           reduce using rule 158 (datos -> TRUE .)
    OR              reduce using rule 158 (datos -> TRUE .)
    AND             reduce using rule 158 (datos -> TRUE .)
    MAYORIGUAL      reduce using rule 158 (datos -> TRUE .)
    MAYOR           reduce using rule 158 (datos -> TRUE .)
    MENORIGUAL      reduce using rule 158 (datos -> TRUE .)
    MENOR           reduce using rule 158 (datos -> TRUE .)
    IGUALDAD        reduce using rule 158 (datos -> TRUE .)
    DESIGUALDAD     reduce using rule 158 (datos -> TRUE .)
    RESTA           reduce using rule 158 (datos -> TRUE .)
    SUMA            reduce using rule 158 (datos -> TRUE .)
    MULTI           reduce using rule 158 (datos -> TRUE .)
    DIVI            reduce using rule 158 (datos -> TRUE .)
    MODULO          reduce using rule 158 (datos -> TRUE .)
    AS              reduce using rule 158 (datos -> TRUE .)
    FUNCION         reduce using rule 158 (datos -> TRUE .)
    LET             reduce using rule 158 (datos -> TRUE .)
    ID              reduce using rule 158 (datos -> TRUE .)
    $end            reduce using rule 158 (datos -> TRUE .)
    PYC             reduce using rule 158 (datos -> TRUE .)
    LD              reduce using rule 158 (datos -> TRUE .)
    PRINTLN         reduce using rule 158 (datos -> TRUE .)
    PRINT           reduce using rule 158 (datos -> TRUE .)
    MATCH           reduce using rule 158 (datos -> TRUE .)
    IF              reduce using rule 158 (datos -> TRUE .)
    WHILE           reduce using rule 158 (datos -> TRUE .)
    RETURN          reduce using rule 158 (datos -> TRUE .)
    LOOP            reduce using rule 158 (datos -> TRUE .)
    GBAJO           reduce using rule 158 (datos -> TRUE .)
    NOT             reduce using rule 158 (datos -> TRUE .)
    PI              reduce using rule 158 (datos -> TRUE .)
    POWF            reduce using rule 158 (datos -> TRUE .)
    POW             reduce using rule 158 (datos -> TRUE .)
    CI              reduce using rule 158 (datos -> TRUE .)
    ENTERO          reduce using rule 158 (datos -> TRUE .)
    FLOAT           reduce using rule 158 (datos -> TRUE .)
    CADENA          reduce using rule 158 (datos -> TRUE .)
    CARACTER        reduce using rule 158 (datos -> TRUE .)
    TRUE            reduce using rule 158 (datos -> TRUE .)
    FALSE           reduce using rule 158 (datos -> TRUE .)
    IGUAL           reduce using rule 158 (datos -> TRUE .)
    BARRA           reduce using rule 158 (datos -> TRUE .)
    COMA            reduce using rule 158 (datos -> TRUE .)
    PD              reduce using rule 158 (datos -> TRUE .)
    LI              reduce using rule 158 (datos -> TRUE .)
    CD              reduce using rule 158 (datos -> TRUE .)
    BREAK           reduce using rule 158 (datos -> TRUE .)
    CONTINUE        reduce using rule 158 (datos -> TRUE .)


state 48

    (159) datos -> FALSE .

    PUNTO           reduce using rule 159 (datos -> FALSE .)
    OR              reduce using rule 159 (datos -> FALSE .)
    AND             reduce using rule 159 (datos -> FALSE .)
    MAYORIGUAL      reduce using rule 159 (datos -> FALSE .)
    MAYOR           reduce using rule 159 (datos -> FALSE .)
    MENORIGUAL      reduce using rule 159 (datos -> FALSE .)
    MENOR           reduce using rule 159 (datos -> FALSE .)
    IGUALDAD        reduce using rule 159 (datos -> FALSE .)
    DESIGUALDAD     reduce using rule 159 (datos -> FALSE .)
    RESTA           reduce using rule 159 (datos -> FALSE .)
    SUMA            reduce using rule 159 (datos -> FALSE .)
    MULTI           reduce using rule 159 (datos -> FALSE .)
    DIVI            reduce using rule 159 (datos -> FALSE .)
    MODULO          reduce using rule 159 (datos -> FALSE .)
    AS              reduce using rule 159 (datos -> FALSE .)
    FUNCION         reduce using rule 159 (datos -> FALSE .)
    LET             reduce using rule 159 (datos -> FALSE .)
    ID              reduce using rule 159 (datos -> FALSE .)
    $end            reduce using rule 159 (datos -> FALSE .)
    PYC             reduce using rule 159 (datos -> FALSE .)
    LD              reduce using rule 159 (datos -> FALSE .)
    PRINTLN         reduce using rule 159 (datos -> FALSE .)
    PRINT           reduce using rule 159 (datos -> FALSE .)
    MATCH           reduce using rule 159 (datos -> FALSE .)
    IF              reduce using rule 159 (datos -> FALSE .)
    WHILE           reduce using rule 159 (datos -> FALSE .)
    RETURN          reduce using rule 159 (datos -> FALSE .)
    LOOP            reduce using rule 159 (datos -> FALSE .)
    GBAJO           reduce using rule 159 (datos -> FALSE .)
    NOT             reduce using rule 159 (datos -> FALSE .)
    PI              reduce using rule 159 (datos -> FALSE .)
    POWF            reduce using rule 159 (datos -> FALSE .)
    POW             reduce using rule 159 (datos -> FALSE .)
    CI              reduce using rule 159 (datos -> FALSE .)
    ENTERO          reduce using rule 159 (datos -> FALSE .)
    FLOAT           reduce using rule 159 (datos -> FALSE .)
    CADENA          reduce using rule 159 (datos -> FALSE .)
    CARACTER        reduce using rule 159 (datos -> FALSE .)
    TRUE            reduce using rule 159 (datos -> FALSE .)
    FALSE           reduce using rule 159 (datos -> FALSE .)
    IGUAL           reduce using rule 159 (datos -> FALSE .)
    BARRA           reduce using rule 159 (datos -> FALSE .)
    COMA            reduce using rule 159 (datos -> FALSE .)
    PD              reduce using rule 159 (datos -> FALSE .)
    LI              reduce using rule 159 (datos -> FALSE .)
    CD              reduce using rule 159 (datos -> FALSE .)
    BREAK           reduce using rule 159 (datos -> FALSE .)
    CONTINUE        reduce using rule 159 (datos -> FALSE .)


state 49

    (92) declaracion -> LET mutable ID . tipado PYC
    (93) declaracion -> LET mutable ID . tipado IGUAL expresiones PYC
    (35) declaracion_arreglo -> LET mutable ID . validacion_dimension IGUAL expresiones PYC
    (97) tipado -> . DP tipo_datos
    (98) tipado -> .
    (36) validacion_dimension -> . DP dimensiones_def

    DP              shift and go to state 87
    PYC             reduce using rule 98 (tipado -> .)
    IGUAL           reduce using rule 98 (tipado -> .)

    tipado                         shift and go to state 85
    validacion_dimension           shift and go to state 86

state 50

    (75) funcion -> FUNCION MAIN PI PD . LI lista_bloque LD

    LI              shift and go to state 88


state 51

    (81) definiciones -> ID . tipado
    (82) definiciones -> ID . tipados_tipos
    (97) tipado -> . DP tipo_datos
    (98) tipado -> .
    (83) tipados_tipos -> . DP REFERENCE dimensiones_def

    DP              shift and go to state 91
    PD              reduce using rule 98 (tipado -> .)
    COMA            reduce using rule 98 (tipado -> .)

    tipado                         shift and go to state 89
    tipados_tipos                  shift and go to state 90

state 52

    (76) funcion -> FUNCION ID PI PD . tipo_funcion LI lista_bloque LD
    (89) tipo_funcion -> . RESTA MAYOR tipo_datos
    (90) tipo_funcion -> . RESTA MAYOR VECTOR MENOR tipo_datos MAYOR
    (91) tipo_funcion -> .

    RESTA           shift and go to state 93
    LI              reduce using rule 91 (tipo_funcion -> .)

    tipo_funcion                   shift and go to state 92

state 53

    (77) funcion -> FUNCION ID PI parametros . PD tipo_funcion LI lista_bloque LD
    (78) parametros -> parametros . COMA definiciones

    PD              shift and go to state 94
    COMA            shift and go to state 95


state 54

    (79) parametros -> definiciones .

    PD              reduce using rule 79 (parametros -> definiciones .)
    COMA            reduce using rule 79 (parametros -> definiciones .)


state 55

    (80) definiciones -> MUT . ID tipado

    ID              shift and go to state 96


state 56

    (71) llamada -> ID PI . PD
    (72) llamada -> ID PI . lista_expres PD
    (73) lista_expres -> . lista_expres COMA expresiones
    (74) lista_expres -> . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for PD resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
    PD              shift and go to state 97
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! PD              [ reduce using rule 116 (expresiones -> .) ]

    lista_expres                   shift and go to state 98
    expresiones                    shift and go to state 99
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 57

    (39) acceso_arreglo -> ID dimensiones .
    (40) dimensiones -> dimensiones . dimension
    (42) dimension -> . CI expresiones CD

  ! shift/reduce conflict for CI resolved as shift
    PUNTO           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    OR              reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    AND             reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    MAYORIGUAL      reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    MAYOR           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    MENORIGUAL      reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    MENOR           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    IGUALDAD        reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    DESIGUALDAD     reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    RESTA           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    SUMA            reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    MULTI           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    DIVI            reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    MODULO          reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    AS              reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    FUNCION         reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    LET             reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    ID              reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    $end            reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    PYC             reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    LD              reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    PRINTLN         reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    PRINT           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    MATCH           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    IF              reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    WHILE           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    RETURN          reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    LOOP            reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    GBAJO           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    NOT             reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    PI              reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    POWF            reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    POW             reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    ENTERO          reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    FLOAT           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    CADENA          reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    CARACTER        reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    TRUE            reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    FALSE           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    IGUAL           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    BARRA           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    COMA            reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    PD              reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    LI              reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    CD              reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    BREAK           reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    CONTINUE        reduce using rule 39 (acceso_arreglo -> ID dimensiones .)
    CI              shift and go to state 59

  ! CI              [ reduce using rule 39 (acceso_arreglo -> ID dimensiones .) ]

    dimension                      shift and go to state 100

state 58

    (41) dimensiones -> dimension .

    CI              reduce using rule 41 (dimensiones -> dimension .)
    PUNTO           reduce using rule 41 (dimensiones -> dimension .)
    OR              reduce using rule 41 (dimensiones -> dimension .)
    AND             reduce using rule 41 (dimensiones -> dimension .)
    MAYORIGUAL      reduce using rule 41 (dimensiones -> dimension .)
    MAYOR           reduce using rule 41 (dimensiones -> dimension .)
    MENORIGUAL      reduce using rule 41 (dimensiones -> dimension .)
    MENOR           reduce using rule 41 (dimensiones -> dimension .)
    IGUALDAD        reduce using rule 41 (dimensiones -> dimension .)
    DESIGUALDAD     reduce using rule 41 (dimensiones -> dimension .)
    RESTA           reduce using rule 41 (dimensiones -> dimension .)
    SUMA            reduce using rule 41 (dimensiones -> dimension .)
    MULTI           reduce using rule 41 (dimensiones -> dimension .)
    DIVI            reduce using rule 41 (dimensiones -> dimension .)
    MODULO          reduce using rule 41 (dimensiones -> dimension .)
    AS              reduce using rule 41 (dimensiones -> dimension .)
    FUNCION         reduce using rule 41 (dimensiones -> dimension .)
    LET             reduce using rule 41 (dimensiones -> dimension .)
    ID              reduce using rule 41 (dimensiones -> dimension .)
    $end            reduce using rule 41 (dimensiones -> dimension .)
    PYC             reduce using rule 41 (dimensiones -> dimension .)
    LD              reduce using rule 41 (dimensiones -> dimension .)
    PRINTLN         reduce using rule 41 (dimensiones -> dimension .)
    PRINT           reduce using rule 41 (dimensiones -> dimension .)
    MATCH           reduce using rule 41 (dimensiones -> dimension .)
    IF              reduce using rule 41 (dimensiones -> dimension .)
    WHILE           reduce using rule 41 (dimensiones -> dimension .)
    RETURN          reduce using rule 41 (dimensiones -> dimension .)
    LOOP            reduce using rule 41 (dimensiones -> dimension .)
    GBAJO           reduce using rule 41 (dimensiones -> dimension .)
    NOT             reduce using rule 41 (dimensiones -> dimension .)
    PI              reduce using rule 41 (dimensiones -> dimension .)
    POWF            reduce using rule 41 (dimensiones -> dimension .)
    POW             reduce using rule 41 (dimensiones -> dimension .)
    ENTERO          reduce using rule 41 (dimensiones -> dimension .)
    FLOAT           reduce using rule 41 (dimensiones -> dimension .)
    CADENA          reduce using rule 41 (dimensiones -> dimension .)
    CARACTER        reduce using rule 41 (dimensiones -> dimension .)
    TRUE            reduce using rule 41 (dimensiones -> dimension .)
    FALSE           reduce using rule 41 (dimensiones -> dimension .)
    IGUAL           reduce using rule 41 (dimensiones -> dimension .)
    BARRA           reduce using rule 41 (dimensiones -> dimension .)
    COMA            reduce using rule 41 (dimensiones -> dimension .)
    PD              reduce using rule 41 (dimensiones -> dimension .)
    LI              reduce using rule 41 (dimensiones -> dimension .)
    CD              reduce using rule 41 (dimensiones -> dimension .)
    BREAK           reduce using rule 41 (dimensiones -> dimension .)
    CONTINUE        reduce using rule 41 (dimensiones -> dimension .)


state 59

    (42) dimension -> CI . expresiones CD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    CD              reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 101
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 60

    (127) funcion_nativa -> expresiones PUNTO . nativas
    (128) nativas -> . ABS
    (129) nativas -> . SQRT
    (130) nativas -> . TOSTRING
    (131) nativas -> . TOOWNED
    (132) nativas -> . CLONE

    ABS             shift and go to state 103
    SQRT            shift and go to state 104
    TOSTRING        shift and go to state 105
    TOOWNED         shift and go to state 106
    CLONE           shift and go to state 107

    nativas                        shift and go to state 102

state 61

    (133) expre_logica -> expresiones OR . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 108
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 62

    (134) expre_logica -> expresiones AND . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 109
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 63

    (136) expre_relacional -> expresiones MAYORIGUAL . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 110
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 64

    (137) expre_relacional -> expresiones MAYOR . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 111
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 65

    (138) expre_relacional -> expresiones MENORIGUAL . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 112
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 66

    (139) expre_relacional -> expresiones MENOR . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 113
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 67

    (140) expre_relacional -> expresiones IGUALDAD . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 114
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 68

    (141) expre_relacional -> expresiones DESIGUALDAD . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 115
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 69

    (144) expre_aritmetica -> expresiones RESTA . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 116
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 70

    (145) expre_aritmetica -> expresiones SUMA . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 117
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 71

    (146) expre_aritmetica -> expresiones MULTI . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 118
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 72

    (147) expre_aritmetica -> expresiones DIVI . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 119
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 73

    (148) expre_aritmetica -> expresiones MODULO . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    FUNCION         reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    $end            reduce using rule 116 (expresiones -> .)
    PYC             reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    GBAJO           reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    LI              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 120
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 74

    (152) datos_cast -> expresiones AS . tipo_datos
    (99) tipo_datos -> . TIPOINT
    (100) tipo_datos -> . TIPOFLOAT
    (101) tipo_datos -> . TIPOCHAR
    (102) tipo_datos -> . TIPOSTRING
    (103) tipo_datos -> . DIRSTRING
    (104) tipo_datos -> . TIPOBOOL

    TIPOINT         shift and go to state 122
    TIPOFLOAT       shift and go to state 123
    TIPOCHAR        shift and go to state 124
    TIPOSTRING      shift and go to state 125
    DIRSTRING       shift and go to state 126
    TIPOBOOL        shift and go to state 127

    tipo_datos                     shift and go to state 121

state 75

    (135) expre_logica -> NOT expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 135 (expre_logica -> NOT expresiones .)
    OR              reduce using rule 135 (expre_logica -> NOT expresiones .)
    AND             reduce using rule 135 (expre_logica -> NOT expresiones .)
    MAYORIGUAL      reduce using rule 135 (expre_logica -> NOT expresiones .)
    MAYOR           reduce using rule 135 (expre_logica -> NOT expresiones .)
    MENORIGUAL      reduce using rule 135 (expre_logica -> NOT expresiones .)
    MENOR           reduce using rule 135 (expre_logica -> NOT expresiones .)
    IGUALDAD        reduce using rule 135 (expre_logica -> NOT expresiones .)
    DESIGUALDAD     reduce using rule 135 (expre_logica -> NOT expresiones .)
    RESTA           reduce using rule 135 (expre_logica -> NOT expresiones .)
    SUMA            reduce using rule 135 (expre_logica -> NOT expresiones .)
    MULTI           reduce using rule 135 (expre_logica -> NOT expresiones .)
    DIVI            reduce using rule 135 (expre_logica -> NOT expresiones .)
    MODULO          reduce using rule 135 (expre_logica -> NOT expresiones .)
    AS              reduce using rule 135 (expre_logica -> NOT expresiones .)
    FUNCION         reduce using rule 135 (expre_logica -> NOT expresiones .)
    LET             reduce using rule 135 (expre_logica -> NOT expresiones .)
    ID              reduce using rule 135 (expre_logica -> NOT expresiones .)
    $end            reduce using rule 135 (expre_logica -> NOT expresiones .)
    PYC             reduce using rule 135 (expre_logica -> NOT expresiones .)
    LD              reduce using rule 135 (expre_logica -> NOT expresiones .)
    PRINTLN         reduce using rule 135 (expre_logica -> NOT expresiones .)
    PRINT           reduce using rule 135 (expre_logica -> NOT expresiones .)
    MATCH           reduce using rule 135 (expre_logica -> NOT expresiones .)
    IF              reduce using rule 135 (expre_logica -> NOT expresiones .)
    WHILE           reduce using rule 135 (expre_logica -> NOT expresiones .)
    RETURN          reduce using rule 135 (expre_logica -> NOT expresiones .)
    LOOP            reduce using rule 135 (expre_logica -> NOT expresiones .)
    GBAJO           reduce using rule 135 (expre_logica -> NOT expresiones .)
    NOT             reduce using rule 135 (expre_logica -> NOT expresiones .)
    PI              reduce using rule 135 (expre_logica -> NOT expresiones .)
    POWF            reduce using rule 135 (expre_logica -> NOT expresiones .)
    POW             reduce using rule 135 (expre_logica -> NOT expresiones .)
    CI              reduce using rule 135 (expre_logica -> NOT expresiones .)
    ENTERO          reduce using rule 135 (expre_logica -> NOT expresiones .)
    FLOAT           reduce using rule 135 (expre_logica -> NOT expresiones .)
    CADENA          reduce using rule 135 (expre_logica -> NOT expresiones .)
    CARACTER        reduce using rule 135 (expre_logica -> NOT expresiones .)
    TRUE            reduce using rule 135 (expre_logica -> NOT expresiones .)
    FALSE           reduce using rule 135 (expre_logica -> NOT expresiones .)
    IGUAL           reduce using rule 135 (expre_logica -> NOT expresiones .)
    BARRA           reduce using rule 135 (expre_logica -> NOT expresiones .)
    COMA            reduce using rule 135 (expre_logica -> NOT expresiones .)
    PD              reduce using rule 135 (expre_logica -> NOT expresiones .)
    LI              reduce using rule 135 (expre_logica -> NOT expresiones .)
    CD              reduce using rule 135 (expre_logica -> NOT expresiones .)
    BREAK           reduce using rule 135 (expre_logica -> NOT expresiones .)
    CONTINUE        reduce using rule 135 (expre_logica -> NOT expresiones .)

  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! RESTA           [ shift and go to state 69 ]
  ! SUMA            [ shift and go to state 70 ]
  ! MULTI           [ shift and go to state 71 ]
  ! DIVI            [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 73 ]
  ! AS              [ shift and go to state 74 ]


state 76

    (142) expre_aritmetica -> RESTA expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    OR              reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    AND             reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    MAYORIGUAL      reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    MAYOR           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    MENORIGUAL      reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    MENOR           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    IGUALDAD        reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    DESIGUALDAD     reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    RESTA           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    SUMA            reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    MULTI           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    DIVI            reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    MODULO          reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    AS              reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    FUNCION         reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    LET             reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    ID              reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    $end            reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    PYC             reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    LD              reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    PRINTLN         reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    PRINT           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    MATCH           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    IF              reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    WHILE           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    RETURN          reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    LOOP            reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    GBAJO           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    NOT             reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    PI              reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    POWF            reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    POW             reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    CI              reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    ENTERO          reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    FLOAT           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    CADENA          reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    CARACTER        reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    TRUE            reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    FALSE           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    IGUAL           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    BARRA           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    COMA            reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    PD              reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    LI              reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    CD              reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    BREAK           reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)
    CONTINUE        reduce using rule 142 (expre_aritmetica -> RESTA expresiones .)

  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! RESTA           [ shift and go to state 69 ]
  ! SUMA            [ shift and go to state 70 ]
  ! MULTI           [ shift and go to state 71 ]
  ! DIVI            [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 73 ]
  ! AS              [ shift and go to state 74 ]


state 77

    (143) expre_aritmetica -> PI expresiones . PD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PD              shift and go to state 128
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 78

    (149) expre_aritmetica -> POWF PI . expresiones COMA expresiones PD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    COMA            reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 129
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 79

    (150) expre_aritmetica -> POW PI . expresiones COMA expresiones PD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    COMA            reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 130
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 80

    (59) start_match -> MATCH expresiones . LI matches LD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    LI              shift and go to state 131
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 81

    (52) start_if -> IF expresiones . LI list_exp_ins LD
    (53) start_if -> IF expresiones . LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> IF expresiones . LI list_exp_ins LD lista_elif
    (55) start_if -> IF expresiones . LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    LI              shift and go to state 132
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 82

    (43) start_loop -> LOOP LI . lista_bloque LD
    (8) lista_bloque -> . lista_bloque bloque
    (9) lista_bloque -> . bloque
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (39) acceso_arreglo -> . ID dimensiones

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 150
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41

  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]

    lista_bloque                   shift and go to state 133
    bloque                         shift and go to state 134
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 138
    start_match                    shift and go to state 139
    start_if                       shift and go to state 140
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 145
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    acceso_arreglo                 shift and go to state 155

state 83

    (124) arreglo_init -> CI lista_Expresiones . CD
    (125) lista_Expresiones -> lista_Expresiones . COMA expresiones

    CD              shift and go to state 156
    COMA            shift and go to state 157


state 84

    (126) lista_Expresiones -> expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    CD              reduce using rule 126 (lista_Expresiones -> expresiones .)
    COMA            reduce using rule 126 (lista_Expresiones -> expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 85

    (92) declaracion -> LET mutable ID tipado . PYC
    (93) declaracion -> LET mutable ID tipado . IGUAL expresiones PYC

    PYC             shift and go to state 158
    IGUAL           shift and go to state 159


state 86

    (35) declaracion_arreglo -> LET mutable ID validacion_dimension . IGUAL expresiones PYC

    IGUAL           shift and go to state 160


state 87

    (97) tipado -> DP . tipo_datos
    (36) validacion_dimension -> DP . dimensiones_def
    (99) tipo_datos -> . TIPOINT
    (100) tipo_datos -> . TIPOFLOAT
    (101) tipo_datos -> . TIPOCHAR
    (102) tipo_datos -> . TIPOSTRING
    (103) tipo_datos -> . DIRSTRING
    (104) tipo_datos -> . TIPOBOOL
    (37) dimensiones_def -> . CI dimensiones_def PYC expresiones CD
    (38) dimensiones_def -> . CI tipo_datos PYC expresiones CD

    TIPOINT         shift and go to state 122
    TIPOFLOAT       shift and go to state 123
    TIPOCHAR        shift and go to state 124
    TIPOSTRING      shift and go to state 125
    DIRSTRING       shift and go to state 126
    TIPOBOOL        shift and go to state 127
    CI              shift and go to state 163

    tipo_datos                     shift and go to state 161
    dimensiones_def                shift and go to state 162

state 88

    (75) funcion -> FUNCION MAIN PI PD LI . lista_bloque LD
    (8) lista_bloque -> . lista_bloque bloque
    (9) lista_bloque -> . bloque
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (39) acceso_arreglo -> . ID dimensiones

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 150
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41

  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]

    lista_bloque                   shift and go to state 164
    bloque                         shift and go to state 134
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 138
    start_match                    shift and go to state 139
    start_if                       shift and go to state 140
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 145
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    acceso_arreglo                 shift and go to state 155

state 89

    (81) definiciones -> ID tipado .

    PD              reduce using rule 81 (definiciones -> ID tipado .)
    COMA            reduce using rule 81 (definiciones -> ID tipado .)


state 90

    (82) definiciones -> ID tipados_tipos .

    PD              reduce using rule 82 (definiciones -> ID tipados_tipos .)
    COMA            reduce using rule 82 (definiciones -> ID tipados_tipos .)


state 91

    (97) tipado -> DP . tipo_datos
    (83) tipados_tipos -> DP . REFERENCE dimensiones_def
    (99) tipo_datos -> . TIPOINT
    (100) tipo_datos -> . TIPOFLOAT
    (101) tipo_datos -> . TIPOCHAR
    (102) tipo_datos -> . TIPOSTRING
    (103) tipo_datos -> . DIRSTRING
    (104) tipo_datos -> . TIPOBOOL

    REFERENCE       shift and go to state 165
    TIPOINT         shift and go to state 122
    TIPOFLOAT       shift and go to state 123
    TIPOCHAR        shift and go to state 124
    TIPOSTRING      shift and go to state 125
    DIRSTRING       shift and go to state 126
    TIPOBOOL        shift and go to state 127

    tipo_datos                     shift and go to state 161

state 92

    (76) funcion -> FUNCION ID PI PD tipo_funcion . LI lista_bloque LD

    LI              shift and go to state 166


state 93

    (89) tipo_funcion -> RESTA . MAYOR tipo_datos
    (90) tipo_funcion -> RESTA . MAYOR VECTOR MENOR tipo_datos MAYOR

    MAYOR           shift and go to state 167


state 94

    (77) funcion -> FUNCION ID PI parametros PD . tipo_funcion LI lista_bloque LD
    (89) tipo_funcion -> . RESTA MAYOR tipo_datos
    (90) tipo_funcion -> . RESTA MAYOR VECTOR MENOR tipo_datos MAYOR
    (91) tipo_funcion -> .

    RESTA           shift and go to state 93
    LI              reduce using rule 91 (tipo_funcion -> .)

    tipo_funcion                   shift and go to state 168

state 95

    (78) parametros -> parametros COMA . definiciones
    (80) definiciones -> . MUT ID tipado
    (81) definiciones -> . ID tipado
    (82) definiciones -> . ID tipados_tipos

    MUT             shift and go to state 55
    ID              shift and go to state 51

    definiciones                   shift and go to state 169

state 96

    (80) definiciones -> MUT ID . tipado
    (97) tipado -> . DP tipo_datos
    (98) tipado -> .

    DP              shift and go to state 171
    PD              reduce using rule 98 (tipado -> .)
    COMA            reduce using rule 98 (tipado -> .)

    tipado                         shift and go to state 170

state 97

    (71) llamada -> ID PI PD .

    PUNTO           reduce using rule 71 (llamada -> ID PI PD .)
    OR              reduce using rule 71 (llamada -> ID PI PD .)
    AND             reduce using rule 71 (llamada -> ID PI PD .)
    MAYORIGUAL      reduce using rule 71 (llamada -> ID PI PD .)
    MAYOR           reduce using rule 71 (llamada -> ID PI PD .)
    MENORIGUAL      reduce using rule 71 (llamada -> ID PI PD .)
    MENOR           reduce using rule 71 (llamada -> ID PI PD .)
    IGUALDAD        reduce using rule 71 (llamada -> ID PI PD .)
    DESIGUALDAD     reduce using rule 71 (llamada -> ID PI PD .)
    RESTA           reduce using rule 71 (llamada -> ID PI PD .)
    SUMA            reduce using rule 71 (llamada -> ID PI PD .)
    MULTI           reduce using rule 71 (llamada -> ID PI PD .)
    DIVI            reduce using rule 71 (llamada -> ID PI PD .)
    MODULO          reduce using rule 71 (llamada -> ID PI PD .)
    AS              reduce using rule 71 (llamada -> ID PI PD .)
    FUNCION         reduce using rule 71 (llamada -> ID PI PD .)
    LET             reduce using rule 71 (llamada -> ID PI PD .)
    ID              reduce using rule 71 (llamada -> ID PI PD .)
    $end            reduce using rule 71 (llamada -> ID PI PD .)
    PYC             reduce using rule 71 (llamada -> ID PI PD .)
    LD              reduce using rule 71 (llamada -> ID PI PD .)
    PRINTLN         reduce using rule 71 (llamada -> ID PI PD .)
    PRINT           reduce using rule 71 (llamada -> ID PI PD .)
    MATCH           reduce using rule 71 (llamada -> ID PI PD .)
    IF              reduce using rule 71 (llamada -> ID PI PD .)
    WHILE           reduce using rule 71 (llamada -> ID PI PD .)
    RETURN          reduce using rule 71 (llamada -> ID PI PD .)
    LOOP            reduce using rule 71 (llamada -> ID PI PD .)
    GBAJO           reduce using rule 71 (llamada -> ID PI PD .)
    NOT             reduce using rule 71 (llamada -> ID PI PD .)
    PI              reduce using rule 71 (llamada -> ID PI PD .)
    POWF            reduce using rule 71 (llamada -> ID PI PD .)
    POW             reduce using rule 71 (llamada -> ID PI PD .)
    CI              reduce using rule 71 (llamada -> ID PI PD .)
    ENTERO          reduce using rule 71 (llamada -> ID PI PD .)
    FLOAT           reduce using rule 71 (llamada -> ID PI PD .)
    CADENA          reduce using rule 71 (llamada -> ID PI PD .)
    CARACTER        reduce using rule 71 (llamada -> ID PI PD .)
    TRUE            reduce using rule 71 (llamada -> ID PI PD .)
    FALSE           reduce using rule 71 (llamada -> ID PI PD .)
    IGUAL           reduce using rule 71 (llamada -> ID PI PD .)
    BARRA           reduce using rule 71 (llamada -> ID PI PD .)
    COMA            reduce using rule 71 (llamada -> ID PI PD .)
    PD              reduce using rule 71 (llamada -> ID PI PD .)
    LI              reduce using rule 71 (llamada -> ID PI PD .)
    CD              reduce using rule 71 (llamada -> ID PI PD .)
    BREAK           reduce using rule 71 (llamada -> ID PI PD .)
    CONTINUE        reduce using rule 71 (llamada -> ID PI PD .)


state 98

    (72) llamada -> ID PI lista_expres . PD
    (73) lista_expres -> lista_expres . COMA expresiones

    PD              shift and go to state 172
    COMA            shift and go to state 173


state 99

    (74) lista_expres -> expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PD              reduce using rule 74 (lista_expres -> expresiones .)
    COMA            reduce using rule 74 (lista_expres -> expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 100

    (40) dimensiones -> dimensiones dimension .

    CI              reduce using rule 40 (dimensiones -> dimensiones dimension .)
    PUNTO           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    OR              reduce using rule 40 (dimensiones -> dimensiones dimension .)
    AND             reduce using rule 40 (dimensiones -> dimensiones dimension .)
    MAYORIGUAL      reduce using rule 40 (dimensiones -> dimensiones dimension .)
    MAYOR           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    MENORIGUAL      reduce using rule 40 (dimensiones -> dimensiones dimension .)
    MENOR           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    IGUALDAD        reduce using rule 40 (dimensiones -> dimensiones dimension .)
    DESIGUALDAD     reduce using rule 40 (dimensiones -> dimensiones dimension .)
    RESTA           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    SUMA            reduce using rule 40 (dimensiones -> dimensiones dimension .)
    MULTI           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    DIVI            reduce using rule 40 (dimensiones -> dimensiones dimension .)
    MODULO          reduce using rule 40 (dimensiones -> dimensiones dimension .)
    AS              reduce using rule 40 (dimensiones -> dimensiones dimension .)
    FUNCION         reduce using rule 40 (dimensiones -> dimensiones dimension .)
    LET             reduce using rule 40 (dimensiones -> dimensiones dimension .)
    ID              reduce using rule 40 (dimensiones -> dimensiones dimension .)
    $end            reduce using rule 40 (dimensiones -> dimensiones dimension .)
    PYC             reduce using rule 40 (dimensiones -> dimensiones dimension .)
    LD              reduce using rule 40 (dimensiones -> dimensiones dimension .)
    PRINTLN         reduce using rule 40 (dimensiones -> dimensiones dimension .)
    PRINT           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    MATCH           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    IF              reduce using rule 40 (dimensiones -> dimensiones dimension .)
    WHILE           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    RETURN          reduce using rule 40 (dimensiones -> dimensiones dimension .)
    LOOP            reduce using rule 40 (dimensiones -> dimensiones dimension .)
    GBAJO           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    NOT             reduce using rule 40 (dimensiones -> dimensiones dimension .)
    PI              reduce using rule 40 (dimensiones -> dimensiones dimension .)
    POWF            reduce using rule 40 (dimensiones -> dimensiones dimension .)
    POW             reduce using rule 40 (dimensiones -> dimensiones dimension .)
    ENTERO          reduce using rule 40 (dimensiones -> dimensiones dimension .)
    FLOAT           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    CADENA          reduce using rule 40 (dimensiones -> dimensiones dimension .)
    CARACTER        reduce using rule 40 (dimensiones -> dimensiones dimension .)
    TRUE            reduce using rule 40 (dimensiones -> dimensiones dimension .)
    FALSE           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    IGUAL           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    BARRA           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    COMA            reduce using rule 40 (dimensiones -> dimensiones dimension .)
    PD              reduce using rule 40 (dimensiones -> dimensiones dimension .)
    LI              reduce using rule 40 (dimensiones -> dimensiones dimension .)
    CD              reduce using rule 40 (dimensiones -> dimensiones dimension .)
    BREAK           reduce using rule 40 (dimensiones -> dimensiones dimension .)
    CONTINUE        reduce using rule 40 (dimensiones -> dimensiones dimension .)


state 101

    (42) dimension -> CI expresiones . CD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    CD              shift and go to state 174
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 102

    (127) funcion_nativa -> expresiones PUNTO nativas .

    PUNTO           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    OR              reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    AND             reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    MAYORIGUAL      reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    MAYOR           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    MENORIGUAL      reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    MENOR           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    IGUALDAD        reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    DESIGUALDAD     reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    RESTA           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    SUMA            reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    MULTI           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    DIVI            reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    MODULO          reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    AS              reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    FUNCION         reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    LET             reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    ID              reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    $end            reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    PYC             reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    LD              reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    PRINTLN         reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    PRINT           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    MATCH           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    IF              reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    WHILE           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    RETURN          reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    LOOP            reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    GBAJO           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    NOT             reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    PI              reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    POWF            reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    POW             reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    CI              reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    ENTERO          reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    FLOAT           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    CADENA          reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    CARACTER        reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    TRUE            reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    FALSE           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    IGUAL           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    BARRA           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    COMA            reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    PD              reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    LI              reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    CD              reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    BREAK           reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)
    CONTINUE        reduce using rule 127 (funcion_nativa -> expresiones PUNTO nativas .)


state 103

    (128) nativas -> ABS .

    PUNTO           reduce using rule 128 (nativas -> ABS .)
    OR              reduce using rule 128 (nativas -> ABS .)
    AND             reduce using rule 128 (nativas -> ABS .)
    MAYORIGUAL      reduce using rule 128 (nativas -> ABS .)
    MAYOR           reduce using rule 128 (nativas -> ABS .)
    MENORIGUAL      reduce using rule 128 (nativas -> ABS .)
    MENOR           reduce using rule 128 (nativas -> ABS .)
    IGUALDAD        reduce using rule 128 (nativas -> ABS .)
    DESIGUALDAD     reduce using rule 128 (nativas -> ABS .)
    RESTA           reduce using rule 128 (nativas -> ABS .)
    SUMA            reduce using rule 128 (nativas -> ABS .)
    MULTI           reduce using rule 128 (nativas -> ABS .)
    DIVI            reduce using rule 128 (nativas -> ABS .)
    MODULO          reduce using rule 128 (nativas -> ABS .)
    AS              reduce using rule 128 (nativas -> ABS .)
    FUNCION         reduce using rule 128 (nativas -> ABS .)
    LET             reduce using rule 128 (nativas -> ABS .)
    ID              reduce using rule 128 (nativas -> ABS .)
    $end            reduce using rule 128 (nativas -> ABS .)
    PYC             reduce using rule 128 (nativas -> ABS .)
    LD              reduce using rule 128 (nativas -> ABS .)
    PRINTLN         reduce using rule 128 (nativas -> ABS .)
    PRINT           reduce using rule 128 (nativas -> ABS .)
    MATCH           reduce using rule 128 (nativas -> ABS .)
    IF              reduce using rule 128 (nativas -> ABS .)
    WHILE           reduce using rule 128 (nativas -> ABS .)
    RETURN          reduce using rule 128 (nativas -> ABS .)
    LOOP            reduce using rule 128 (nativas -> ABS .)
    GBAJO           reduce using rule 128 (nativas -> ABS .)
    NOT             reduce using rule 128 (nativas -> ABS .)
    PI              reduce using rule 128 (nativas -> ABS .)
    POWF            reduce using rule 128 (nativas -> ABS .)
    POW             reduce using rule 128 (nativas -> ABS .)
    CI              reduce using rule 128 (nativas -> ABS .)
    ENTERO          reduce using rule 128 (nativas -> ABS .)
    FLOAT           reduce using rule 128 (nativas -> ABS .)
    CADENA          reduce using rule 128 (nativas -> ABS .)
    CARACTER        reduce using rule 128 (nativas -> ABS .)
    TRUE            reduce using rule 128 (nativas -> ABS .)
    FALSE           reduce using rule 128 (nativas -> ABS .)
    IGUAL           reduce using rule 128 (nativas -> ABS .)
    BARRA           reduce using rule 128 (nativas -> ABS .)
    COMA            reduce using rule 128 (nativas -> ABS .)
    PD              reduce using rule 128 (nativas -> ABS .)
    LI              reduce using rule 128 (nativas -> ABS .)
    CD              reduce using rule 128 (nativas -> ABS .)
    BREAK           reduce using rule 128 (nativas -> ABS .)
    CONTINUE        reduce using rule 128 (nativas -> ABS .)


state 104

    (129) nativas -> SQRT .

    PUNTO           reduce using rule 129 (nativas -> SQRT .)
    OR              reduce using rule 129 (nativas -> SQRT .)
    AND             reduce using rule 129 (nativas -> SQRT .)
    MAYORIGUAL      reduce using rule 129 (nativas -> SQRT .)
    MAYOR           reduce using rule 129 (nativas -> SQRT .)
    MENORIGUAL      reduce using rule 129 (nativas -> SQRT .)
    MENOR           reduce using rule 129 (nativas -> SQRT .)
    IGUALDAD        reduce using rule 129 (nativas -> SQRT .)
    DESIGUALDAD     reduce using rule 129 (nativas -> SQRT .)
    RESTA           reduce using rule 129 (nativas -> SQRT .)
    SUMA            reduce using rule 129 (nativas -> SQRT .)
    MULTI           reduce using rule 129 (nativas -> SQRT .)
    DIVI            reduce using rule 129 (nativas -> SQRT .)
    MODULO          reduce using rule 129 (nativas -> SQRT .)
    AS              reduce using rule 129 (nativas -> SQRT .)
    FUNCION         reduce using rule 129 (nativas -> SQRT .)
    LET             reduce using rule 129 (nativas -> SQRT .)
    ID              reduce using rule 129 (nativas -> SQRT .)
    $end            reduce using rule 129 (nativas -> SQRT .)
    PYC             reduce using rule 129 (nativas -> SQRT .)
    LD              reduce using rule 129 (nativas -> SQRT .)
    PRINTLN         reduce using rule 129 (nativas -> SQRT .)
    PRINT           reduce using rule 129 (nativas -> SQRT .)
    MATCH           reduce using rule 129 (nativas -> SQRT .)
    IF              reduce using rule 129 (nativas -> SQRT .)
    WHILE           reduce using rule 129 (nativas -> SQRT .)
    RETURN          reduce using rule 129 (nativas -> SQRT .)
    LOOP            reduce using rule 129 (nativas -> SQRT .)
    GBAJO           reduce using rule 129 (nativas -> SQRT .)
    NOT             reduce using rule 129 (nativas -> SQRT .)
    PI              reduce using rule 129 (nativas -> SQRT .)
    POWF            reduce using rule 129 (nativas -> SQRT .)
    POW             reduce using rule 129 (nativas -> SQRT .)
    CI              reduce using rule 129 (nativas -> SQRT .)
    ENTERO          reduce using rule 129 (nativas -> SQRT .)
    FLOAT           reduce using rule 129 (nativas -> SQRT .)
    CADENA          reduce using rule 129 (nativas -> SQRT .)
    CARACTER        reduce using rule 129 (nativas -> SQRT .)
    TRUE            reduce using rule 129 (nativas -> SQRT .)
    FALSE           reduce using rule 129 (nativas -> SQRT .)
    IGUAL           reduce using rule 129 (nativas -> SQRT .)
    BARRA           reduce using rule 129 (nativas -> SQRT .)
    COMA            reduce using rule 129 (nativas -> SQRT .)
    PD              reduce using rule 129 (nativas -> SQRT .)
    LI              reduce using rule 129 (nativas -> SQRT .)
    CD              reduce using rule 129 (nativas -> SQRT .)
    BREAK           reduce using rule 129 (nativas -> SQRT .)
    CONTINUE        reduce using rule 129 (nativas -> SQRT .)


state 105

    (130) nativas -> TOSTRING .

    PUNTO           reduce using rule 130 (nativas -> TOSTRING .)
    OR              reduce using rule 130 (nativas -> TOSTRING .)
    AND             reduce using rule 130 (nativas -> TOSTRING .)
    MAYORIGUAL      reduce using rule 130 (nativas -> TOSTRING .)
    MAYOR           reduce using rule 130 (nativas -> TOSTRING .)
    MENORIGUAL      reduce using rule 130 (nativas -> TOSTRING .)
    MENOR           reduce using rule 130 (nativas -> TOSTRING .)
    IGUALDAD        reduce using rule 130 (nativas -> TOSTRING .)
    DESIGUALDAD     reduce using rule 130 (nativas -> TOSTRING .)
    RESTA           reduce using rule 130 (nativas -> TOSTRING .)
    SUMA            reduce using rule 130 (nativas -> TOSTRING .)
    MULTI           reduce using rule 130 (nativas -> TOSTRING .)
    DIVI            reduce using rule 130 (nativas -> TOSTRING .)
    MODULO          reduce using rule 130 (nativas -> TOSTRING .)
    AS              reduce using rule 130 (nativas -> TOSTRING .)
    FUNCION         reduce using rule 130 (nativas -> TOSTRING .)
    LET             reduce using rule 130 (nativas -> TOSTRING .)
    ID              reduce using rule 130 (nativas -> TOSTRING .)
    $end            reduce using rule 130 (nativas -> TOSTRING .)
    PYC             reduce using rule 130 (nativas -> TOSTRING .)
    LD              reduce using rule 130 (nativas -> TOSTRING .)
    PRINTLN         reduce using rule 130 (nativas -> TOSTRING .)
    PRINT           reduce using rule 130 (nativas -> TOSTRING .)
    MATCH           reduce using rule 130 (nativas -> TOSTRING .)
    IF              reduce using rule 130 (nativas -> TOSTRING .)
    WHILE           reduce using rule 130 (nativas -> TOSTRING .)
    RETURN          reduce using rule 130 (nativas -> TOSTRING .)
    LOOP            reduce using rule 130 (nativas -> TOSTRING .)
    GBAJO           reduce using rule 130 (nativas -> TOSTRING .)
    NOT             reduce using rule 130 (nativas -> TOSTRING .)
    PI              reduce using rule 130 (nativas -> TOSTRING .)
    POWF            reduce using rule 130 (nativas -> TOSTRING .)
    POW             reduce using rule 130 (nativas -> TOSTRING .)
    CI              reduce using rule 130 (nativas -> TOSTRING .)
    ENTERO          reduce using rule 130 (nativas -> TOSTRING .)
    FLOAT           reduce using rule 130 (nativas -> TOSTRING .)
    CADENA          reduce using rule 130 (nativas -> TOSTRING .)
    CARACTER        reduce using rule 130 (nativas -> TOSTRING .)
    TRUE            reduce using rule 130 (nativas -> TOSTRING .)
    FALSE           reduce using rule 130 (nativas -> TOSTRING .)
    IGUAL           reduce using rule 130 (nativas -> TOSTRING .)
    BARRA           reduce using rule 130 (nativas -> TOSTRING .)
    COMA            reduce using rule 130 (nativas -> TOSTRING .)
    PD              reduce using rule 130 (nativas -> TOSTRING .)
    LI              reduce using rule 130 (nativas -> TOSTRING .)
    CD              reduce using rule 130 (nativas -> TOSTRING .)
    BREAK           reduce using rule 130 (nativas -> TOSTRING .)
    CONTINUE        reduce using rule 130 (nativas -> TOSTRING .)


state 106

    (131) nativas -> TOOWNED .

    PUNTO           reduce using rule 131 (nativas -> TOOWNED .)
    OR              reduce using rule 131 (nativas -> TOOWNED .)
    AND             reduce using rule 131 (nativas -> TOOWNED .)
    MAYORIGUAL      reduce using rule 131 (nativas -> TOOWNED .)
    MAYOR           reduce using rule 131 (nativas -> TOOWNED .)
    MENORIGUAL      reduce using rule 131 (nativas -> TOOWNED .)
    MENOR           reduce using rule 131 (nativas -> TOOWNED .)
    IGUALDAD        reduce using rule 131 (nativas -> TOOWNED .)
    DESIGUALDAD     reduce using rule 131 (nativas -> TOOWNED .)
    RESTA           reduce using rule 131 (nativas -> TOOWNED .)
    SUMA            reduce using rule 131 (nativas -> TOOWNED .)
    MULTI           reduce using rule 131 (nativas -> TOOWNED .)
    DIVI            reduce using rule 131 (nativas -> TOOWNED .)
    MODULO          reduce using rule 131 (nativas -> TOOWNED .)
    AS              reduce using rule 131 (nativas -> TOOWNED .)
    FUNCION         reduce using rule 131 (nativas -> TOOWNED .)
    LET             reduce using rule 131 (nativas -> TOOWNED .)
    ID              reduce using rule 131 (nativas -> TOOWNED .)
    $end            reduce using rule 131 (nativas -> TOOWNED .)
    PYC             reduce using rule 131 (nativas -> TOOWNED .)
    LD              reduce using rule 131 (nativas -> TOOWNED .)
    PRINTLN         reduce using rule 131 (nativas -> TOOWNED .)
    PRINT           reduce using rule 131 (nativas -> TOOWNED .)
    MATCH           reduce using rule 131 (nativas -> TOOWNED .)
    IF              reduce using rule 131 (nativas -> TOOWNED .)
    WHILE           reduce using rule 131 (nativas -> TOOWNED .)
    RETURN          reduce using rule 131 (nativas -> TOOWNED .)
    LOOP            reduce using rule 131 (nativas -> TOOWNED .)
    GBAJO           reduce using rule 131 (nativas -> TOOWNED .)
    NOT             reduce using rule 131 (nativas -> TOOWNED .)
    PI              reduce using rule 131 (nativas -> TOOWNED .)
    POWF            reduce using rule 131 (nativas -> TOOWNED .)
    POW             reduce using rule 131 (nativas -> TOOWNED .)
    CI              reduce using rule 131 (nativas -> TOOWNED .)
    ENTERO          reduce using rule 131 (nativas -> TOOWNED .)
    FLOAT           reduce using rule 131 (nativas -> TOOWNED .)
    CADENA          reduce using rule 131 (nativas -> TOOWNED .)
    CARACTER        reduce using rule 131 (nativas -> TOOWNED .)
    TRUE            reduce using rule 131 (nativas -> TOOWNED .)
    FALSE           reduce using rule 131 (nativas -> TOOWNED .)
    IGUAL           reduce using rule 131 (nativas -> TOOWNED .)
    BARRA           reduce using rule 131 (nativas -> TOOWNED .)
    COMA            reduce using rule 131 (nativas -> TOOWNED .)
    PD              reduce using rule 131 (nativas -> TOOWNED .)
    LI              reduce using rule 131 (nativas -> TOOWNED .)
    CD              reduce using rule 131 (nativas -> TOOWNED .)
    BREAK           reduce using rule 131 (nativas -> TOOWNED .)
    CONTINUE        reduce using rule 131 (nativas -> TOOWNED .)


state 107

    (132) nativas -> CLONE .

    PUNTO           reduce using rule 132 (nativas -> CLONE .)
    OR              reduce using rule 132 (nativas -> CLONE .)
    AND             reduce using rule 132 (nativas -> CLONE .)
    MAYORIGUAL      reduce using rule 132 (nativas -> CLONE .)
    MAYOR           reduce using rule 132 (nativas -> CLONE .)
    MENORIGUAL      reduce using rule 132 (nativas -> CLONE .)
    MENOR           reduce using rule 132 (nativas -> CLONE .)
    IGUALDAD        reduce using rule 132 (nativas -> CLONE .)
    DESIGUALDAD     reduce using rule 132 (nativas -> CLONE .)
    RESTA           reduce using rule 132 (nativas -> CLONE .)
    SUMA            reduce using rule 132 (nativas -> CLONE .)
    MULTI           reduce using rule 132 (nativas -> CLONE .)
    DIVI            reduce using rule 132 (nativas -> CLONE .)
    MODULO          reduce using rule 132 (nativas -> CLONE .)
    AS              reduce using rule 132 (nativas -> CLONE .)
    FUNCION         reduce using rule 132 (nativas -> CLONE .)
    LET             reduce using rule 132 (nativas -> CLONE .)
    ID              reduce using rule 132 (nativas -> CLONE .)
    $end            reduce using rule 132 (nativas -> CLONE .)
    PYC             reduce using rule 132 (nativas -> CLONE .)
    LD              reduce using rule 132 (nativas -> CLONE .)
    PRINTLN         reduce using rule 132 (nativas -> CLONE .)
    PRINT           reduce using rule 132 (nativas -> CLONE .)
    MATCH           reduce using rule 132 (nativas -> CLONE .)
    IF              reduce using rule 132 (nativas -> CLONE .)
    WHILE           reduce using rule 132 (nativas -> CLONE .)
    RETURN          reduce using rule 132 (nativas -> CLONE .)
    LOOP            reduce using rule 132 (nativas -> CLONE .)
    GBAJO           reduce using rule 132 (nativas -> CLONE .)
    NOT             reduce using rule 132 (nativas -> CLONE .)
    PI              reduce using rule 132 (nativas -> CLONE .)
    POWF            reduce using rule 132 (nativas -> CLONE .)
    POW             reduce using rule 132 (nativas -> CLONE .)
    CI              reduce using rule 132 (nativas -> CLONE .)
    ENTERO          reduce using rule 132 (nativas -> CLONE .)
    FLOAT           reduce using rule 132 (nativas -> CLONE .)
    CADENA          reduce using rule 132 (nativas -> CLONE .)
    CARACTER        reduce using rule 132 (nativas -> CLONE .)
    TRUE            reduce using rule 132 (nativas -> CLONE .)
    FALSE           reduce using rule 132 (nativas -> CLONE .)
    IGUAL           reduce using rule 132 (nativas -> CLONE .)
    BARRA           reduce using rule 132 (nativas -> CLONE .)
    COMA            reduce using rule 132 (nativas -> CLONE .)
    PD              reduce using rule 132 (nativas -> CLONE .)
    LI              reduce using rule 132 (nativas -> CLONE .)
    CD              reduce using rule 132 (nativas -> CLONE .)
    BREAK           reduce using rule 132 (nativas -> CLONE .)
    CONTINUE        reduce using rule 132 (nativas -> CLONE .)


state 108

    (133) expre_logica -> expresiones OR expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    OR              reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    AS              reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    FUNCION         reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    LET             reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    ID              reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    $end            reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    PYC             reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    LD              reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    PRINTLN         reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    PRINT           reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    MATCH           reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    IF              reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    WHILE           reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    RETURN          reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    LOOP            reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    GBAJO           reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    NOT             reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    PI              reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    POWF            reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    POW             reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    CI              reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    ENTERO          reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    FLOAT           reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    CADENA          reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    CARACTER        reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    TRUE            reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    FALSE           reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    IGUAL           reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    BARRA           reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    COMA            reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    PD              reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    LI              reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    CD              reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    BREAK           reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    CONTINUE        reduce using rule 133 (expre_logica -> expresiones OR expresiones .)
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73

  ! AND             [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! MAYORIGUAL      [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! MAYOR           [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! MENORIGUAL      [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! MENOR           [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! IGUALDAD        [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! DESIGUALDAD     [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! RESTA           [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! SUMA            [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! MULTI           [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! DIVI            [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! MODULO          [ reduce using rule 133 (expre_logica -> expresiones OR expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 74 ]


state 109

    (134) expre_logica -> expresiones AND expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    OR              reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    AND             reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    AS              reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    FUNCION         reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    LET             reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    ID              reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    $end            reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    PYC             reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    LD              reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    PRINTLN         reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    PRINT           reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    MATCH           reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    IF              reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    WHILE           reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    RETURN          reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    LOOP            reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    GBAJO           reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    NOT             reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    PI              reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    POWF            reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    POW             reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    CI              reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    ENTERO          reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    FLOAT           reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    CADENA          reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    CARACTER        reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    TRUE            reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    FALSE           reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    IGUAL           reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    BARRA           reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    COMA            reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    PD              reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    LI              reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    CD              reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    BREAK           reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    CONTINUE        reduce using rule 134 (expre_logica -> expresiones AND expresiones .)
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73

  ! MAYORIGUAL      [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! MAYOR           [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! MENORIGUAL      [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! MENOR           [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! IGUALDAD        [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! DESIGUALDAD     [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! RESTA           [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! SUMA            [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! MULTI           [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! DIVI            [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! MODULO          [ reduce using rule 134 (expre_logica -> expresiones AND expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! AS              [ shift and go to state 74 ]


state 110

    (136) expre_relacional -> expresiones MAYORIGUAL expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    OR              reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    AND             reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    MAYORIGUAL      reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    MAYOR           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    MENORIGUAL      reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    MENOR           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    IGUALDAD        reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    DESIGUALDAD     reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    AS              reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    FUNCION         reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    LET             reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    ID              reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    $end            reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    PYC             reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    LD              reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    PRINTLN         reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    PRINT           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    MATCH           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    IF              reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    WHILE           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    RETURN          reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    LOOP            reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    GBAJO           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    NOT             reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    PI              reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    POWF            reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    POW             reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    CI              reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    ENTERO          reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    FLOAT           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    CADENA          reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    CARACTER        reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    TRUE            reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    FALSE           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    IGUAL           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    BARRA           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    COMA            reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    PD              reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    LI              reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    CD              reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    BREAK           reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    CONTINUE        reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73

  ! RESTA           [ reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .) ]
  ! SUMA            [ reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .) ]
  ! MULTI           [ reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .) ]
  ! DIVI            [ reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .) ]
  ! MODULO          [ reduce using rule 136 (expre_relacional -> expresiones MAYORIGUAL expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! AS              [ shift and go to state 74 ]


state 111

    (137) expre_relacional -> expresiones MAYOR expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    OR              reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    AND             reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    MAYORIGUAL      reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    MAYOR           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    MENORIGUAL      reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    MENOR           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    IGUALDAD        reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    DESIGUALDAD     reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    AS              reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    FUNCION         reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    LET             reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    ID              reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    $end            reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    PYC             reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    LD              reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    PRINTLN         reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    PRINT           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    MATCH           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    IF              reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    WHILE           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    RETURN          reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    LOOP            reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    GBAJO           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    NOT             reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    PI              reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    POWF            reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    POW             reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    CI              reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    ENTERO          reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    FLOAT           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    CADENA          reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    CARACTER        reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    TRUE            reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    FALSE           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    IGUAL           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    BARRA           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    COMA            reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    PD              reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    LI              reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    CD              reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    BREAK           reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    CONTINUE        reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .)
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73

  ! RESTA           [ reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .) ]
  ! SUMA            [ reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .) ]
  ! MULTI           [ reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .) ]
  ! DIVI            [ reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .) ]
  ! MODULO          [ reduce using rule 137 (expre_relacional -> expresiones MAYOR expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! AS              [ shift and go to state 74 ]


state 112

    (138) expre_relacional -> expresiones MENORIGUAL expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    OR              reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    AND             reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    MAYORIGUAL      reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    MAYOR           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    MENORIGUAL      reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    MENOR           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    IGUALDAD        reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    DESIGUALDAD     reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    AS              reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    FUNCION         reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    LET             reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    ID              reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    $end            reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    PYC             reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    LD              reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    PRINTLN         reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    PRINT           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    MATCH           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    IF              reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    WHILE           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    RETURN          reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    LOOP            reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    GBAJO           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    NOT             reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    PI              reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    POWF            reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    POW             reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    CI              reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    ENTERO          reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    FLOAT           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    CADENA          reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    CARACTER        reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    TRUE            reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    FALSE           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    IGUAL           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    BARRA           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    COMA            reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    PD              reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    LI              reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    CD              reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    BREAK           reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    CONTINUE        reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73

  ! RESTA           [ reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .) ]
  ! SUMA            [ reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .) ]
  ! MULTI           [ reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .) ]
  ! DIVI            [ reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .) ]
  ! MODULO          [ reduce using rule 138 (expre_relacional -> expresiones MENORIGUAL expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! AS              [ shift and go to state 74 ]


state 113

    (139) expre_relacional -> expresiones MENOR expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    OR              reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    AND             reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    MAYORIGUAL      reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    MAYOR           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    MENORIGUAL      reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    MENOR           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    IGUALDAD        reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    DESIGUALDAD     reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    AS              reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    FUNCION         reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    LET             reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    ID              reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    $end            reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    PYC             reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    LD              reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    PRINTLN         reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    PRINT           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    MATCH           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    IF              reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    WHILE           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    RETURN          reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    LOOP            reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    GBAJO           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    NOT             reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    PI              reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    POWF            reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    POW             reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    CI              reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    ENTERO          reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    FLOAT           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    CADENA          reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    CARACTER        reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    TRUE            reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    FALSE           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    IGUAL           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    BARRA           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    COMA            reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    PD              reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    LI              reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    CD              reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    BREAK           reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    CONTINUE        reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .)
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73

  ! RESTA           [ reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .) ]
  ! SUMA            [ reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .) ]
  ! MULTI           [ reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .) ]
  ! DIVI            [ reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .) ]
  ! MODULO          [ reduce using rule 139 (expre_relacional -> expresiones MENOR expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! AS              [ shift and go to state 74 ]


state 114

    (140) expre_relacional -> expresiones IGUALDAD expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    OR              reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    AND             reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    MAYORIGUAL      reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    MAYOR           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    MENORIGUAL      reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    MENOR           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    IGUALDAD        reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    DESIGUALDAD     reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    AS              reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    FUNCION         reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    LET             reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    ID              reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    $end            reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    PYC             reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    LD              reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    PRINTLN         reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    PRINT           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    MATCH           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    IF              reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    WHILE           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    RETURN          reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    LOOP            reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    GBAJO           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    NOT             reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    PI              reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    POWF            reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    POW             reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    CI              reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    ENTERO          reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    FLOAT           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    CADENA          reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    CARACTER        reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    TRUE            reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    FALSE           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    IGUAL           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    BARRA           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    COMA            reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    PD              reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    LI              reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    CD              reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    BREAK           reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    CONTINUE        reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .)
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73

  ! RESTA           [ reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .) ]
  ! SUMA            [ reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .) ]
  ! MULTI           [ reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .) ]
  ! DIVI            [ reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .) ]
  ! MODULO          [ reduce using rule 140 (expre_relacional -> expresiones IGUALDAD expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! AS              [ shift and go to state 74 ]


state 115

    (141) expre_relacional -> expresiones DESIGUALDAD expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    OR              reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    AND             reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    MAYORIGUAL      reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    MAYOR           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    MENORIGUAL      reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    MENOR           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    IGUALDAD        reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    DESIGUALDAD     reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    AS              reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    FUNCION         reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    LET             reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    ID              reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    $end            reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    PYC             reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    LD              reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    PRINTLN         reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    PRINT           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    MATCH           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    IF              reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    WHILE           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    RETURN          reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    LOOP            reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    GBAJO           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    NOT             reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    PI              reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    POWF            reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    POW             reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    CI              reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    ENTERO          reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    FLOAT           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    CADENA          reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    CARACTER        reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    TRUE            reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    FALSE           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    IGUAL           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    BARRA           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    COMA            reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    PD              reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    LI              reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    CD              reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    BREAK           reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    CONTINUE        reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73

  ! RESTA           [ reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .) ]
  ! SUMA            [ reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .) ]
  ! MULTI           [ reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .) ]
  ! DIVI            [ reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .) ]
  ! MODULO          [ reduce using rule 141 (expre_relacional -> expresiones DESIGUALDAD expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! AS              [ shift and go to state 74 ]


state 116

    (144) expre_aritmetica -> expresiones RESTA expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    OR              reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    AND             reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    MAYORIGUAL      reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    MAYOR           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    MENORIGUAL      reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    MENOR           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    IGUALDAD        reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    DESIGUALDAD     reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    RESTA           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    SUMA            reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    AS              reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    FUNCION         reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    LET             reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    ID              reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    $end            reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    PYC             reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    LD              reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    PRINTLN         reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    PRINT           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    MATCH           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    IF              reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    WHILE           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    RETURN          reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    LOOP            reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    GBAJO           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    NOT             reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    PI              reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    POWF            reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    POW             reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    CI              reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    ENTERO          reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    FLOAT           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    CADENA          reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    CARACTER        reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    TRUE            reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    FALSE           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    IGUAL           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    BARRA           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    COMA            reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    PD              reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    LI              reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    CD              reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    BREAK           reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    CONTINUE        reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .)
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73

  ! MULTI           [ reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .) ]
  ! DIVI            [ reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .) ]
  ! MODULO          [ reduce using rule 144 (expre_aritmetica -> expresiones RESTA expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! RESTA           [ shift and go to state 69 ]
  ! SUMA            [ shift and go to state 70 ]
  ! AS              [ shift and go to state 74 ]


state 117

    (145) expre_aritmetica -> expresiones SUMA expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    OR              reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    AND             reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    MAYORIGUAL      reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    MAYOR           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    MENORIGUAL      reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    MENOR           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    IGUALDAD        reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    DESIGUALDAD     reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    RESTA           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    SUMA            reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    AS              reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    FUNCION         reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    LET             reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    ID              reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    $end            reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    PYC             reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    LD              reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    PRINTLN         reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    PRINT           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    MATCH           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    IF              reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    WHILE           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    RETURN          reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    LOOP            reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    GBAJO           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    NOT             reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    PI              reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    POWF            reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    POW             reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    CI              reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    ENTERO          reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    FLOAT           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    CADENA          reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    CARACTER        reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    TRUE            reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    FALSE           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    IGUAL           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    BARRA           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    COMA            reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    PD              reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    LI              reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    CD              reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    BREAK           reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    CONTINUE        reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .)
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73

  ! MULTI           [ reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .) ]
  ! DIVI            [ reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .) ]
  ! MODULO          [ reduce using rule 145 (expre_aritmetica -> expresiones SUMA expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! RESTA           [ shift and go to state 69 ]
  ! SUMA            [ shift and go to state 70 ]
  ! AS              [ shift and go to state 74 ]


state 118

    (146) expre_aritmetica -> expresiones MULTI expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    OR              reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    AND             reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    MAYORIGUAL      reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    MAYOR           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    MENORIGUAL      reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    MENOR           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    IGUALDAD        reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    DESIGUALDAD     reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    RESTA           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    SUMA            reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    MULTI           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    DIVI            reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    AS              reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    FUNCION         reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    LET             reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    ID              reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    $end            reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    PYC             reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    LD              reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    PRINTLN         reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    PRINT           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    MATCH           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    IF              reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    WHILE           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    RETURN          reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    LOOP            reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    GBAJO           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    NOT             reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    PI              reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    POWF            reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    POW             reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    CI              reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    ENTERO          reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    FLOAT           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    CADENA          reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    CARACTER        reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    TRUE            reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    FALSE           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    IGUAL           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    BARRA           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    COMA            reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    PD              reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    LI              reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    CD              reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    BREAK           reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    CONTINUE        reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .)
    MODULO          shift and go to state 73

  ! MODULO          [ reduce using rule 146 (expre_aritmetica -> expresiones MULTI expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! RESTA           [ shift and go to state 69 ]
  ! SUMA            [ shift and go to state 70 ]
  ! MULTI           [ shift and go to state 71 ]
  ! DIVI            [ shift and go to state 72 ]
  ! AS              [ shift and go to state 74 ]


state 119

    (147) expre_aritmetica -> expresiones DIVI expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    OR              reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    AND             reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    MAYORIGUAL      reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    MAYOR           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    MENORIGUAL      reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    MENOR           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    IGUALDAD        reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    DESIGUALDAD     reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    RESTA           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    SUMA            reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    MULTI           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    DIVI            reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    AS              reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    FUNCION         reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    LET             reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    ID              reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    $end            reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    PYC             reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    LD              reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    PRINTLN         reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    PRINT           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    MATCH           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    IF              reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    WHILE           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    RETURN          reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    LOOP            reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    GBAJO           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    NOT             reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    PI              reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    POWF            reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    POW             reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    CI              reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    ENTERO          reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    FLOAT           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    CADENA          reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    CARACTER        reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    TRUE            reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    FALSE           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    IGUAL           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    BARRA           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    COMA            reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    PD              reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    LI              reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    CD              reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    BREAK           reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    CONTINUE        reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .)
    MODULO          shift and go to state 73

  ! MODULO          [ reduce using rule 147 (expre_aritmetica -> expresiones DIVI expresiones .) ]
  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! RESTA           [ shift and go to state 69 ]
  ! SUMA            [ shift and go to state 70 ]
  ! MULTI           [ shift and go to state 71 ]
  ! DIVI            [ shift and go to state 72 ]
  ! AS              [ shift and go to state 74 ]


state 120

    (148) expre_aritmetica -> expresiones MODULO expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PUNTO           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    OR              reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    AND             reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    MAYORIGUAL      reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    MAYOR           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    MENORIGUAL      reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    MENOR           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    IGUALDAD        reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    DESIGUALDAD     reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    RESTA           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    SUMA            reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    MULTI           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    DIVI            reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    MODULO          reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    AS              reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    FUNCION         reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    LET             reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    ID              reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    $end            reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    PYC             reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    LD              reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    PRINTLN         reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    PRINT           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    MATCH           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    IF              reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    WHILE           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    RETURN          reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    LOOP            reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    GBAJO           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    NOT             reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    PI              reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    POWF            reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    POW             reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    CI              reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    ENTERO          reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    FLOAT           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    CADENA          reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    CARACTER        reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    TRUE            reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    FALSE           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    IGUAL           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    BARRA           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    COMA            reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    PD              reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    LI              reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    CD              reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    BREAK           reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)
    CONTINUE        reduce using rule 148 (expre_aritmetica -> expresiones MODULO expresiones .)

  ! PUNTO           [ shift and go to state 60 ]
  ! OR              [ shift and go to state 61 ]
  ! AND             [ shift and go to state 62 ]
  ! MAYORIGUAL      [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENORIGUAL      [ shift and go to state 65 ]
  ! MENOR           [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 67 ]
  ! DESIGUALDAD     [ shift and go to state 68 ]
  ! RESTA           [ shift and go to state 69 ]
  ! SUMA            [ shift and go to state 70 ]
  ! MULTI           [ shift and go to state 71 ]
  ! DIVI            [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 73 ]
  ! AS              [ shift and go to state 74 ]


state 121

    (152) datos_cast -> expresiones AS tipo_datos .

    PUNTO           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    OR              reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    AND             reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    MAYORIGUAL      reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    MAYOR           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    MENORIGUAL      reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    MENOR           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    IGUALDAD        reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    DESIGUALDAD     reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    RESTA           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    SUMA            reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    MULTI           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    DIVI            reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    MODULO          reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    AS              reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    FUNCION         reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    LET             reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    ID              reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    $end            reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    PYC             reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    LD              reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    PRINTLN         reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    PRINT           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    MATCH           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    IF              reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    WHILE           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    RETURN          reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    LOOP            reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    GBAJO           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    NOT             reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    PI              reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    POWF            reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    POW             reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    CI              reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    ENTERO          reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    FLOAT           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    CADENA          reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    CARACTER        reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    TRUE            reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    FALSE           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    IGUAL           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    BARRA           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    COMA            reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    PD              reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    LI              reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    CD              reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    BREAK           reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)
    CONTINUE        reduce using rule 152 (datos_cast -> expresiones AS tipo_datos .)


state 122

    (99) tipo_datos -> TIPOINT .

    PUNTO           reduce using rule 99 (tipo_datos -> TIPOINT .)
    OR              reduce using rule 99 (tipo_datos -> TIPOINT .)
    AND             reduce using rule 99 (tipo_datos -> TIPOINT .)
    MAYORIGUAL      reduce using rule 99 (tipo_datos -> TIPOINT .)
    MAYOR           reduce using rule 99 (tipo_datos -> TIPOINT .)
    MENORIGUAL      reduce using rule 99 (tipo_datos -> TIPOINT .)
    MENOR           reduce using rule 99 (tipo_datos -> TIPOINT .)
    IGUALDAD        reduce using rule 99 (tipo_datos -> TIPOINT .)
    DESIGUALDAD     reduce using rule 99 (tipo_datos -> TIPOINT .)
    RESTA           reduce using rule 99 (tipo_datos -> TIPOINT .)
    SUMA            reduce using rule 99 (tipo_datos -> TIPOINT .)
    MULTI           reduce using rule 99 (tipo_datos -> TIPOINT .)
    DIVI            reduce using rule 99 (tipo_datos -> TIPOINT .)
    MODULO          reduce using rule 99 (tipo_datos -> TIPOINT .)
    AS              reduce using rule 99 (tipo_datos -> TIPOINT .)
    FUNCION         reduce using rule 99 (tipo_datos -> TIPOINT .)
    LET             reduce using rule 99 (tipo_datos -> TIPOINT .)
    ID              reduce using rule 99 (tipo_datos -> TIPOINT .)
    $end            reduce using rule 99 (tipo_datos -> TIPOINT .)
    PYC             reduce using rule 99 (tipo_datos -> TIPOINT .)
    LD              reduce using rule 99 (tipo_datos -> TIPOINT .)
    PRINTLN         reduce using rule 99 (tipo_datos -> TIPOINT .)
    PRINT           reduce using rule 99 (tipo_datos -> TIPOINT .)
    MATCH           reduce using rule 99 (tipo_datos -> TIPOINT .)
    IF              reduce using rule 99 (tipo_datos -> TIPOINT .)
    WHILE           reduce using rule 99 (tipo_datos -> TIPOINT .)
    RETURN          reduce using rule 99 (tipo_datos -> TIPOINT .)
    LOOP            reduce using rule 99 (tipo_datos -> TIPOINT .)
    GBAJO           reduce using rule 99 (tipo_datos -> TIPOINT .)
    NOT             reduce using rule 99 (tipo_datos -> TIPOINT .)
    PI              reduce using rule 99 (tipo_datos -> TIPOINT .)
    POWF            reduce using rule 99 (tipo_datos -> TIPOINT .)
    POW             reduce using rule 99 (tipo_datos -> TIPOINT .)
    CI              reduce using rule 99 (tipo_datos -> TIPOINT .)
    ENTERO          reduce using rule 99 (tipo_datos -> TIPOINT .)
    FLOAT           reduce using rule 99 (tipo_datos -> TIPOINT .)
    CADENA          reduce using rule 99 (tipo_datos -> TIPOINT .)
    CARACTER        reduce using rule 99 (tipo_datos -> TIPOINT .)
    TRUE            reduce using rule 99 (tipo_datos -> TIPOINT .)
    FALSE           reduce using rule 99 (tipo_datos -> TIPOINT .)
    IGUAL           reduce using rule 99 (tipo_datos -> TIPOINT .)
    BARRA           reduce using rule 99 (tipo_datos -> TIPOINT .)
    COMA            reduce using rule 99 (tipo_datos -> TIPOINT .)
    PD              reduce using rule 99 (tipo_datos -> TIPOINT .)
    LI              reduce using rule 99 (tipo_datos -> TIPOINT .)
    CD              reduce using rule 99 (tipo_datos -> TIPOINT .)
    BREAK           reduce using rule 99 (tipo_datos -> TIPOINT .)
    CONTINUE        reduce using rule 99 (tipo_datos -> TIPOINT .)


state 123

    (100) tipo_datos -> TIPOFLOAT .

    PUNTO           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    OR              reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    AND             reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    MAYORIGUAL      reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    MAYOR           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    MENORIGUAL      reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    MENOR           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    IGUALDAD        reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    DESIGUALDAD     reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    RESTA           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    SUMA            reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    MULTI           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    DIVI            reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    MODULO          reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    AS              reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    FUNCION         reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    LET             reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    ID              reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    $end            reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    PYC             reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    LD              reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    PRINTLN         reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    PRINT           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    MATCH           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    IF              reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    WHILE           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    RETURN          reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    LOOP            reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    GBAJO           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    NOT             reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    PI              reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    POWF            reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    POW             reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    CI              reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    ENTERO          reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    FLOAT           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    CADENA          reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    CARACTER        reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    TRUE            reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    FALSE           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    IGUAL           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    BARRA           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    COMA            reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    PD              reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    LI              reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    CD              reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    BREAK           reduce using rule 100 (tipo_datos -> TIPOFLOAT .)
    CONTINUE        reduce using rule 100 (tipo_datos -> TIPOFLOAT .)


state 124

    (101) tipo_datos -> TIPOCHAR .

    PUNTO           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    OR              reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    AND             reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    MAYORIGUAL      reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    MAYOR           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    MENORIGUAL      reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    MENOR           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    IGUALDAD        reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    DESIGUALDAD     reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    RESTA           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    SUMA            reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    MULTI           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    DIVI            reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    MODULO          reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    AS              reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    FUNCION         reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    LET             reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    ID              reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    $end            reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    PYC             reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    LD              reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    PRINTLN         reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    PRINT           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    MATCH           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    IF              reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    WHILE           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    RETURN          reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    LOOP            reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    GBAJO           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    NOT             reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    PI              reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    POWF            reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    POW             reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    CI              reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    ENTERO          reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    FLOAT           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    CADENA          reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    CARACTER        reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    TRUE            reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    FALSE           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    IGUAL           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    BARRA           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    COMA            reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    PD              reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    LI              reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    CD              reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    BREAK           reduce using rule 101 (tipo_datos -> TIPOCHAR .)
    CONTINUE        reduce using rule 101 (tipo_datos -> TIPOCHAR .)


state 125

    (102) tipo_datos -> TIPOSTRING .

    PUNTO           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    OR              reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    AND             reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    MAYORIGUAL      reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    MAYOR           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    MENORIGUAL      reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    MENOR           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    IGUALDAD        reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    DESIGUALDAD     reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    RESTA           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    SUMA            reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    MULTI           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    DIVI            reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    MODULO          reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    AS              reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    FUNCION         reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    LET             reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    ID              reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    $end            reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    PYC             reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    LD              reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    PRINTLN         reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    PRINT           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    MATCH           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    IF              reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    WHILE           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    RETURN          reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    LOOP            reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    GBAJO           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    NOT             reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    PI              reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    POWF            reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    POW             reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    CI              reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    ENTERO          reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    FLOAT           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    CADENA          reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    CARACTER        reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    TRUE            reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    FALSE           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    IGUAL           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    BARRA           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    COMA            reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    PD              reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    LI              reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    CD              reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    BREAK           reduce using rule 102 (tipo_datos -> TIPOSTRING .)
    CONTINUE        reduce using rule 102 (tipo_datos -> TIPOSTRING .)


state 126

    (103) tipo_datos -> DIRSTRING .

    PUNTO           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    OR              reduce using rule 103 (tipo_datos -> DIRSTRING .)
    AND             reduce using rule 103 (tipo_datos -> DIRSTRING .)
    MAYORIGUAL      reduce using rule 103 (tipo_datos -> DIRSTRING .)
    MAYOR           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    MENORIGUAL      reduce using rule 103 (tipo_datos -> DIRSTRING .)
    MENOR           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    IGUALDAD        reduce using rule 103 (tipo_datos -> DIRSTRING .)
    DESIGUALDAD     reduce using rule 103 (tipo_datos -> DIRSTRING .)
    RESTA           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    SUMA            reduce using rule 103 (tipo_datos -> DIRSTRING .)
    MULTI           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    DIVI            reduce using rule 103 (tipo_datos -> DIRSTRING .)
    MODULO          reduce using rule 103 (tipo_datos -> DIRSTRING .)
    AS              reduce using rule 103 (tipo_datos -> DIRSTRING .)
    FUNCION         reduce using rule 103 (tipo_datos -> DIRSTRING .)
    LET             reduce using rule 103 (tipo_datos -> DIRSTRING .)
    ID              reduce using rule 103 (tipo_datos -> DIRSTRING .)
    $end            reduce using rule 103 (tipo_datos -> DIRSTRING .)
    PYC             reduce using rule 103 (tipo_datos -> DIRSTRING .)
    LD              reduce using rule 103 (tipo_datos -> DIRSTRING .)
    PRINTLN         reduce using rule 103 (tipo_datos -> DIRSTRING .)
    PRINT           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    MATCH           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    IF              reduce using rule 103 (tipo_datos -> DIRSTRING .)
    WHILE           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    RETURN          reduce using rule 103 (tipo_datos -> DIRSTRING .)
    LOOP            reduce using rule 103 (tipo_datos -> DIRSTRING .)
    GBAJO           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    NOT             reduce using rule 103 (tipo_datos -> DIRSTRING .)
    PI              reduce using rule 103 (tipo_datos -> DIRSTRING .)
    POWF            reduce using rule 103 (tipo_datos -> DIRSTRING .)
    POW             reduce using rule 103 (tipo_datos -> DIRSTRING .)
    CI              reduce using rule 103 (tipo_datos -> DIRSTRING .)
    ENTERO          reduce using rule 103 (tipo_datos -> DIRSTRING .)
    FLOAT           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    CADENA          reduce using rule 103 (tipo_datos -> DIRSTRING .)
    CARACTER        reduce using rule 103 (tipo_datos -> DIRSTRING .)
    TRUE            reduce using rule 103 (tipo_datos -> DIRSTRING .)
    FALSE           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    IGUAL           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    BARRA           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    COMA            reduce using rule 103 (tipo_datos -> DIRSTRING .)
    PD              reduce using rule 103 (tipo_datos -> DIRSTRING .)
    LI              reduce using rule 103 (tipo_datos -> DIRSTRING .)
    CD              reduce using rule 103 (tipo_datos -> DIRSTRING .)
    BREAK           reduce using rule 103 (tipo_datos -> DIRSTRING .)
    CONTINUE        reduce using rule 103 (tipo_datos -> DIRSTRING .)


state 127

    (104) tipo_datos -> TIPOBOOL .

    PUNTO           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    OR              reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    AND             reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    MAYORIGUAL      reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    MAYOR           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    MENORIGUAL      reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    MENOR           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    IGUALDAD        reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    DESIGUALDAD     reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    RESTA           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    SUMA            reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    MULTI           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    DIVI            reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    MODULO          reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    AS              reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    FUNCION         reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    LET             reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    ID              reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    $end            reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    PYC             reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    LD              reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    PRINTLN         reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    PRINT           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    MATCH           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    IF              reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    WHILE           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    RETURN          reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    LOOP            reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    GBAJO           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    NOT             reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    PI              reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    POWF            reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    POW             reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    CI              reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    ENTERO          reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    FLOAT           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    CADENA          reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    CARACTER        reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    TRUE            reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    FALSE           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    IGUAL           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    BARRA           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    COMA            reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    PD              reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    LI              reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    CD              reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    BREAK           reduce using rule 104 (tipo_datos -> TIPOBOOL .)
    CONTINUE        reduce using rule 104 (tipo_datos -> TIPOBOOL .)


state 128

    (143) expre_aritmetica -> PI expresiones PD .

    PUNTO           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    OR              reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    AND             reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    MAYORIGUAL      reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    MAYOR           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    MENORIGUAL      reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    MENOR           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    IGUALDAD        reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    DESIGUALDAD     reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    RESTA           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    SUMA            reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    MULTI           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    DIVI            reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    MODULO          reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    AS              reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    FUNCION         reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    LET             reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    ID              reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    $end            reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    PYC             reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    LD              reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    PRINTLN         reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    PRINT           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    MATCH           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    IF              reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    WHILE           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    RETURN          reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    LOOP            reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    GBAJO           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    NOT             reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    PI              reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    POWF            reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    POW             reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    CI              reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    ENTERO          reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    FLOAT           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    CADENA          reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    CARACTER        reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    TRUE            reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    FALSE           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    IGUAL           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    BARRA           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    COMA            reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    PD              reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    LI              reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    CD              reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    BREAK           reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)
    CONTINUE        reduce using rule 143 (expre_aritmetica -> PI expresiones PD .)


state 129

    (149) expre_aritmetica -> POWF PI expresiones . COMA expresiones PD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    COMA            shift and go to state 175
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 130

    (150) expre_aritmetica -> POW PI expresiones . COMA expresiones PD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    COMA            shift and go to state 176
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 131

    (59) start_match -> MATCH expresiones LI . matches LD
    (60) matches -> . matches bloque_match
    (61) matches -> . bloque_match
    (24) bloque_match -> . impresiones
    (25) bloque_match -> . asignacion
    (26) bloque_match -> . llamada
    (27) bloque_match -> . start_match
    (28) bloque_match -> . start_if
    (29) bloque_match -> . start_while
    (30) bloque_match -> . return_ins
    (31) bloque_match -> . start_loop
    (32) bloque_match -> . declaracion_arreglo
    (33) bloque_match -> .
    (62) bloque_match -> . varios_match IGUAL MAYOR simple_bloque_exp COMA
    (63) bloque_match -> . varios_match IGUAL MAYOR LI list_exp_ins LD
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (68) varios_match -> . varios_match BARRA expresiones
    (69) varios_match -> . expresiones
    (70) varios_match -> . GBAJO
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for GBAJO resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for OR resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for AND resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for AS resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for IGUAL resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for BARRA resolved using rule 33 (bloque_match -> .)
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 33 (bloque_match -> .)
    IGUAL           reduce using rule 33 (bloque_match -> .)
    BARRA           reduce using rule 33 (bloque_match -> .)
    PUNTO           reduce using rule 33 (bloque_match -> .)
    OR              reduce using rule 33 (bloque_match -> .)
    AND             reduce using rule 33 (bloque_match -> .)
    MAYORIGUAL      reduce using rule 33 (bloque_match -> .)
    MAYOR           reduce using rule 33 (bloque_match -> .)
    MENORIGUAL      reduce using rule 33 (bloque_match -> .)
    MENOR           reduce using rule 33 (bloque_match -> .)
    IGUALDAD        reduce using rule 33 (bloque_match -> .)
    DESIGUALDAD     reduce using rule 33 (bloque_match -> .)
    SUMA            reduce using rule 33 (bloque_match -> .)
    MULTI           reduce using rule 33 (bloque_match -> .)
    DIVI            reduce using rule 33 (bloque_match -> .)
    MODULO          reduce using rule 33 (bloque_match -> .)
    AS              reduce using rule 33 (bloque_match -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    LOOP            shift and go to state 41
    LET             shift and go to state 191
    GBAJO           shift and go to state 192
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! PRINTLN         [ reduce using rule 33 (bloque_match -> .) ]
  ! PRINT           [ reduce using rule 33 (bloque_match -> .) ]
  ! ID              [ reduce using rule 33 (bloque_match -> .) ]
  ! MATCH           [ reduce using rule 33 (bloque_match -> .) ]
  ! IF              [ reduce using rule 33 (bloque_match -> .) ]
  ! WHILE           [ reduce using rule 33 (bloque_match -> .) ]
  ! RETURN          [ reduce using rule 33 (bloque_match -> .) ]
  ! LOOP            [ reduce using rule 33 (bloque_match -> .) ]
  ! LET             [ reduce using rule 33 (bloque_match -> .) ]
  ! GBAJO           [ reduce using rule 33 (bloque_match -> .) ]
  ! NOT             [ reduce using rule 33 (bloque_match -> .) ]
  ! RESTA           [ reduce using rule 33 (bloque_match -> .) ]
  ! PI              [ reduce using rule 33 (bloque_match -> .) ]
  ! POWF            [ reduce using rule 33 (bloque_match -> .) ]
  ! POW             [ reduce using rule 33 (bloque_match -> .) ]
  ! CI              [ reduce using rule 33 (bloque_match -> .) ]
  ! ENTERO          [ reduce using rule 33 (bloque_match -> .) ]
  ! FLOAT           [ reduce using rule 33 (bloque_match -> .) ]
  ! CADENA          [ reduce using rule 33 (bloque_match -> .) ]
  ! CARACTER        [ reduce using rule 33 (bloque_match -> .) ]
  ! TRUE            [ reduce using rule 33 (bloque_match -> .) ]
  ! FALSE           [ reduce using rule 33 (bloque_match -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! IGUAL           [ reduce using rule 116 (expresiones -> .) ]
  ! BARRA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 177
    matches                        shift and go to state 178
    bloque_match                   shift and go to state 179
    impresiones                    shift and go to state 180
    asignacion                     shift and go to state 181
    llamada                        shift and go to state 182
    start_match                    shift and go to state 183
    start_if                       shift and go to state 184
    start_while                    shift and go to state 185
    return_ins                     shift and go to state 186
    start_loop                     shift and go to state 187
    declaracion_arreglo            shift and go to state 188
    varios_match                   shift and go to state 189
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 132

    (52) start_if -> IF expresiones LI . list_exp_ins LD
    (53) start_if -> IF expresiones LI . list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> IF expresiones LI . list_exp_ins LD lista_elif
    (55) start_if -> IF expresiones LI . list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (50) list_exp_ins -> . list_exp_ins bloque_exp
    (51) list_exp_ins -> . bloque_exp
    (66) bloque_exp -> . bloque
    (67) bloque_exp -> . expresiones
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (39) acceso_arreglo -> . ID dimensiones
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AS resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 23 (bloque -> .)
    PUNTO           reduce using rule 23 (bloque -> .)
    OR              reduce using rule 23 (bloque -> .)
    AND             reduce using rule 23 (bloque -> .)
    MAYORIGUAL      reduce using rule 23 (bloque -> .)
    MAYOR           reduce using rule 23 (bloque -> .)
    MENORIGUAL      reduce using rule 23 (bloque -> .)
    MENOR           reduce using rule 23 (bloque -> .)
    IGUALDAD        reduce using rule 23 (bloque -> .)
    DESIGUALDAD     reduce using rule 23 (bloque -> .)
    SUMA            reduce using rule 23 (bloque -> .)
    MULTI           reduce using rule 23 (bloque -> .)
    DIVI            reduce using rule 23 (bloque -> .)
    MODULO          reduce using rule 23 (bloque -> .)
    AS              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]
  ! NOT             [ reduce using rule 23 (bloque -> .) ]
  ! RESTA           [ reduce using rule 23 (bloque -> .) ]
  ! PI              [ reduce using rule 23 (bloque -> .) ]
  ! POWF            [ reduce using rule 23 (bloque -> .) ]
  ! POW             [ reduce using rule 23 (bloque -> .) ]
  ! CI              [ reduce using rule 23 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 23 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 23 (bloque -> .) ]
  ! CADENA          [ reduce using rule 23 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 23 (bloque -> .) ]
  ! TRUE            [ reduce using rule 23 (bloque -> .) ]
  ! FALSE           [ reduce using rule 23 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 116 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 193
    list_exp_ins                   shift and go to state 194
    bloque_exp                     shift and go to state 195
    bloque                         shift and go to state 196
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 197
    start_match                    shift and go to state 198
    start_if                       shift and go to state 199
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 200
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    acceso_arreglo                 shift and go to state 201
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 133

    (43) start_loop -> LOOP LI lista_bloque . LD
    (8) lista_bloque -> lista_bloque . bloque
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (39) acceso_arreglo -> . ID dimensiones

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              shift and go to state 202
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 150
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41

  ! LD              [ reduce using rule 23 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]

    bloque                         shift and go to state 203
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 138
    start_match                    shift and go to state 139
    start_if                       shift and go to state 140
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 145
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    acceso_arreglo                 shift and go to state 155

state 134

    (9) lista_bloque -> bloque .

    LD              reduce using rule 9 (lista_bloque -> bloque .)
    PRINTLN         reduce using rule 9 (lista_bloque -> bloque .)
    PRINT           reduce using rule 9 (lista_bloque -> bloque .)
    LET             reduce using rule 9 (lista_bloque -> bloque .)
    ID              reduce using rule 9 (lista_bloque -> bloque .)
    MATCH           reduce using rule 9 (lista_bloque -> bloque .)
    IF              reduce using rule 9 (lista_bloque -> bloque .)
    WHILE           reduce using rule 9 (lista_bloque -> bloque .)
    RETURN          reduce using rule 9 (lista_bloque -> bloque .)
    BREAK           reduce using rule 9 (lista_bloque -> bloque .)
    CONTINUE        reduce using rule 9 (lista_bloque -> bloque .)
    LOOP            reduce using rule 9 (lista_bloque -> bloque .)


state 135

    (10) bloque -> impresiones . PYC

    PYC             shift and go to state 204


state 136

    (11) bloque -> declaracion .

    LD              reduce using rule 11 (bloque -> declaracion .)
    PRINTLN         reduce using rule 11 (bloque -> declaracion .)
    PRINT           reduce using rule 11 (bloque -> declaracion .)
    LET             reduce using rule 11 (bloque -> declaracion .)
    ID              reduce using rule 11 (bloque -> declaracion .)
    MATCH           reduce using rule 11 (bloque -> declaracion .)
    IF              reduce using rule 11 (bloque -> declaracion .)
    WHILE           reduce using rule 11 (bloque -> declaracion .)
    RETURN          reduce using rule 11 (bloque -> declaracion .)
    BREAK           reduce using rule 11 (bloque -> declaracion .)
    CONTINUE        reduce using rule 11 (bloque -> declaracion .)
    LOOP            reduce using rule 11 (bloque -> declaracion .)
    NOT             reduce using rule 11 (bloque -> declaracion .)
    RESTA           reduce using rule 11 (bloque -> declaracion .)
    PI              reduce using rule 11 (bloque -> declaracion .)
    POWF            reduce using rule 11 (bloque -> declaracion .)
    POW             reduce using rule 11 (bloque -> declaracion .)
    CI              reduce using rule 11 (bloque -> declaracion .)
    ENTERO          reduce using rule 11 (bloque -> declaracion .)
    FLOAT           reduce using rule 11 (bloque -> declaracion .)
    CADENA          reduce using rule 11 (bloque -> declaracion .)
    CARACTER        reduce using rule 11 (bloque -> declaracion .)
    TRUE            reduce using rule 11 (bloque -> declaracion .)
    FALSE           reduce using rule 11 (bloque -> declaracion .)
    PUNTO           reduce using rule 11 (bloque -> declaracion .)
    OR              reduce using rule 11 (bloque -> declaracion .)
    AND             reduce using rule 11 (bloque -> declaracion .)
    MAYORIGUAL      reduce using rule 11 (bloque -> declaracion .)
    MAYOR           reduce using rule 11 (bloque -> declaracion .)
    MENORIGUAL      reduce using rule 11 (bloque -> declaracion .)
    MENOR           reduce using rule 11 (bloque -> declaracion .)
    IGUALDAD        reduce using rule 11 (bloque -> declaracion .)
    DESIGUALDAD     reduce using rule 11 (bloque -> declaracion .)
    SUMA            reduce using rule 11 (bloque -> declaracion .)
    MULTI           reduce using rule 11 (bloque -> declaracion .)
    DIVI            reduce using rule 11 (bloque -> declaracion .)
    MODULO          reduce using rule 11 (bloque -> declaracion .)
    AS              reduce using rule 11 (bloque -> declaracion .)


state 137

    (12) bloque -> asignacion . PYC

    PYC             shift and go to state 205


state 138

    (13) bloque -> llamada . PYC

    PYC             shift and go to state 206


state 139

    (14) bloque -> start_match .

    LD              reduce using rule 14 (bloque -> start_match .)
    PRINTLN         reduce using rule 14 (bloque -> start_match .)
    PRINT           reduce using rule 14 (bloque -> start_match .)
    LET             reduce using rule 14 (bloque -> start_match .)
    ID              reduce using rule 14 (bloque -> start_match .)
    MATCH           reduce using rule 14 (bloque -> start_match .)
    IF              reduce using rule 14 (bloque -> start_match .)
    WHILE           reduce using rule 14 (bloque -> start_match .)
    RETURN          reduce using rule 14 (bloque -> start_match .)
    BREAK           reduce using rule 14 (bloque -> start_match .)
    CONTINUE        reduce using rule 14 (bloque -> start_match .)
    LOOP            reduce using rule 14 (bloque -> start_match .)


state 140

    (15) bloque -> start_if .

    LD              reduce using rule 15 (bloque -> start_if .)
    PRINTLN         reduce using rule 15 (bloque -> start_if .)
    PRINT           reduce using rule 15 (bloque -> start_if .)
    LET             reduce using rule 15 (bloque -> start_if .)
    ID              reduce using rule 15 (bloque -> start_if .)
    MATCH           reduce using rule 15 (bloque -> start_if .)
    IF              reduce using rule 15 (bloque -> start_if .)
    WHILE           reduce using rule 15 (bloque -> start_if .)
    RETURN          reduce using rule 15 (bloque -> start_if .)
    BREAK           reduce using rule 15 (bloque -> start_if .)
    CONTINUE        reduce using rule 15 (bloque -> start_if .)
    LOOP            reduce using rule 15 (bloque -> start_if .)


state 141

    (16) bloque -> start_while .

    LD              reduce using rule 16 (bloque -> start_while .)
    PRINTLN         reduce using rule 16 (bloque -> start_while .)
    PRINT           reduce using rule 16 (bloque -> start_while .)
    LET             reduce using rule 16 (bloque -> start_while .)
    ID              reduce using rule 16 (bloque -> start_while .)
    MATCH           reduce using rule 16 (bloque -> start_while .)
    IF              reduce using rule 16 (bloque -> start_while .)
    WHILE           reduce using rule 16 (bloque -> start_while .)
    RETURN          reduce using rule 16 (bloque -> start_while .)
    BREAK           reduce using rule 16 (bloque -> start_while .)
    CONTINUE        reduce using rule 16 (bloque -> start_while .)
    LOOP            reduce using rule 16 (bloque -> start_while .)
    NOT             reduce using rule 16 (bloque -> start_while .)
    RESTA           reduce using rule 16 (bloque -> start_while .)
    PI              reduce using rule 16 (bloque -> start_while .)
    POWF            reduce using rule 16 (bloque -> start_while .)
    POW             reduce using rule 16 (bloque -> start_while .)
    CI              reduce using rule 16 (bloque -> start_while .)
    ENTERO          reduce using rule 16 (bloque -> start_while .)
    FLOAT           reduce using rule 16 (bloque -> start_while .)
    CADENA          reduce using rule 16 (bloque -> start_while .)
    CARACTER        reduce using rule 16 (bloque -> start_while .)
    TRUE            reduce using rule 16 (bloque -> start_while .)
    FALSE           reduce using rule 16 (bloque -> start_while .)
    PUNTO           reduce using rule 16 (bloque -> start_while .)
    OR              reduce using rule 16 (bloque -> start_while .)
    AND             reduce using rule 16 (bloque -> start_while .)
    MAYORIGUAL      reduce using rule 16 (bloque -> start_while .)
    MAYOR           reduce using rule 16 (bloque -> start_while .)
    MENORIGUAL      reduce using rule 16 (bloque -> start_while .)
    MENOR           reduce using rule 16 (bloque -> start_while .)
    IGUALDAD        reduce using rule 16 (bloque -> start_while .)
    DESIGUALDAD     reduce using rule 16 (bloque -> start_while .)
    SUMA            reduce using rule 16 (bloque -> start_while .)
    MULTI           reduce using rule 16 (bloque -> start_while .)
    DIVI            reduce using rule 16 (bloque -> start_while .)
    MODULO          reduce using rule 16 (bloque -> start_while .)
    AS              reduce using rule 16 (bloque -> start_while .)


state 142

    (17) bloque -> return_ins . PYC

    PYC             shift and go to state 207


state 143

    (18) bloque -> break_ins . PYC

    PYC             shift and go to state 208


state 144

    (19) bloque -> continue_ins . PYC

    PYC             shift and go to state 209


state 145

    (20) bloque -> start_loop .

    LD              reduce using rule 20 (bloque -> start_loop .)
    PRINTLN         reduce using rule 20 (bloque -> start_loop .)
    PRINT           reduce using rule 20 (bloque -> start_loop .)
    LET             reduce using rule 20 (bloque -> start_loop .)
    ID              reduce using rule 20 (bloque -> start_loop .)
    MATCH           reduce using rule 20 (bloque -> start_loop .)
    IF              reduce using rule 20 (bloque -> start_loop .)
    WHILE           reduce using rule 20 (bloque -> start_loop .)
    RETURN          reduce using rule 20 (bloque -> start_loop .)
    BREAK           reduce using rule 20 (bloque -> start_loop .)
    CONTINUE        reduce using rule 20 (bloque -> start_loop .)
    LOOP            reduce using rule 20 (bloque -> start_loop .)


state 146

    (21) bloque -> declaracion_arreglo .

    LD              reduce using rule 21 (bloque -> declaracion_arreglo .)
    PRINTLN         reduce using rule 21 (bloque -> declaracion_arreglo .)
    PRINT           reduce using rule 21 (bloque -> declaracion_arreglo .)
    LET             reduce using rule 21 (bloque -> declaracion_arreglo .)
    ID              reduce using rule 21 (bloque -> declaracion_arreglo .)
    MATCH           reduce using rule 21 (bloque -> declaracion_arreglo .)
    IF              reduce using rule 21 (bloque -> declaracion_arreglo .)
    WHILE           reduce using rule 21 (bloque -> declaracion_arreglo .)
    RETURN          reduce using rule 21 (bloque -> declaracion_arreglo .)
    BREAK           reduce using rule 21 (bloque -> declaracion_arreglo .)
    CONTINUE        reduce using rule 21 (bloque -> declaracion_arreglo .)
    LOOP            reduce using rule 21 (bloque -> declaracion_arreglo .)
    NOT             reduce using rule 21 (bloque -> declaracion_arreglo .)
    RESTA           reduce using rule 21 (bloque -> declaracion_arreglo .)
    PI              reduce using rule 21 (bloque -> declaracion_arreglo .)
    POWF            reduce using rule 21 (bloque -> declaracion_arreglo .)
    POW             reduce using rule 21 (bloque -> declaracion_arreglo .)
    CI              reduce using rule 21 (bloque -> declaracion_arreglo .)
    ENTERO          reduce using rule 21 (bloque -> declaracion_arreglo .)
    FLOAT           reduce using rule 21 (bloque -> declaracion_arreglo .)
    CADENA          reduce using rule 21 (bloque -> declaracion_arreglo .)
    CARACTER        reduce using rule 21 (bloque -> declaracion_arreglo .)
    TRUE            reduce using rule 21 (bloque -> declaracion_arreglo .)
    FALSE           reduce using rule 21 (bloque -> declaracion_arreglo .)
    PUNTO           reduce using rule 21 (bloque -> declaracion_arreglo .)
    OR              reduce using rule 21 (bloque -> declaracion_arreglo .)
    AND             reduce using rule 21 (bloque -> declaracion_arreglo .)
    MAYORIGUAL      reduce using rule 21 (bloque -> declaracion_arreglo .)
    MAYOR           reduce using rule 21 (bloque -> declaracion_arreglo .)
    MENORIGUAL      reduce using rule 21 (bloque -> declaracion_arreglo .)
    MENOR           reduce using rule 21 (bloque -> declaracion_arreglo .)
    IGUALDAD        reduce using rule 21 (bloque -> declaracion_arreglo .)
    DESIGUALDAD     reduce using rule 21 (bloque -> declaracion_arreglo .)
    SUMA            reduce using rule 21 (bloque -> declaracion_arreglo .)
    MULTI           reduce using rule 21 (bloque -> declaracion_arreglo .)
    DIVI            reduce using rule 21 (bloque -> declaracion_arreglo .)
    MODULO          reduce using rule 21 (bloque -> declaracion_arreglo .)
    AS              reduce using rule 21 (bloque -> declaracion_arreglo .)


state 147

    (22) bloque -> asignacion_arreglo .

    LD              reduce using rule 22 (bloque -> asignacion_arreglo .)
    PRINTLN         reduce using rule 22 (bloque -> asignacion_arreglo .)
    PRINT           reduce using rule 22 (bloque -> asignacion_arreglo .)
    LET             reduce using rule 22 (bloque -> asignacion_arreglo .)
    ID              reduce using rule 22 (bloque -> asignacion_arreglo .)
    MATCH           reduce using rule 22 (bloque -> asignacion_arreglo .)
    IF              reduce using rule 22 (bloque -> asignacion_arreglo .)
    WHILE           reduce using rule 22 (bloque -> asignacion_arreglo .)
    RETURN          reduce using rule 22 (bloque -> asignacion_arreglo .)
    BREAK           reduce using rule 22 (bloque -> asignacion_arreglo .)
    CONTINUE        reduce using rule 22 (bloque -> asignacion_arreglo .)
    LOOP            reduce using rule 22 (bloque -> asignacion_arreglo .)
    NOT             reduce using rule 22 (bloque -> asignacion_arreglo .)
    RESTA           reduce using rule 22 (bloque -> asignacion_arreglo .)
    PI              reduce using rule 22 (bloque -> asignacion_arreglo .)
    POWF            reduce using rule 22 (bloque -> asignacion_arreglo .)
    POW             reduce using rule 22 (bloque -> asignacion_arreglo .)
    CI              reduce using rule 22 (bloque -> asignacion_arreglo .)
    ENTERO          reduce using rule 22 (bloque -> asignacion_arreglo .)
    FLOAT           reduce using rule 22 (bloque -> asignacion_arreglo .)
    CADENA          reduce using rule 22 (bloque -> asignacion_arreglo .)
    CARACTER        reduce using rule 22 (bloque -> asignacion_arreglo .)
    TRUE            reduce using rule 22 (bloque -> asignacion_arreglo .)
    FALSE           reduce using rule 22 (bloque -> asignacion_arreglo .)
    PUNTO           reduce using rule 22 (bloque -> asignacion_arreglo .)
    OR              reduce using rule 22 (bloque -> asignacion_arreglo .)
    AND             reduce using rule 22 (bloque -> asignacion_arreglo .)
    MAYORIGUAL      reduce using rule 22 (bloque -> asignacion_arreglo .)
    MAYOR           reduce using rule 22 (bloque -> asignacion_arreglo .)
    MENORIGUAL      reduce using rule 22 (bloque -> asignacion_arreglo .)
    MENOR           reduce using rule 22 (bloque -> asignacion_arreglo .)
    IGUALDAD        reduce using rule 22 (bloque -> asignacion_arreglo .)
    DESIGUALDAD     reduce using rule 22 (bloque -> asignacion_arreglo .)
    SUMA            reduce using rule 22 (bloque -> asignacion_arreglo .)
    MULTI           reduce using rule 22 (bloque -> asignacion_arreglo .)
    DIVI            reduce using rule 22 (bloque -> asignacion_arreglo .)
    MODULO          reduce using rule 22 (bloque -> asignacion_arreglo .)
    AS              reduce using rule 22 (bloque -> asignacion_arreglo .)


state 148

    (105) impresiones -> PRINTLN . PI CADENA PD
    (107) impresiones -> PRINTLN . PI CADENA COMA impresion_valores PD

    PI              shift and go to state 210


state 149

    (106) impresiones -> PRINT . PI CADENA PD
    (108) impresiones -> PRINT . PI CADENA COMA impresion_valores PD

    PI              shift and go to state 211


state 150

    (94) asignacion -> ID . IGUAL expresiones
    (71) llamada -> ID . PI PD
    (72) llamada -> ID . PI lista_expres PD
    (39) acceso_arreglo -> ID . dimensiones
    (40) dimensiones -> . dimensiones dimension
    (41) dimensiones -> . dimension
    (42) dimension -> . CI expresiones CD

    IGUAL           shift and go to state 14
    PI              shift and go to state 56
    CI              shift and go to state 59

    dimensiones                    shift and go to state 57
    dimension                      shift and go to state 58

state 151

    (49) start_while -> WHILE . expresiones LI lista_bloque LD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    LI              reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 212
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 152

    (47) return_ins -> RETURN .
    (48) return_ins -> RETURN . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for OR resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for AND resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for MAYOR resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for MENOR resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for RESTA resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for SUMA resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for MULTI resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for DIVI resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for MODULO resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for AS resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for PYC resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for LD resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for PRINT resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for ID resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for MATCH resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for IF resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for WHILE resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for RETURN resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for LOOP resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for LET resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for GBAJO resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for NOT resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for PI resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for POWF resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for POW resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for CI resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for ENTERO resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for FLOAT resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for CADENA resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for CARACTER resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for TRUE resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for FALSE resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for IGUAL resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for BARRA resolved using rule 47 (return_ins -> RETURN .)
  ! reduce/reduce conflict for COMA resolved using rule 47 (return_ins -> RETURN .)
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PYC             reduce using rule 47 (return_ins -> RETURN .)
    LD              reduce using rule 47 (return_ins -> RETURN .)
    PRINTLN         reduce using rule 47 (return_ins -> RETURN .)
    PRINT           reduce using rule 47 (return_ins -> RETURN .)
    WHILE           reduce using rule 47 (return_ins -> RETURN .)
    RETURN          reduce using rule 47 (return_ins -> RETURN .)
    LET             reduce using rule 47 (return_ins -> RETURN .)
    GBAJO           reduce using rule 47 (return_ins -> RETURN .)
    IGUAL           reduce using rule 47 (return_ins -> RETURN .)
    BARRA           reduce using rule 47 (return_ins -> RETURN .)
    PUNTO           reduce using rule 47 (return_ins -> RETURN .)
    OR              reduce using rule 47 (return_ins -> RETURN .)
    AND             reduce using rule 47 (return_ins -> RETURN .)
    MAYORIGUAL      reduce using rule 47 (return_ins -> RETURN .)
    MAYOR           reduce using rule 47 (return_ins -> RETURN .)
    MENORIGUAL      reduce using rule 47 (return_ins -> RETURN .)
    MENOR           reduce using rule 47 (return_ins -> RETURN .)
    IGUALDAD        reduce using rule 47 (return_ins -> RETURN .)
    DESIGUALDAD     reduce using rule 47 (return_ins -> RETURN .)
    SUMA            reduce using rule 47 (return_ins -> RETURN .)
    MULTI           reduce using rule 47 (return_ins -> RETURN .)
    DIVI            reduce using rule 47 (return_ins -> RETURN .)
    MODULO          reduce using rule 47 (return_ins -> RETURN .)
    AS              reduce using rule 47 (return_ins -> RETURN .)
    COMA            reduce using rule 47 (return_ins -> RETURN .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! ID              [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! MATCH           [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! IF              [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! LOOP            [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! NOT             [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! RESTA           [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! PI              [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! POWF            [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! POW             [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! CI              [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! ENTERO          [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! FLOAT           [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! CADENA          [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! CARACTER        [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! TRUE            [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! FALSE           [ reduce using rule 47 (return_ins -> RETURN .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! PYC             [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! GBAJO           [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUAL           [ reduce using rule 116 (expresiones -> .) ]
  ! BARRA           [ reduce using rule 116 (expresiones -> .) ]
  ! COMA            [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 213
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 153

    (45) break_ins -> BREAK .
    (46) break_ins -> BREAK . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! reduce/reduce conflict for PYC resolved using rule 45 (break_ins -> BREAK .)
  ! shift/reduce conflict for RESTA resolved as shift
    PYC             reduce using rule 45 (break_ins -> BREAK .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! PYC             [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 214
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 154

    (44) continue_ins -> CONTINUE .

    PYC             reduce using rule 44 (continue_ins -> CONTINUE .)


state 155

    (34) asignacion_arreglo -> acceso_arreglo . IGUAL expresiones

    IGUAL           shift and go to state 215


state 156

    (124) arreglo_init -> CI lista_Expresiones CD .

    PUNTO           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    OR              reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    AND             reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    MAYORIGUAL      reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    MAYOR           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    MENORIGUAL      reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    MENOR           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    IGUALDAD        reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    DESIGUALDAD     reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    RESTA           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    SUMA            reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    MULTI           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    DIVI            reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    MODULO          reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    AS              reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    FUNCION         reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    LET             reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    ID              reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    $end            reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    PYC             reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    LD              reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    PRINTLN         reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    PRINT           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    MATCH           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    IF              reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    WHILE           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    RETURN          reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    LOOP            reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    GBAJO           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    NOT             reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    PI              reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    POWF            reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    POW             reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    CI              reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    ENTERO          reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    FLOAT           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    CADENA          reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    CARACTER        reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    TRUE            reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    FALSE           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    IGUAL           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    BARRA           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    COMA            reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    PD              reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    LI              reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    CD              reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    BREAK           reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)
    CONTINUE        reduce using rule 124 (arreglo_init -> CI lista_Expresiones CD .)


state 157

    (125) lista_Expresiones -> lista_Expresiones COMA . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    CD              reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 216
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 158

    (92) declaracion -> LET mutable ID tipado PYC .

    FUNCION         reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    LET             reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    ID              reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    $end            reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    LD              reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    PRINTLN         reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    PRINT           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    MATCH           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    IF              reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    WHILE           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    RETURN          reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    BREAK           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    CONTINUE        reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    LOOP            reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    NOT             reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    RESTA           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    PI              reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    POWF            reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    POW             reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    CI              reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    ENTERO          reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    FLOAT           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    CADENA          reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    CARACTER        reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    TRUE            reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    FALSE           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    PUNTO           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    OR              reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    AND             reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    MAYORIGUAL      reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    MAYOR           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    MENORIGUAL      reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    MENOR           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    IGUALDAD        reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    DESIGUALDAD     reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    SUMA            reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    MULTI           reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    DIVI            reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    MODULO          reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)
    AS              reduce using rule 92 (declaracion -> LET mutable ID tipado PYC .)


state 159

    (93) declaracion -> LET mutable ID tipado IGUAL . expresiones PYC
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PYC             reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 217
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 160

    (35) declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL . expresiones PYC
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PYC             reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 218
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 161

    (97) tipado -> DP tipo_datos .

    PYC             reduce using rule 97 (tipado -> DP tipo_datos .)
    IGUAL           reduce using rule 97 (tipado -> DP tipo_datos .)
    PD              reduce using rule 97 (tipado -> DP tipo_datos .)
    COMA            reduce using rule 97 (tipado -> DP tipo_datos .)


state 162

    (36) validacion_dimension -> DP dimensiones_def .

    IGUAL           reduce using rule 36 (validacion_dimension -> DP dimensiones_def .)


state 163

    (37) dimensiones_def -> CI . dimensiones_def PYC expresiones CD
    (38) dimensiones_def -> CI . tipo_datos PYC expresiones CD
    (37) dimensiones_def -> . CI dimensiones_def PYC expresiones CD
    (38) dimensiones_def -> . CI tipo_datos PYC expresiones CD
    (99) tipo_datos -> . TIPOINT
    (100) tipo_datos -> . TIPOFLOAT
    (101) tipo_datos -> . TIPOCHAR
    (102) tipo_datos -> . TIPOSTRING
    (103) tipo_datos -> . DIRSTRING
    (104) tipo_datos -> . TIPOBOOL

    CI              shift and go to state 163
    TIPOINT         shift and go to state 122
    TIPOFLOAT       shift and go to state 123
    TIPOCHAR        shift and go to state 124
    TIPOSTRING      shift and go to state 125
    DIRSTRING       shift and go to state 126
    TIPOBOOL        shift and go to state 127

    dimensiones_def                shift and go to state 219
    tipo_datos                     shift and go to state 220

state 164

    (75) funcion -> FUNCION MAIN PI PD LI lista_bloque . LD
    (8) lista_bloque -> lista_bloque . bloque
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (39) acceso_arreglo -> . ID dimensiones

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              shift and go to state 221
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 150
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41

  ! LD              [ reduce using rule 23 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]

    bloque                         shift and go to state 203
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 138
    start_match                    shift and go to state 139
    start_if                       shift and go to state 140
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 145
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    acceso_arreglo                 shift and go to state 155

state 165

    (83) tipados_tipos -> DP REFERENCE . dimensiones_def
    (37) dimensiones_def -> . CI dimensiones_def PYC expresiones CD
    (38) dimensiones_def -> . CI tipo_datos PYC expresiones CD

    CI              shift and go to state 163

    dimensiones_def                shift and go to state 222

state 166

    (76) funcion -> FUNCION ID PI PD tipo_funcion LI . lista_bloque LD
    (8) lista_bloque -> . lista_bloque bloque
    (9) lista_bloque -> . bloque
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (39) acceso_arreglo -> . ID dimensiones

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 150
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41

  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]

    lista_bloque                   shift and go to state 223
    bloque                         shift and go to state 134
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 138
    start_match                    shift and go to state 139
    start_if                       shift and go to state 140
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 145
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    acceso_arreglo                 shift and go to state 155

state 167

    (89) tipo_funcion -> RESTA MAYOR . tipo_datos
    (90) tipo_funcion -> RESTA MAYOR . VECTOR MENOR tipo_datos MAYOR
    (99) tipo_datos -> . TIPOINT
    (100) tipo_datos -> . TIPOFLOAT
    (101) tipo_datos -> . TIPOCHAR
    (102) tipo_datos -> . TIPOSTRING
    (103) tipo_datos -> . DIRSTRING
    (104) tipo_datos -> . TIPOBOOL

    VECTOR          shift and go to state 225
    TIPOINT         shift and go to state 122
    TIPOFLOAT       shift and go to state 123
    TIPOCHAR        shift and go to state 124
    TIPOSTRING      shift and go to state 125
    DIRSTRING       shift and go to state 126
    TIPOBOOL        shift and go to state 127

    tipo_datos                     shift and go to state 224

state 168

    (77) funcion -> FUNCION ID PI parametros PD tipo_funcion . LI lista_bloque LD

    LI              shift and go to state 226


state 169

    (78) parametros -> parametros COMA definiciones .

    PD              reduce using rule 78 (parametros -> parametros COMA definiciones .)
    COMA            reduce using rule 78 (parametros -> parametros COMA definiciones .)


state 170

    (80) definiciones -> MUT ID tipado .

    PD              reduce using rule 80 (definiciones -> MUT ID tipado .)
    COMA            reduce using rule 80 (definiciones -> MUT ID tipado .)


state 171

    (97) tipado -> DP . tipo_datos
    (99) tipo_datos -> . TIPOINT
    (100) tipo_datos -> . TIPOFLOAT
    (101) tipo_datos -> . TIPOCHAR
    (102) tipo_datos -> . TIPOSTRING
    (103) tipo_datos -> . DIRSTRING
    (104) tipo_datos -> . TIPOBOOL

    TIPOINT         shift and go to state 122
    TIPOFLOAT       shift and go to state 123
    TIPOCHAR        shift and go to state 124
    TIPOSTRING      shift and go to state 125
    DIRSTRING       shift and go to state 126
    TIPOBOOL        shift and go to state 127

    tipo_datos                     shift and go to state 161

state 172

    (72) llamada -> ID PI lista_expres PD .

    PUNTO           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    OR              reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    AND             reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    MAYORIGUAL      reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    MAYOR           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    MENORIGUAL      reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    MENOR           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    IGUALDAD        reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    DESIGUALDAD     reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    RESTA           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    SUMA            reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    MULTI           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    DIVI            reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    MODULO          reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    AS              reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    FUNCION         reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    LET             reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    ID              reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    $end            reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    PYC             reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    LD              reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    PRINTLN         reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    PRINT           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    MATCH           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    IF              reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    WHILE           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    RETURN          reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    LOOP            reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    GBAJO           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    NOT             reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    PI              reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    POWF            reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    POW             reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    CI              reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    ENTERO          reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    FLOAT           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    CADENA          reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    CARACTER        reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    TRUE            reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    FALSE           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    IGUAL           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    BARRA           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    COMA            reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    PD              reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    LI              reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    CD              reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    BREAK           reduce using rule 72 (llamada -> ID PI lista_expres PD .)
    CONTINUE        reduce using rule 72 (llamada -> ID PI lista_expres PD .)


state 173

    (73) lista_expres -> lista_expres COMA . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 227
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 174

    (42) dimension -> CI expresiones CD .

    CI              reduce using rule 42 (dimension -> CI expresiones CD .)
    PUNTO           reduce using rule 42 (dimension -> CI expresiones CD .)
    OR              reduce using rule 42 (dimension -> CI expresiones CD .)
    AND             reduce using rule 42 (dimension -> CI expresiones CD .)
    MAYORIGUAL      reduce using rule 42 (dimension -> CI expresiones CD .)
    MAYOR           reduce using rule 42 (dimension -> CI expresiones CD .)
    MENORIGUAL      reduce using rule 42 (dimension -> CI expresiones CD .)
    MENOR           reduce using rule 42 (dimension -> CI expresiones CD .)
    IGUALDAD        reduce using rule 42 (dimension -> CI expresiones CD .)
    DESIGUALDAD     reduce using rule 42 (dimension -> CI expresiones CD .)
    RESTA           reduce using rule 42 (dimension -> CI expresiones CD .)
    SUMA            reduce using rule 42 (dimension -> CI expresiones CD .)
    MULTI           reduce using rule 42 (dimension -> CI expresiones CD .)
    DIVI            reduce using rule 42 (dimension -> CI expresiones CD .)
    MODULO          reduce using rule 42 (dimension -> CI expresiones CD .)
    AS              reduce using rule 42 (dimension -> CI expresiones CD .)
    FUNCION         reduce using rule 42 (dimension -> CI expresiones CD .)
    LET             reduce using rule 42 (dimension -> CI expresiones CD .)
    ID              reduce using rule 42 (dimension -> CI expresiones CD .)
    $end            reduce using rule 42 (dimension -> CI expresiones CD .)
    PYC             reduce using rule 42 (dimension -> CI expresiones CD .)
    LD              reduce using rule 42 (dimension -> CI expresiones CD .)
    PRINTLN         reduce using rule 42 (dimension -> CI expresiones CD .)
    PRINT           reduce using rule 42 (dimension -> CI expresiones CD .)
    MATCH           reduce using rule 42 (dimension -> CI expresiones CD .)
    IF              reduce using rule 42 (dimension -> CI expresiones CD .)
    WHILE           reduce using rule 42 (dimension -> CI expresiones CD .)
    RETURN          reduce using rule 42 (dimension -> CI expresiones CD .)
    LOOP            reduce using rule 42 (dimension -> CI expresiones CD .)
    GBAJO           reduce using rule 42 (dimension -> CI expresiones CD .)
    NOT             reduce using rule 42 (dimension -> CI expresiones CD .)
    PI              reduce using rule 42 (dimension -> CI expresiones CD .)
    POWF            reduce using rule 42 (dimension -> CI expresiones CD .)
    POW             reduce using rule 42 (dimension -> CI expresiones CD .)
    ENTERO          reduce using rule 42 (dimension -> CI expresiones CD .)
    FLOAT           reduce using rule 42 (dimension -> CI expresiones CD .)
    CADENA          reduce using rule 42 (dimension -> CI expresiones CD .)
    CARACTER        reduce using rule 42 (dimension -> CI expresiones CD .)
    TRUE            reduce using rule 42 (dimension -> CI expresiones CD .)
    FALSE           reduce using rule 42 (dimension -> CI expresiones CD .)
    IGUAL           reduce using rule 42 (dimension -> CI expresiones CD .)
    BARRA           reduce using rule 42 (dimension -> CI expresiones CD .)
    COMA            reduce using rule 42 (dimension -> CI expresiones CD .)
    PD              reduce using rule 42 (dimension -> CI expresiones CD .)
    LI              reduce using rule 42 (dimension -> CI expresiones CD .)
    CD              reduce using rule 42 (dimension -> CI expresiones CD .)
    BREAK           reduce using rule 42 (dimension -> CI expresiones CD .)
    CONTINUE        reduce using rule 42 (dimension -> CI expresiones CD .)


state 175

    (149) expre_aritmetica -> POWF PI expresiones COMA . expresiones PD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PD              reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 228
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 176

    (150) expre_aritmetica -> POW PI expresiones COMA . expresiones PD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PD              reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 229
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 177

    (69) varios_match -> expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    IGUAL           reduce using rule 69 (varios_match -> expresiones .)
    BARRA           reduce using rule 69 (varios_match -> expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 178

    (59) start_match -> MATCH expresiones LI matches . LD
    (60) matches -> matches . bloque_match
    (24) bloque_match -> . impresiones
    (25) bloque_match -> . asignacion
    (26) bloque_match -> . llamada
    (27) bloque_match -> . start_match
    (28) bloque_match -> . start_if
    (29) bloque_match -> . start_while
    (30) bloque_match -> . return_ins
    (31) bloque_match -> . start_loop
    (32) bloque_match -> . declaracion_arreglo
    (33) bloque_match -> .
    (62) bloque_match -> . varios_match IGUAL MAYOR simple_bloque_exp COMA
    (63) bloque_match -> . varios_match IGUAL MAYOR LI list_exp_ins LD
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (68) varios_match -> . varios_match BARRA expresiones
    (69) varios_match -> . expresiones
    (70) varios_match -> . GBAJO
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for GBAJO resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for OR resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for AND resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for AS resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for IGUAL resolved using rule 33 (bloque_match -> .)
  ! reduce/reduce conflict for BARRA resolved using rule 33 (bloque_match -> .)
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 230
    IGUAL           reduce using rule 33 (bloque_match -> .)
    BARRA           reduce using rule 33 (bloque_match -> .)
    PUNTO           reduce using rule 33 (bloque_match -> .)
    OR              reduce using rule 33 (bloque_match -> .)
    AND             reduce using rule 33 (bloque_match -> .)
    MAYORIGUAL      reduce using rule 33 (bloque_match -> .)
    MAYOR           reduce using rule 33 (bloque_match -> .)
    MENORIGUAL      reduce using rule 33 (bloque_match -> .)
    MENOR           reduce using rule 33 (bloque_match -> .)
    IGUALDAD        reduce using rule 33 (bloque_match -> .)
    DESIGUALDAD     reduce using rule 33 (bloque_match -> .)
    SUMA            reduce using rule 33 (bloque_match -> .)
    MULTI           reduce using rule 33 (bloque_match -> .)
    DIVI            reduce using rule 33 (bloque_match -> .)
    MODULO          reduce using rule 33 (bloque_match -> .)
    AS              reduce using rule 33 (bloque_match -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    LOOP            shift and go to state 41
    LET             shift and go to state 191
    GBAJO           shift and go to state 192
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! LD              [ reduce using rule 33 (bloque_match -> .) ]
  ! PRINTLN         [ reduce using rule 33 (bloque_match -> .) ]
  ! PRINT           [ reduce using rule 33 (bloque_match -> .) ]
  ! ID              [ reduce using rule 33 (bloque_match -> .) ]
  ! MATCH           [ reduce using rule 33 (bloque_match -> .) ]
  ! IF              [ reduce using rule 33 (bloque_match -> .) ]
  ! WHILE           [ reduce using rule 33 (bloque_match -> .) ]
  ! RETURN          [ reduce using rule 33 (bloque_match -> .) ]
  ! LOOP            [ reduce using rule 33 (bloque_match -> .) ]
  ! LET             [ reduce using rule 33 (bloque_match -> .) ]
  ! GBAJO           [ reduce using rule 33 (bloque_match -> .) ]
  ! NOT             [ reduce using rule 33 (bloque_match -> .) ]
  ! RESTA           [ reduce using rule 33 (bloque_match -> .) ]
  ! PI              [ reduce using rule 33 (bloque_match -> .) ]
  ! POWF            [ reduce using rule 33 (bloque_match -> .) ]
  ! POW             [ reduce using rule 33 (bloque_match -> .) ]
  ! CI              [ reduce using rule 33 (bloque_match -> .) ]
  ! ENTERO          [ reduce using rule 33 (bloque_match -> .) ]
  ! FLOAT           [ reduce using rule 33 (bloque_match -> .) ]
  ! CADENA          [ reduce using rule 33 (bloque_match -> .) ]
  ! CARACTER        [ reduce using rule 33 (bloque_match -> .) ]
  ! TRUE            [ reduce using rule 33 (bloque_match -> .) ]
  ! FALSE           [ reduce using rule 33 (bloque_match -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! IGUAL           [ reduce using rule 116 (expresiones -> .) ]
  ! BARRA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 177
    bloque_match                   shift and go to state 231
    impresiones                    shift and go to state 180
    asignacion                     shift and go to state 181
    llamada                        shift and go to state 182
    start_match                    shift and go to state 183
    start_if                       shift and go to state 184
    start_while                    shift and go to state 185
    return_ins                     shift and go to state 186
    start_loop                     shift and go to state 187
    declaracion_arreglo            shift and go to state 188
    varios_match                   shift and go to state 189
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 179

    (61) matches -> bloque_match .

    LD              reduce using rule 61 (matches -> bloque_match .)
    PRINTLN         reduce using rule 61 (matches -> bloque_match .)
    PRINT           reduce using rule 61 (matches -> bloque_match .)
    ID              reduce using rule 61 (matches -> bloque_match .)
    MATCH           reduce using rule 61 (matches -> bloque_match .)
    IF              reduce using rule 61 (matches -> bloque_match .)
    WHILE           reduce using rule 61 (matches -> bloque_match .)
    RETURN          reduce using rule 61 (matches -> bloque_match .)
    LOOP            reduce using rule 61 (matches -> bloque_match .)
    LET             reduce using rule 61 (matches -> bloque_match .)
    GBAJO           reduce using rule 61 (matches -> bloque_match .)
    NOT             reduce using rule 61 (matches -> bloque_match .)
    RESTA           reduce using rule 61 (matches -> bloque_match .)
    PI              reduce using rule 61 (matches -> bloque_match .)
    POWF            reduce using rule 61 (matches -> bloque_match .)
    POW             reduce using rule 61 (matches -> bloque_match .)
    CI              reduce using rule 61 (matches -> bloque_match .)
    ENTERO          reduce using rule 61 (matches -> bloque_match .)
    FLOAT           reduce using rule 61 (matches -> bloque_match .)
    CADENA          reduce using rule 61 (matches -> bloque_match .)
    CARACTER        reduce using rule 61 (matches -> bloque_match .)
    TRUE            reduce using rule 61 (matches -> bloque_match .)
    FALSE           reduce using rule 61 (matches -> bloque_match .)
    IGUAL           reduce using rule 61 (matches -> bloque_match .)
    BARRA           reduce using rule 61 (matches -> bloque_match .)
    PUNTO           reduce using rule 61 (matches -> bloque_match .)
    OR              reduce using rule 61 (matches -> bloque_match .)
    AND             reduce using rule 61 (matches -> bloque_match .)
    MAYORIGUAL      reduce using rule 61 (matches -> bloque_match .)
    MAYOR           reduce using rule 61 (matches -> bloque_match .)
    MENORIGUAL      reduce using rule 61 (matches -> bloque_match .)
    MENOR           reduce using rule 61 (matches -> bloque_match .)
    IGUALDAD        reduce using rule 61 (matches -> bloque_match .)
    DESIGUALDAD     reduce using rule 61 (matches -> bloque_match .)
    SUMA            reduce using rule 61 (matches -> bloque_match .)
    MULTI           reduce using rule 61 (matches -> bloque_match .)
    DIVI            reduce using rule 61 (matches -> bloque_match .)
    MODULO          reduce using rule 61 (matches -> bloque_match .)
    AS              reduce using rule 61 (matches -> bloque_match .)


state 180

    (24) bloque_match -> impresiones .

    LD              reduce using rule 24 (bloque_match -> impresiones .)
    PRINTLN         reduce using rule 24 (bloque_match -> impresiones .)
    PRINT           reduce using rule 24 (bloque_match -> impresiones .)
    ID              reduce using rule 24 (bloque_match -> impresiones .)
    MATCH           reduce using rule 24 (bloque_match -> impresiones .)
    IF              reduce using rule 24 (bloque_match -> impresiones .)
    WHILE           reduce using rule 24 (bloque_match -> impresiones .)
    RETURN          reduce using rule 24 (bloque_match -> impresiones .)
    LOOP            reduce using rule 24 (bloque_match -> impresiones .)
    LET             reduce using rule 24 (bloque_match -> impresiones .)
    GBAJO           reduce using rule 24 (bloque_match -> impresiones .)
    NOT             reduce using rule 24 (bloque_match -> impresiones .)
    RESTA           reduce using rule 24 (bloque_match -> impresiones .)
    PI              reduce using rule 24 (bloque_match -> impresiones .)
    POWF            reduce using rule 24 (bloque_match -> impresiones .)
    POW             reduce using rule 24 (bloque_match -> impresiones .)
    CI              reduce using rule 24 (bloque_match -> impresiones .)
    ENTERO          reduce using rule 24 (bloque_match -> impresiones .)
    FLOAT           reduce using rule 24 (bloque_match -> impresiones .)
    CADENA          reduce using rule 24 (bloque_match -> impresiones .)
    CARACTER        reduce using rule 24 (bloque_match -> impresiones .)
    TRUE            reduce using rule 24 (bloque_match -> impresiones .)
    FALSE           reduce using rule 24 (bloque_match -> impresiones .)
    IGUAL           reduce using rule 24 (bloque_match -> impresiones .)
    BARRA           reduce using rule 24 (bloque_match -> impresiones .)
    PUNTO           reduce using rule 24 (bloque_match -> impresiones .)
    OR              reduce using rule 24 (bloque_match -> impresiones .)
    AND             reduce using rule 24 (bloque_match -> impresiones .)
    MAYORIGUAL      reduce using rule 24 (bloque_match -> impresiones .)
    MAYOR           reduce using rule 24 (bloque_match -> impresiones .)
    MENORIGUAL      reduce using rule 24 (bloque_match -> impresiones .)
    MENOR           reduce using rule 24 (bloque_match -> impresiones .)
    IGUALDAD        reduce using rule 24 (bloque_match -> impresiones .)
    DESIGUALDAD     reduce using rule 24 (bloque_match -> impresiones .)
    SUMA            reduce using rule 24 (bloque_match -> impresiones .)
    MULTI           reduce using rule 24 (bloque_match -> impresiones .)
    DIVI            reduce using rule 24 (bloque_match -> impresiones .)
    MODULO          reduce using rule 24 (bloque_match -> impresiones .)
    AS              reduce using rule 24 (bloque_match -> impresiones .)
    COMA            reduce using rule 24 (bloque_match -> impresiones .)


state 181

    (25) bloque_match -> asignacion .

    LD              reduce using rule 25 (bloque_match -> asignacion .)
    PRINTLN         reduce using rule 25 (bloque_match -> asignacion .)
    PRINT           reduce using rule 25 (bloque_match -> asignacion .)
    ID              reduce using rule 25 (bloque_match -> asignacion .)
    MATCH           reduce using rule 25 (bloque_match -> asignacion .)
    IF              reduce using rule 25 (bloque_match -> asignacion .)
    WHILE           reduce using rule 25 (bloque_match -> asignacion .)
    RETURN          reduce using rule 25 (bloque_match -> asignacion .)
    LOOP            reduce using rule 25 (bloque_match -> asignacion .)
    LET             reduce using rule 25 (bloque_match -> asignacion .)
    GBAJO           reduce using rule 25 (bloque_match -> asignacion .)
    NOT             reduce using rule 25 (bloque_match -> asignacion .)
    RESTA           reduce using rule 25 (bloque_match -> asignacion .)
    PI              reduce using rule 25 (bloque_match -> asignacion .)
    POWF            reduce using rule 25 (bloque_match -> asignacion .)
    POW             reduce using rule 25 (bloque_match -> asignacion .)
    CI              reduce using rule 25 (bloque_match -> asignacion .)
    ENTERO          reduce using rule 25 (bloque_match -> asignacion .)
    FLOAT           reduce using rule 25 (bloque_match -> asignacion .)
    CADENA          reduce using rule 25 (bloque_match -> asignacion .)
    CARACTER        reduce using rule 25 (bloque_match -> asignacion .)
    TRUE            reduce using rule 25 (bloque_match -> asignacion .)
    FALSE           reduce using rule 25 (bloque_match -> asignacion .)
    IGUAL           reduce using rule 25 (bloque_match -> asignacion .)
    BARRA           reduce using rule 25 (bloque_match -> asignacion .)
    PUNTO           reduce using rule 25 (bloque_match -> asignacion .)
    OR              reduce using rule 25 (bloque_match -> asignacion .)
    AND             reduce using rule 25 (bloque_match -> asignacion .)
    MAYORIGUAL      reduce using rule 25 (bloque_match -> asignacion .)
    MAYOR           reduce using rule 25 (bloque_match -> asignacion .)
    MENORIGUAL      reduce using rule 25 (bloque_match -> asignacion .)
    MENOR           reduce using rule 25 (bloque_match -> asignacion .)
    IGUALDAD        reduce using rule 25 (bloque_match -> asignacion .)
    DESIGUALDAD     reduce using rule 25 (bloque_match -> asignacion .)
    SUMA            reduce using rule 25 (bloque_match -> asignacion .)
    MULTI           reduce using rule 25 (bloque_match -> asignacion .)
    DIVI            reduce using rule 25 (bloque_match -> asignacion .)
    MODULO          reduce using rule 25 (bloque_match -> asignacion .)
    AS              reduce using rule 25 (bloque_match -> asignacion .)
    COMA            reduce using rule 25 (bloque_match -> asignacion .)


state 182

    (26) bloque_match -> llamada .
    (121) expre_valor -> llamada .

  ! reduce/reduce conflict for PUNTO resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for OR resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for AND resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MAYOR resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MENOR resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for RESTA resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for SUMA resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MULTI resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for DIVI resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MODULO resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for AS resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for IGUAL resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for BARRA resolved using rule 26 (bloque_match -> llamada .)
  ! reduce/reduce conflict for COMA resolved using rule 26 (bloque_match -> llamada .)
    LD              reduce using rule 26 (bloque_match -> llamada .)
    PRINTLN         reduce using rule 26 (bloque_match -> llamada .)
    PRINT           reduce using rule 26 (bloque_match -> llamada .)
    ID              reduce using rule 26 (bloque_match -> llamada .)
    MATCH           reduce using rule 26 (bloque_match -> llamada .)
    IF              reduce using rule 26 (bloque_match -> llamada .)
    WHILE           reduce using rule 26 (bloque_match -> llamada .)
    RETURN          reduce using rule 26 (bloque_match -> llamada .)
    LOOP            reduce using rule 26 (bloque_match -> llamada .)
    LET             reduce using rule 26 (bloque_match -> llamada .)
    GBAJO           reduce using rule 26 (bloque_match -> llamada .)
    NOT             reduce using rule 26 (bloque_match -> llamada .)
    RESTA           reduce using rule 26 (bloque_match -> llamada .)
    PI              reduce using rule 26 (bloque_match -> llamada .)
    POWF            reduce using rule 26 (bloque_match -> llamada .)
    POW             reduce using rule 26 (bloque_match -> llamada .)
    CI              reduce using rule 26 (bloque_match -> llamada .)
    ENTERO          reduce using rule 26 (bloque_match -> llamada .)
    FLOAT           reduce using rule 26 (bloque_match -> llamada .)
    CADENA          reduce using rule 26 (bloque_match -> llamada .)
    CARACTER        reduce using rule 26 (bloque_match -> llamada .)
    TRUE            reduce using rule 26 (bloque_match -> llamada .)
    FALSE           reduce using rule 26 (bloque_match -> llamada .)
    IGUAL           reduce using rule 26 (bloque_match -> llamada .)
    BARRA           reduce using rule 26 (bloque_match -> llamada .)
    PUNTO           reduce using rule 26 (bloque_match -> llamada .)
    OR              reduce using rule 26 (bloque_match -> llamada .)
    AND             reduce using rule 26 (bloque_match -> llamada .)
    MAYORIGUAL      reduce using rule 26 (bloque_match -> llamada .)
    MAYOR           reduce using rule 26 (bloque_match -> llamada .)
    MENORIGUAL      reduce using rule 26 (bloque_match -> llamada .)
    MENOR           reduce using rule 26 (bloque_match -> llamada .)
    IGUALDAD        reduce using rule 26 (bloque_match -> llamada .)
    DESIGUALDAD     reduce using rule 26 (bloque_match -> llamada .)
    SUMA            reduce using rule 26 (bloque_match -> llamada .)
    MULTI           reduce using rule 26 (bloque_match -> llamada .)
    DIVI            reduce using rule 26 (bloque_match -> llamada .)
    MODULO          reduce using rule 26 (bloque_match -> llamada .)
    AS              reduce using rule 26 (bloque_match -> llamada .)
    COMA            reduce using rule 26 (bloque_match -> llamada .)

  ! PUNTO           [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! OR              [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! AND             [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! MAYORIGUAL      [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! MAYOR           [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! MENORIGUAL      [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! MENOR           [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! IGUALDAD        [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! DESIGUALDAD     [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! RESTA           [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! SUMA            [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! MULTI           [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! DIVI            [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! MODULO          [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! AS              [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! IGUAL           [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! BARRA           [ reduce using rule 121 (expre_valor -> llamada .) ]
  ! COMA            [ reduce using rule 121 (expre_valor -> llamada .) ]


state 183

    (27) bloque_match -> start_match .
    (118) expre_valor -> start_match .

  ! reduce/reduce conflict for PUNTO resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for OR resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for AND resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MAYOR resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MENOR resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for RESTA resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for SUMA resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MULTI resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for DIVI resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MODULO resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for AS resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for IGUAL resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for BARRA resolved using rule 27 (bloque_match -> start_match .)
  ! reduce/reduce conflict for COMA resolved using rule 27 (bloque_match -> start_match .)
    LD              reduce using rule 27 (bloque_match -> start_match .)
    PRINTLN         reduce using rule 27 (bloque_match -> start_match .)
    PRINT           reduce using rule 27 (bloque_match -> start_match .)
    ID              reduce using rule 27 (bloque_match -> start_match .)
    MATCH           reduce using rule 27 (bloque_match -> start_match .)
    IF              reduce using rule 27 (bloque_match -> start_match .)
    WHILE           reduce using rule 27 (bloque_match -> start_match .)
    RETURN          reduce using rule 27 (bloque_match -> start_match .)
    LOOP            reduce using rule 27 (bloque_match -> start_match .)
    LET             reduce using rule 27 (bloque_match -> start_match .)
    GBAJO           reduce using rule 27 (bloque_match -> start_match .)
    NOT             reduce using rule 27 (bloque_match -> start_match .)
    RESTA           reduce using rule 27 (bloque_match -> start_match .)
    PI              reduce using rule 27 (bloque_match -> start_match .)
    POWF            reduce using rule 27 (bloque_match -> start_match .)
    POW             reduce using rule 27 (bloque_match -> start_match .)
    CI              reduce using rule 27 (bloque_match -> start_match .)
    ENTERO          reduce using rule 27 (bloque_match -> start_match .)
    FLOAT           reduce using rule 27 (bloque_match -> start_match .)
    CADENA          reduce using rule 27 (bloque_match -> start_match .)
    CARACTER        reduce using rule 27 (bloque_match -> start_match .)
    TRUE            reduce using rule 27 (bloque_match -> start_match .)
    FALSE           reduce using rule 27 (bloque_match -> start_match .)
    IGUAL           reduce using rule 27 (bloque_match -> start_match .)
    BARRA           reduce using rule 27 (bloque_match -> start_match .)
    PUNTO           reduce using rule 27 (bloque_match -> start_match .)
    OR              reduce using rule 27 (bloque_match -> start_match .)
    AND             reduce using rule 27 (bloque_match -> start_match .)
    MAYORIGUAL      reduce using rule 27 (bloque_match -> start_match .)
    MAYOR           reduce using rule 27 (bloque_match -> start_match .)
    MENORIGUAL      reduce using rule 27 (bloque_match -> start_match .)
    MENOR           reduce using rule 27 (bloque_match -> start_match .)
    IGUALDAD        reduce using rule 27 (bloque_match -> start_match .)
    DESIGUALDAD     reduce using rule 27 (bloque_match -> start_match .)
    SUMA            reduce using rule 27 (bloque_match -> start_match .)
    MULTI           reduce using rule 27 (bloque_match -> start_match .)
    DIVI            reduce using rule 27 (bloque_match -> start_match .)
    MODULO          reduce using rule 27 (bloque_match -> start_match .)
    AS              reduce using rule 27 (bloque_match -> start_match .)
    COMA            reduce using rule 27 (bloque_match -> start_match .)

  ! PUNTO           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! OR              [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! AND             [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MAYORIGUAL      [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MAYOR           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MENORIGUAL      [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MENOR           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! IGUALDAD        [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! DESIGUALDAD     [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! RESTA           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! SUMA            [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MULTI           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! DIVI            [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MODULO          [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! AS              [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! IGUAL           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! BARRA           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! COMA            [ reduce using rule 118 (expre_valor -> start_match .) ]


state 184

    (28) bloque_match -> start_if .
    (119) expre_valor -> start_if .

  ! reduce/reduce conflict for PUNTO resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for OR resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for AND resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MAYOR resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MENOR resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for RESTA resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for SUMA resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MULTI resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for DIVI resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MODULO resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for AS resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for IGUAL resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for BARRA resolved using rule 28 (bloque_match -> start_if .)
  ! reduce/reduce conflict for COMA resolved using rule 28 (bloque_match -> start_if .)
    LD              reduce using rule 28 (bloque_match -> start_if .)
    PRINTLN         reduce using rule 28 (bloque_match -> start_if .)
    PRINT           reduce using rule 28 (bloque_match -> start_if .)
    ID              reduce using rule 28 (bloque_match -> start_if .)
    MATCH           reduce using rule 28 (bloque_match -> start_if .)
    IF              reduce using rule 28 (bloque_match -> start_if .)
    WHILE           reduce using rule 28 (bloque_match -> start_if .)
    RETURN          reduce using rule 28 (bloque_match -> start_if .)
    LOOP            reduce using rule 28 (bloque_match -> start_if .)
    LET             reduce using rule 28 (bloque_match -> start_if .)
    GBAJO           reduce using rule 28 (bloque_match -> start_if .)
    NOT             reduce using rule 28 (bloque_match -> start_if .)
    RESTA           reduce using rule 28 (bloque_match -> start_if .)
    PI              reduce using rule 28 (bloque_match -> start_if .)
    POWF            reduce using rule 28 (bloque_match -> start_if .)
    POW             reduce using rule 28 (bloque_match -> start_if .)
    CI              reduce using rule 28 (bloque_match -> start_if .)
    ENTERO          reduce using rule 28 (bloque_match -> start_if .)
    FLOAT           reduce using rule 28 (bloque_match -> start_if .)
    CADENA          reduce using rule 28 (bloque_match -> start_if .)
    CARACTER        reduce using rule 28 (bloque_match -> start_if .)
    TRUE            reduce using rule 28 (bloque_match -> start_if .)
    FALSE           reduce using rule 28 (bloque_match -> start_if .)
    IGUAL           reduce using rule 28 (bloque_match -> start_if .)
    BARRA           reduce using rule 28 (bloque_match -> start_if .)
    PUNTO           reduce using rule 28 (bloque_match -> start_if .)
    OR              reduce using rule 28 (bloque_match -> start_if .)
    AND             reduce using rule 28 (bloque_match -> start_if .)
    MAYORIGUAL      reduce using rule 28 (bloque_match -> start_if .)
    MAYOR           reduce using rule 28 (bloque_match -> start_if .)
    MENORIGUAL      reduce using rule 28 (bloque_match -> start_if .)
    MENOR           reduce using rule 28 (bloque_match -> start_if .)
    IGUALDAD        reduce using rule 28 (bloque_match -> start_if .)
    DESIGUALDAD     reduce using rule 28 (bloque_match -> start_if .)
    SUMA            reduce using rule 28 (bloque_match -> start_if .)
    MULTI           reduce using rule 28 (bloque_match -> start_if .)
    DIVI            reduce using rule 28 (bloque_match -> start_if .)
    MODULO          reduce using rule 28 (bloque_match -> start_if .)
    AS              reduce using rule 28 (bloque_match -> start_if .)
    COMA            reduce using rule 28 (bloque_match -> start_if .)

  ! PUNTO           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! OR              [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! AND             [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MAYORIGUAL      [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MAYOR           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MENORIGUAL      [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MENOR           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! IGUALDAD        [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! DESIGUALDAD     [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! RESTA           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! SUMA            [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MULTI           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! DIVI            [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MODULO          [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! AS              [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! IGUAL           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! BARRA           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! COMA            [ reduce using rule 119 (expre_valor -> start_if .) ]


state 185

    (29) bloque_match -> start_while .

    LD              reduce using rule 29 (bloque_match -> start_while .)
    PRINTLN         reduce using rule 29 (bloque_match -> start_while .)
    PRINT           reduce using rule 29 (bloque_match -> start_while .)
    ID              reduce using rule 29 (bloque_match -> start_while .)
    MATCH           reduce using rule 29 (bloque_match -> start_while .)
    IF              reduce using rule 29 (bloque_match -> start_while .)
    WHILE           reduce using rule 29 (bloque_match -> start_while .)
    RETURN          reduce using rule 29 (bloque_match -> start_while .)
    LOOP            reduce using rule 29 (bloque_match -> start_while .)
    LET             reduce using rule 29 (bloque_match -> start_while .)
    GBAJO           reduce using rule 29 (bloque_match -> start_while .)
    NOT             reduce using rule 29 (bloque_match -> start_while .)
    RESTA           reduce using rule 29 (bloque_match -> start_while .)
    PI              reduce using rule 29 (bloque_match -> start_while .)
    POWF            reduce using rule 29 (bloque_match -> start_while .)
    POW             reduce using rule 29 (bloque_match -> start_while .)
    CI              reduce using rule 29 (bloque_match -> start_while .)
    ENTERO          reduce using rule 29 (bloque_match -> start_while .)
    FLOAT           reduce using rule 29 (bloque_match -> start_while .)
    CADENA          reduce using rule 29 (bloque_match -> start_while .)
    CARACTER        reduce using rule 29 (bloque_match -> start_while .)
    TRUE            reduce using rule 29 (bloque_match -> start_while .)
    FALSE           reduce using rule 29 (bloque_match -> start_while .)
    IGUAL           reduce using rule 29 (bloque_match -> start_while .)
    BARRA           reduce using rule 29 (bloque_match -> start_while .)
    PUNTO           reduce using rule 29 (bloque_match -> start_while .)
    OR              reduce using rule 29 (bloque_match -> start_while .)
    AND             reduce using rule 29 (bloque_match -> start_while .)
    MAYORIGUAL      reduce using rule 29 (bloque_match -> start_while .)
    MAYOR           reduce using rule 29 (bloque_match -> start_while .)
    MENORIGUAL      reduce using rule 29 (bloque_match -> start_while .)
    MENOR           reduce using rule 29 (bloque_match -> start_while .)
    IGUALDAD        reduce using rule 29 (bloque_match -> start_while .)
    DESIGUALDAD     reduce using rule 29 (bloque_match -> start_while .)
    SUMA            reduce using rule 29 (bloque_match -> start_while .)
    MULTI           reduce using rule 29 (bloque_match -> start_while .)
    DIVI            reduce using rule 29 (bloque_match -> start_while .)
    MODULO          reduce using rule 29 (bloque_match -> start_while .)
    AS              reduce using rule 29 (bloque_match -> start_while .)
    COMA            reduce using rule 29 (bloque_match -> start_while .)


state 186

    (30) bloque_match -> return_ins .

    LD              reduce using rule 30 (bloque_match -> return_ins .)
    PRINTLN         reduce using rule 30 (bloque_match -> return_ins .)
    PRINT           reduce using rule 30 (bloque_match -> return_ins .)
    ID              reduce using rule 30 (bloque_match -> return_ins .)
    MATCH           reduce using rule 30 (bloque_match -> return_ins .)
    IF              reduce using rule 30 (bloque_match -> return_ins .)
    WHILE           reduce using rule 30 (bloque_match -> return_ins .)
    RETURN          reduce using rule 30 (bloque_match -> return_ins .)
    LOOP            reduce using rule 30 (bloque_match -> return_ins .)
    LET             reduce using rule 30 (bloque_match -> return_ins .)
    GBAJO           reduce using rule 30 (bloque_match -> return_ins .)
    NOT             reduce using rule 30 (bloque_match -> return_ins .)
    RESTA           reduce using rule 30 (bloque_match -> return_ins .)
    PI              reduce using rule 30 (bloque_match -> return_ins .)
    POWF            reduce using rule 30 (bloque_match -> return_ins .)
    POW             reduce using rule 30 (bloque_match -> return_ins .)
    CI              reduce using rule 30 (bloque_match -> return_ins .)
    ENTERO          reduce using rule 30 (bloque_match -> return_ins .)
    FLOAT           reduce using rule 30 (bloque_match -> return_ins .)
    CADENA          reduce using rule 30 (bloque_match -> return_ins .)
    CARACTER        reduce using rule 30 (bloque_match -> return_ins .)
    TRUE            reduce using rule 30 (bloque_match -> return_ins .)
    FALSE           reduce using rule 30 (bloque_match -> return_ins .)
    IGUAL           reduce using rule 30 (bloque_match -> return_ins .)
    BARRA           reduce using rule 30 (bloque_match -> return_ins .)
    PUNTO           reduce using rule 30 (bloque_match -> return_ins .)
    OR              reduce using rule 30 (bloque_match -> return_ins .)
    AND             reduce using rule 30 (bloque_match -> return_ins .)
    MAYORIGUAL      reduce using rule 30 (bloque_match -> return_ins .)
    MAYOR           reduce using rule 30 (bloque_match -> return_ins .)
    MENORIGUAL      reduce using rule 30 (bloque_match -> return_ins .)
    MENOR           reduce using rule 30 (bloque_match -> return_ins .)
    IGUALDAD        reduce using rule 30 (bloque_match -> return_ins .)
    DESIGUALDAD     reduce using rule 30 (bloque_match -> return_ins .)
    SUMA            reduce using rule 30 (bloque_match -> return_ins .)
    MULTI           reduce using rule 30 (bloque_match -> return_ins .)
    DIVI            reduce using rule 30 (bloque_match -> return_ins .)
    MODULO          reduce using rule 30 (bloque_match -> return_ins .)
    AS              reduce using rule 30 (bloque_match -> return_ins .)
    COMA            reduce using rule 30 (bloque_match -> return_ins .)


state 187

    (31) bloque_match -> start_loop .
    (120) expre_valor -> start_loop .

  ! reduce/reduce conflict for PUNTO resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for OR resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for AND resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MAYOR resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MENOR resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for RESTA resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for SUMA resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MULTI resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for DIVI resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MODULO resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for AS resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for IGUAL resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for BARRA resolved using rule 31 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for COMA resolved using rule 31 (bloque_match -> start_loop .)
    LD              reduce using rule 31 (bloque_match -> start_loop .)
    PRINTLN         reduce using rule 31 (bloque_match -> start_loop .)
    PRINT           reduce using rule 31 (bloque_match -> start_loop .)
    ID              reduce using rule 31 (bloque_match -> start_loop .)
    MATCH           reduce using rule 31 (bloque_match -> start_loop .)
    IF              reduce using rule 31 (bloque_match -> start_loop .)
    WHILE           reduce using rule 31 (bloque_match -> start_loop .)
    RETURN          reduce using rule 31 (bloque_match -> start_loop .)
    LOOP            reduce using rule 31 (bloque_match -> start_loop .)
    LET             reduce using rule 31 (bloque_match -> start_loop .)
    GBAJO           reduce using rule 31 (bloque_match -> start_loop .)
    NOT             reduce using rule 31 (bloque_match -> start_loop .)
    RESTA           reduce using rule 31 (bloque_match -> start_loop .)
    PI              reduce using rule 31 (bloque_match -> start_loop .)
    POWF            reduce using rule 31 (bloque_match -> start_loop .)
    POW             reduce using rule 31 (bloque_match -> start_loop .)
    CI              reduce using rule 31 (bloque_match -> start_loop .)
    ENTERO          reduce using rule 31 (bloque_match -> start_loop .)
    FLOAT           reduce using rule 31 (bloque_match -> start_loop .)
    CADENA          reduce using rule 31 (bloque_match -> start_loop .)
    CARACTER        reduce using rule 31 (bloque_match -> start_loop .)
    TRUE            reduce using rule 31 (bloque_match -> start_loop .)
    FALSE           reduce using rule 31 (bloque_match -> start_loop .)
    IGUAL           reduce using rule 31 (bloque_match -> start_loop .)
    BARRA           reduce using rule 31 (bloque_match -> start_loop .)
    PUNTO           reduce using rule 31 (bloque_match -> start_loop .)
    OR              reduce using rule 31 (bloque_match -> start_loop .)
    AND             reduce using rule 31 (bloque_match -> start_loop .)
    MAYORIGUAL      reduce using rule 31 (bloque_match -> start_loop .)
    MAYOR           reduce using rule 31 (bloque_match -> start_loop .)
    MENORIGUAL      reduce using rule 31 (bloque_match -> start_loop .)
    MENOR           reduce using rule 31 (bloque_match -> start_loop .)
    IGUALDAD        reduce using rule 31 (bloque_match -> start_loop .)
    DESIGUALDAD     reduce using rule 31 (bloque_match -> start_loop .)
    SUMA            reduce using rule 31 (bloque_match -> start_loop .)
    MULTI           reduce using rule 31 (bloque_match -> start_loop .)
    DIVI            reduce using rule 31 (bloque_match -> start_loop .)
    MODULO          reduce using rule 31 (bloque_match -> start_loop .)
    AS              reduce using rule 31 (bloque_match -> start_loop .)
    COMA            reduce using rule 31 (bloque_match -> start_loop .)

  ! PUNTO           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! OR              [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! AND             [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MAYORIGUAL      [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MAYOR           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MENORIGUAL      [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MENOR           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! IGUALDAD        [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! DESIGUALDAD     [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! RESTA           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! SUMA            [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MULTI           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! DIVI            [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MODULO          [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! AS              [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! IGUAL           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! BARRA           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! COMA            [ reduce using rule 120 (expre_valor -> start_loop .) ]


state 188

    (32) bloque_match -> declaracion_arreglo .

    LD              reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    PRINTLN         reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    PRINT           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    ID              reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    MATCH           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    IF              reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    WHILE           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    RETURN          reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    LOOP            reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    LET             reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    GBAJO           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    NOT             reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    RESTA           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    PI              reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    POWF            reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    POW             reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    CI              reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    ENTERO          reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    FLOAT           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    CADENA          reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    CARACTER        reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    TRUE            reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    FALSE           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    IGUAL           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    BARRA           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    PUNTO           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    OR              reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    AND             reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    MAYORIGUAL      reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    MAYOR           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    MENORIGUAL      reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    MENOR           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    IGUALDAD        reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    DESIGUALDAD     reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    SUMA            reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    MULTI           reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    DIVI            reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    MODULO          reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    AS              reduce using rule 32 (bloque_match -> declaracion_arreglo .)
    COMA            reduce using rule 32 (bloque_match -> declaracion_arreglo .)


state 189

    (62) bloque_match -> varios_match . IGUAL MAYOR simple_bloque_exp COMA
    (63) bloque_match -> varios_match . IGUAL MAYOR LI list_exp_ins LD
    (68) varios_match -> varios_match . BARRA expresiones

    IGUAL           shift and go to state 232
    BARRA           shift and go to state 233


state 190

    (94) asignacion -> ID . IGUAL expresiones
    (71) llamada -> ID . PI PD
    (72) llamada -> ID . PI lista_expres PD
    (39) acceso_arreglo -> ID . dimensiones
    (157) datos -> ID .
    (40) dimensiones -> . dimensiones dimension
    (41) dimensiones -> . dimension
    (42) dimension -> . CI expresiones CD

  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for CI resolved as shift
    IGUAL           shift and go to state 14
    PI              shift and go to state 56
    PUNTO           reduce using rule 157 (datos -> ID .)
    OR              reduce using rule 157 (datos -> ID .)
    AND             reduce using rule 157 (datos -> ID .)
    MAYORIGUAL      reduce using rule 157 (datos -> ID .)
    MAYOR           reduce using rule 157 (datos -> ID .)
    MENORIGUAL      reduce using rule 157 (datos -> ID .)
    MENOR           reduce using rule 157 (datos -> ID .)
    IGUALDAD        reduce using rule 157 (datos -> ID .)
    DESIGUALDAD     reduce using rule 157 (datos -> ID .)
    RESTA           reduce using rule 157 (datos -> ID .)
    SUMA            reduce using rule 157 (datos -> ID .)
    MULTI           reduce using rule 157 (datos -> ID .)
    DIVI            reduce using rule 157 (datos -> ID .)
    MODULO          reduce using rule 157 (datos -> ID .)
    AS              reduce using rule 157 (datos -> ID .)
    BARRA           reduce using rule 157 (datos -> ID .)
    LD              reduce using rule 157 (datos -> ID .)
    PRINTLN         reduce using rule 157 (datos -> ID .)
    PRINT           reduce using rule 157 (datos -> ID .)
    LET             reduce using rule 157 (datos -> ID .)
    ID              reduce using rule 157 (datos -> ID .)
    MATCH           reduce using rule 157 (datos -> ID .)
    IF              reduce using rule 157 (datos -> ID .)
    WHILE           reduce using rule 157 (datos -> ID .)
    RETURN          reduce using rule 157 (datos -> ID .)
    BREAK           reduce using rule 157 (datos -> ID .)
    CONTINUE        reduce using rule 157 (datos -> ID .)
    LOOP            reduce using rule 157 (datos -> ID .)
    NOT             reduce using rule 157 (datos -> ID .)
    POWF            reduce using rule 157 (datos -> ID .)
    POW             reduce using rule 157 (datos -> ID .)
    ENTERO          reduce using rule 157 (datos -> ID .)
    FLOAT           reduce using rule 157 (datos -> ID .)
    CADENA          reduce using rule 157 (datos -> ID .)
    CARACTER        reduce using rule 157 (datos -> ID .)
    TRUE            reduce using rule 157 (datos -> ID .)
    FALSE           reduce using rule 157 (datos -> ID .)
    COMA            reduce using rule 157 (datos -> ID .)
    CI              shift and go to state 59

  ! IGUAL           [ reduce using rule 157 (datos -> ID .) ]
  ! PI              [ reduce using rule 157 (datos -> ID .) ]
  ! CI              [ reduce using rule 157 (datos -> ID .) ]

    dimensiones                    shift and go to state 57
    dimension                      shift and go to state 58

state 191

    (35) declaracion_arreglo -> LET . mutable ID validacion_dimension IGUAL expresiones PYC
    (95) mutable -> . MUT
    (96) mutable -> .

    MUT             shift and go to state 16
    ID              reduce using rule 96 (mutable -> .)

    mutable                        shift and go to state 234

state 192

    (70) varios_match -> GBAJO .

    IGUAL           reduce using rule 70 (varios_match -> GBAJO .)
    BARRA           reduce using rule 70 (varios_match -> GBAJO .)


state 193

    (67) bloque_exp -> expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DESIGUALDAD resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIVI resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for AS resolved as shift
    LD              reduce using rule 67 (bloque_exp -> expresiones .)
    PRINTLN         reduce using rule 67 (bloque_exp -> expresiones .)
    PRINT           reduce using rule 67 (bloque_exp -> expresiones .)
    LET             reduce using rule 67 (bloque_exp -> expresiones .)
    ID              reduce using rule 67 (bloque_exp -> expresiones .)
    MATCH           reduce using rule 67 (bloque_exp -> expresiones .)
    IF              reduce using rule 67 (bloque_exp -> expresiones .)
    WHILE           reduce using rule 67 (bloque_exp -> expresiones .)
    RETURN          reduce using rule 67 (bloque_exp -> expresiones .)
    BREAK           reduce using rule 67 (bloque_exp -> expresiones .)
    CONTINUE        reduce using rule 67 (bloque_exp -> expresiones .)
    LOOP            reduce using rule 67 (bloque_exp -> expresiones .)
    NOT             reduce using rule 67 (bloque_exp -> expresiones .)
    PI              reduce using rule 67 (bloque_exp -> expresiones .)
    POWF            reduce using rule 67 (bloque_exp -> expresiones .)
    POW             reduce using rule 67 (bloque_exp -> expresiones .)
    CI              reduce using rule 67 (bloque_exp -> expresiones .)
    ENTERO          reduce using rule 67 (bloque_exp -> expresiones .)
    FLOAT           reduce using rule 67 (bloque_exp -> expresiones .)
    CADENA          reduce using rule 67 (bloque_exp -> expresiones .)
    CARACTER        reduce using rule 67 (bloque_exp -> expresiones .)
    TRUE            reduce using rule 67 (bloque_exp -> expresiones .)
    FALSE           reduce using rule 67 (bloque_exp -> expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74

  ! RESTA           [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! PUNTO           [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! OR              [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! AND             [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! MAYORIGUAL      [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! MAYOR           [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! MENORIGUAL      [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! MENOR           [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! IGUALDAD        [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! DESIGUALDAD     [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! SUMA            [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! MULTI           [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! DIVI            [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! MODULO          [ reduce using rule 67 (bloque_exp -> expresiones .) ]
  ! AS              [ reduce using rule 67 (bloque_exp -> expresiones .) ]


state 194

    (52) start_if -> IF expresiones LI list_exp_ins . LD
    (53) start_if -> IF expresiones LI list_exp_ins . LD ELSE LI list_exp_ins LD
    (54) start_if -> IF expresiones LI list_exp_ins . LD lista_elif
    (55) start_if -> IF expresiones LI list_exp_ins . LD lista_elif ELSE LI list_exp_ins LD
    (50) list_exp_ins -> list_exp_ins . bloque_exp
    (66) bloque_exp -> . bloque
    (67) bloque_exp -> . expresiones
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (39) acceso_arreglo -> . ID dimensiones
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AS resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PRINTLN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 235
    PUNTO           reduce using rule 23 (bloque -> .)
    OR              reduce using rule 23 (bloque -> .)
    AND             reduce using rule 23 (bloque -> .)
    MAYORIGUAL      reduce using rule 23 (bloque -> .)
    MAYOR           reduce using rule 23 (bloque -> .)
    MENORIGUAL      reduce using rule 23 (bloque -> .)
    MENOR           reduce using rule 23 (bloque -> .)
    IGUALDAD        reduce using rule 23 (bloque -> .)
    DESIGUALDAD     reduce using rule 23 (bloque -> .)
    SUMA            reduce using rule 23 (bloque -> .)
    MULTI           reduce using rule 23 (bloque -> .)
    DIVI            reduce using rule 23 (bloque -> .)
    MODULO          reduce using rule 23 (bloque -> .)
    AS              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! LD              [ reduce using rule 23 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]
  ! NOT             [ reduce using rule 23 (bloque -> .) ]
  ! RESTA           [ reduce using rule 23 (bloque -> .) ]
  ! PI              [ reduce using rule 23 (bloque -> .) ]
  ! POWF            [ reduce using rule 23 (bloque -> .) ]
  ! POW             [ reduce using rule 23 (bloque -> .) ]
  ! CI              [ reduce using rule 23 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 23 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 23 (bloque -> .) ]
  ! CADENA          [ reduce using rule 23 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 23 (bloque -> .) ]
  ! TRUE            [ reduce using rule 23 (bloque -> .) ]
  ! FALSE           [ reduce using rule 23 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 116 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 193
    bloque_exp                     shift and go to state 236
    bloque                         shift and go to state 196
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 197
    start_match                    shift and go to state 198
    start_if                       shift and go to state 199
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 200
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    acceso_arreglo                 shift and go to state 201
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 195

    (51) list_exp_ins -> bloque_exp .

    LD              reduce using rule 51 (list_exp_ins -> bloque_exp .)
    PRINTLN         reduce using rule 51 (list_exp_ins -> bloque_exp .)
    PRINT           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    LET             reduce using rule 51 (list_exp_ins -> bloque_exp .)
    ID              reduce using rule 51 (list_exp_ins -> bloque_exp .)
    MATCH           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    IF              reduce using rule 51 (list_exp_ins -> bloque_exp .)
    WHILE           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    RETURN          reduce using rule 51 (list_exp_ins -> bloque_exp .)
    BREAK           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    CONTINUE        reduce using rule 51 (list_exp_ins -> bloque_exp .)
    LOOP            reduce using rule 51 (list_exp_ins -> bloque_exp .)
    NOT             reduce using rule 51 (list_exp_ins -> bloque_exp .)
    RESTA           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    PI              reduce using rule 51 (list_exp_ins -> bloque_exp .)
    POWF            reduce using rule 51 (list_exp_ins -> bloque_exp .)
    POW             reduce using rule 51 (list_exp_ins -> bloque_exp .)
    CI              reduce using rule 51 (list_exp_ins -> bloque_exp .)
    ENTERO          reduce using rule 51 (list_exp_ins -> bloque_exp .)
    FLOAT           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    CADENA          reduce using rule 51 (list_exp_ins -> bloque_exp .)
    CARACTER        reduce using rule 51 (list_exp_ins -> bloque_exp .)
    TRUE            reduce using rule 51 (list_exp_ins -> bloque_exp .)
    FALSE           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    PUNTO           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    OR              reduce using rule 51 (list_exp_ins -> bloque_exp .)
    AND             reduce using rule 51 (list_exp_ins -> bloque_exp .)
    MAYORIGUAL      reduce using rule 51 (list_exp_ins -> bloque_exp .)
    MAYOR           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    MENORIGUAL      reduce using rule 51 (list_exp_ins -> bloque_exp .)
    MENOR           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    IGUALDAD        reduce using rule 51 (list_exp_ins -> bloque_exp .)
    DESIGUALDAD     reduce using rule 51 (list_exp_ins -> bloque_exp .)
    SUMA            reduce using rule 51 (list_exp_ins -> bloque_exp .)
    MULTI           reduce using rule 51 (list_exp_ins -> bloque_exp .)
    DIVI            reduce using rule 51 (list_exp_ins -> bloque_exp .)
    MODULO          reduce using rule 51 (list_exp_ins -> bloque_exp .)
    AS              reduce using rule 51 (list_exp_ins -> bloque_exp .)


state 196

    (66) bloque_exp -> bloque .

    LD              reduce using rule 66 (bloque_exp -> bloque .)
    PRINTLN         reduce using rule 66 (bloque_exp -> bloque .)
    PRINT           reduce using rule 66 (bloque_exp -> bloque .)
    LET             reduce using rule 66 (bloque_exp -> bloque .)
    ID              reduce using rule 66 (bloque_exp -> bloque .)
    MATCH           reduce using rule 66 (bloque_exp -> bloque .)
    IF              reduce using rule 66 (bloque_exp -> bloque .)
    WHILE           reduce using rule 66 (bloque_exp -> bloque .)
    RETURN          reduce using rule 66 (bloque_exp -> bloque .)
    BREAK           reduce using rule 66 (bloque_exp -> bloque .)
    CONTINUE        reduce using rule 66 (bloque_exp -> bloque .)
    LOOP            reduce using rule 66 (bloque_exp -> bloque .)
    NOT             reduce using rule 66 (bloque_exp -> bloque .)
    RESTA           reduce using rule 66 (bloque_exp -> bloque .)
    PI              reduce using rule 66 (bloque_exp -> bloque .)
    POWF            reduce using rule 66 (bloque_exp -> bloque .)
    POW             reduce using rule 66 (bloque_exp -> bloque .)
    CI              reduce using rule 66 (bloque_exp -> bloque .)
    ENTERO          reduce using rule 66 (bloque_exp -> bloque .)
    FLOAT           reduce using rule 66 (bloque_exp -> bloque .)
    CADENA          reduce using rule 66 (bloque_exp -> bloque .)
    CARACTER        reduce using rule 66 (bloque_exp -> bloque .)
    TRUE            reduce using rule 66 (bloque_exp -> bloque .)
    FALSE           reduce using rule 66 (bloque_exp -> bloque .)
    PUNTO           reduce using rule 66 (bloque_exp -> bloque .)
    OR              reduce using rule 66 (bloque_exp -> bloque .)
    AND             reduce using rule 66 (bloque_exp -> bloque .)
    MAYORIGUAL      reduce using rule 66 (bloque_exp -> bloque .)
    MAYOR           reduce using rule 66 (bloque_exp -> bloque .)
    MENORIGUAL      reduce using rule 66 (bloque_exp -> bloque .)
    MENOR           reduce using rule 66 (bloque_exp -> bloque .)
    IGUALDAD        reduce using rule 66 (bloque_exp -> bloque .)
    DESIGUALDAD     reduce using rule 66 (bloque_exp -> bloque .)
    SUMA            reduce using rule 66 (bloque_exp -> bloque .)
    MULTI           reduce using rule 66 (bloque_exp -> bloque .)
    DIVI            reduce using rule 66 (bloque_exp -> bloque .)
    MODULO          reduce using rule 66 (bloque_exp -> bloque .)
    AS              reduce using rule 66 (bloque_exp -> bloque .)


state 197

    (13) bloque -> llamada . PYC
    (121) expre_valor -> llamada .

    PYC             shift and go to state 206
    PUNTO           reduce using rule 121 (expre_valor -> llamada .)
    OR              reduce using rule 121 (expre_valor -> llamada .)
    AND             reduce using rule 121 (expre_valor -> llamada .)
    MAYORIGUAL      reduce using rule 121 (expre_valor -> llamada .)
    MAYOR           reduce using rule 121 (expre_valor -> llamada .)
    MENORIGUAL      reduce using rule 121 (expre_valor -> llamada .)
    MENOR           reduce using rule 121 (expre_valor -> llamada .)
    IGUALDAD        reduce using rule 121 (expre_valor -> llamada .)
    DESIGUALDAD     reduce using rule 121 (expre_valor -> llamada .)
    RESTA           reduce using rule 121 (expre_valor -> llamada .)
    SUMA            reduce using rule 121 (expre_valor -> llamada .)
    MULTI           reduce using rule 121 (expre_valor -> llamada .)
    DIVI            reduce using rule 121 (expre_valor -> llamada .)
    MODULO          reduce using rule 121 (expre_valor -> llamada .)
    AS              reduce using rule 121 (expre_valor -> llamada .)
    LD              reduce using rule 121 (expre_valor -> llamada .)
    PRINTLN         reduce using rule 121 (expre_valor -> llamada .)
    PRINT           reduce using rule 121 (expre_valor -> llamada .)
    LET             reduce using rule 121 (expre_valor -> llamada .)
    ID              reduce using rule 121 (expre_valor -> llamada .)
    MATCH           reduce using rule 121 (expre_valor -> llamada .)
    IF              reduce using rule 121 (expre_valor -> llamada .)
    WHILE           reduce using rule 121 (expre_valor -> llamada .)
    RETURN          reduce using rule 121 (expre_valor -> llamada .)
    BREAK           reduce using rule 121 (expre_valor -> llamada .)
    CONTINUE        reduce using rule 121 (expre_valor -> llamada .)
    LOOP            reduce using rule 121 (expre_valor -> llamada .)
    NOT             reduce using rule 121 (expre_valor -> llamada .)
    PI              reduce using rule 121 (expre_valor -> llamada .)
    POWF            reduce using rule 121 (expre_valor -> llamada .)
    POW             reduce using rule 121 (expre_valor -> llamada .)
    CI              reduce using rule 121 (expre_valor -> llamada .)
    ENTERO          reduce using rule 121 (expre_valor -> llamada .)
    FLOAT           reduce using rule 121 (expre_valor -> llamada .)
    CADENA          reduce using rule 121 (expre_valor -> llamada .)
    CARACTER        reduce using rule 121 (expre_valor -> llamada .)
    TRUE            reduce using rule 121 (expre_valor -> llamada .)
    FALSE           reduce using rule 121 (expre_valor -> llamada .)


state 198

    (14) bloque -> start_match .
    (118) expre_valor -> start_match .

  ! reduce/reduce conflict for PUNTO resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for OR resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for AND resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for MAYOR resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for MENOR resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for RESTA resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for SUMA resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for MULTI resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for DIVI resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for MODULO resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for AS resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for LD resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for PRINT resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for LET resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for ID resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for MATCH resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for IF resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for WHILE resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for BREAK resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for LOOP resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for NOT resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for PI resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for POWF resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for POW resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for CI resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for ENTERO resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for FLOAT resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for CADENA resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for CARACTER resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for TRUE resolved using rule 14 (bloque -> start_match .)
  ! reduce/reduce conflict for FALSE resolved using rule 14 (bloque -> start_match .)
    LD              reduce using rule 14 (bloque -> start_match .)
    PRINTLN         reduce using rule 14 (bloque -> start_match .)
    PRINT           reduce using rule 14 (bloque -> start_match .)
    LET             reduce using rule 14 (bloque -> start_match .)
    ID              reduce using rule 14 (bloque -> start_match .)
    MATCH           reduce using rule 14 (bloque -> start_match .)
    IF              reduce using rule 14 (bloque -> start_match .)
    WHILE           reduce using rule 14 (bloque -> start_match .)
    RETURN          reduce using rule 14 (bloque -> start_match .)
    BREAK           reduce using rule 14 (bloque -> start_match .)
    CONTINUE        reduce using rule 14 (bloque -> start_match .)
    LOOP            reduce using rule 14 (bloque -> start_match .)
    NOT             reduce using rule 14 (bloque -> start_match .)
    RESTA           reduce using rule 14 (bloque -> start_match .)
    PI              reduce using rule 14 (bloque -> start_match .)
    POWF            reduce using rule 14 (bloque -> start_match .)
    POW             reduce using rule 14 (bloque -> start_match .)
    CI              reduce using rule 14 (bloque -> start_match .)
    ENTERO          reduce using rule 14 (bloque -> start_match .)
    FLOAT           reduce using rule 14 (bloque -> start_match .)
    CADENA          reduce using rule 14 (bloque -> start_match .)
    CARACTER        reduce using rule 14 (bloque -> start_match .)
    TRUE            reduce using rule 14 (bloque -> start_match .)
    FALSE           reduce using rule 14 (bloque -> start_match .)
    PUNTO           reduce using rule 14 (bloque -> start_match .)
    OR              reduce using rule 14 (bloque -> start_match .)
    AND             reduce using rule 14 (bloque -> start_match .)
    MAYORIGUAL      reduce using rule 14 (bloque -> start_match .)
    MAYOR           reduce using rule 14 (bloque -> start_match .)
    MENORIGUAL      reduce using rule 14 (bloque -> start_match .)
    MENOR           reduce using rule 14 (bloque -> start_match .)
    IGUALDAD        reduce using rule 14 (bloque -> start_match .)
    DESIGUALDAD     reduce using rule 14 (bloque -> start_match .)
    SUMA            reduce using rule 14 (bloque -> start_match .)
    MULTI           reduce using rule 14 (bloque -> start_match .)
    DIVI            reduce using rule 14 (bloque -> start_match .)
    MODULO          reduce using rule 14 (bloque -> start_match .)
    AS              reduce using rule 14 (bloque -> start_match .)

  ! PUNTO           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! OR              [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! AND             [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MAYORIGUAL      [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MAYOR           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MENORIGUAL      [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MENOR           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! IGUALDAD        [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! DESIGUALDAD     [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! RESTA           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! SUMA            [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MULTI           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! DIVI            [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MODULO          [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! AS              [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! LD              [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! PRINTLN         [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! PRINT           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! LET             [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! ID              [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! MATCH           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! IF              [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! WHILE           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! RETURN          [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! BREAK           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! CONTINUE        [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! LOOP            [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! NOT             [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! PI              [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! POWF            [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! POW             [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! CI              [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! ENTERO          [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! FLOAT           [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! CADENA          [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! CARACTER        [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! TRUE            [ reduce using rule 118 (expre_valor -> start_match .) ]
  ! FALSE           [ reduce using rule 118 (expre_valor -> start_match .) ]


state 199

    (15) bloque -> start_if .
    (119) expre_valor -> start_if .

  ! reduce/reduce conflict for PUNTO resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for OR resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for AND resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for MAYOR resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for MENOR resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for RESTA resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for SUMA resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for MULTI resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for DIVI resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for MODULO resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for AS resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for LD resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for PRINT resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for LET resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for ID resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for MATCH resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for IF resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for WHILE resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for RETURN resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for BREAK resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for LOOP resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for NOT resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for PI resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for POWF resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for POW resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for CI resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for ENTERO resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for FLOAT resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for CADENA resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for CARACTER resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for TRUE resolved using rule 15 (bloque -> start_if .)
  ! reduce/reduce conflict for FALSE resolved using rule 15 (bloque -> start_if .)
    LD              reduce using rule 15 (bloque -> start_if .)
    PRINTLN         reduce using rule 15 (bloque -> start_if .)
    PRINT           reduce using rule 15 (bloque -> start_if .)
    LET             reduce using rule 15 (bloque -> start_if .)
    ID              reduce using rule 15 (bloque -> start_if .)
    MATCH           reduce using rule 15 (bloque -> start_if .)
    IF              reduce using rule 15 (bloque -> start_if .)
    WHILE           reduce using rule 15 (bloque -> start_if .)
    RETURN          reduce using rule 15 (bloque -> start_if .)
    BREAK           reduce using rule 15 (bloque -> start_if .)
    CONTINUE        reduce using rule 15 (bloque -> start_if .)
    LOOP            reduce using rule 15 (bloque -> start_if .)
    NOT             reduce using rule 15 (bloque -> start_if .)
    RESTA           reduce using rule 15 (bloque -> start_if .)
    PI              reduce using rule 15 (bloque -> start_if .)
    POWF            reduce using rule 15 (bloque -> start_if .)
    POW             reduce using rule 15 (bloque -> start_if .)
    CI              reduce using rule 15 (bloque -> start_if .)
    ENTERO          reduce using rule 15 (bloque -> start_if .)
    FLOAT           reduce using rule 15 (bloque -> start_if .)
    CADENA          reduce using rule 15 (bloque -> start_if .)
    CARACTER        reduce using rule 15 (bloque -> start_if .)
    TRUE            reduce using rule 15 (bloque -> start_if .)
    FALSE           reduce using rule 15 (bloque -> start_if .)
    PUNTO           reduce using rule 15 (bloque -> start_if .)
    OR              reduce using rule 15 (bloque -> start_if .)
    AND             reduce using rule 15 (bloque -> start_if .)
    MAYORIGUAL      reduce using rule 15 (bloque -> start_if .)
    MAYOR           reduce using rule 15 (bloque -> start_if .)
    MENORIGUAL      reduce using rule 15 (bloque -> start_if .)
    MENOR           reduce using rule 15 (bloque -> start_if .)
    IGUALDAD        reduce using rule 15 (bloque -> start_if .)
    DESIGUALDAD     reduce using rule 15 (bloque -> start_if .)
    SUMA            reduce using rule 15 (bloque -> start_if .)
    MULTI           reduce using rule 15 (bloque -> start_if .)
    DIVI            reduce using rule 15 (bloque -> start_if .)
    MODULO          reduce using rule 15 (bloque -> start_if .)
    AS              reduce using rule 15 (bloque -> start_if .)

  ! PUNTO           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! OR              [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! AND             [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MAYORIGUAL      [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MAYOR           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MENORIGUAL      [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MENOR           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! IGUALDAD        [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! DESIGUALDAD     [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! RESTA           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! SUMA            [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MULTI           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! DIVI            [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MODULO          [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! AS              [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! LD              [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! PRINTLN         [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! PRINT           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! LET             [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! ID              [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! MATCH           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! IF              [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! WHILE           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! RETURN          [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! BREAK           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! CONTINUE        [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! LOOP            [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! NOT             [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! PI              [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! POWF            [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! POW             [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! CI              [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! ENTERO          [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! FLOAT           [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! CADENA          [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! CARACTER        [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! TRUE            [ reduce using rule 119 (expre_valor -> start_if .) ]
  ! FALSE           [ reduce using rule 119 (expre_valor -> start_if .) ]


state 200

    (20) bloque -> start_loop .
    (120) expre_valor -> start_loop .

  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for AS resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for LD resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for CI resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> start_loop .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> start_loop .)
    LD              reduce using rule 20 (bloque -> start_loop .)
    PRINTLN         reduce using rule 20 (bloque -> start_loop .)
    PRINT           reduce using rule 20 (bloque -> start_loop .)
    LET             reduce using rule 20 (bloque -> start_loop .)
    ID              reduce using rule 20 (bloque -> start_loop .)
    MATCH           reduce using rule 20 (bloque -> start_loop .)
    IF              reduce using rule 20 (bloque -> start_loop .)
    WHILE           reduce using rule 20 (bloque -> start_loop .)
    RETURN          reduce using rule 20 (bloque -> start_loop .)
    BREAK           reduce using rule 20 (bloque -> start_loop .)
    CONTINUE        reduce using rule 20 (bloque -> start_loop .)
    LOOP            reduce using rule 20 (bloque -> start_loop .)
    NOT             reduce using rule 20 (bloque -> start_loop .)
    RESTA           reduce using rule 20 (bloque -> start_loop .)
    PI              reduce using rule 20 (bloque -> start_loop .)
    POWF            reduce using rule 20 (bloque -> start_loop .)
    POW             reduce using rule 20 (bloque -> start_loop .)
    CI              reduce using rule 20 (bloque -> start_loop .)
    ENTERO          reduce using rule 20 (bloque -> start_loop .)
    FLOAT           reduce using rule 20 (bloque -> start_loop .)
    CADENA          reduce using rule 20 (bloque -> start_loop .)
    CARACTER        reduce using rule 20 (bloque -> start_loop .)
    TRUE            reduce using rule 20 (bloque -> start_loop .)
    FALSE           reduce using rule 20 (bloque -> start_loop .)
    PUNTO           reduce using rule 20 (bloque -> start_loop .)
    OR              reduce using rule 20 (bloque -> start_loop .)
    AND             reduce using rule 20 (bloque -> start_loop .)
    MAYORIGUAL      reduce using rule 20 (bloque -> start_loop .)
    MAYOR           reduce using rule 20 (bloque -> start_loop .)
    MENORIGUAL      reduce using rule 20 (bloque -> start_loop .)
    MENOR           reduce using rule 20 (bloque -> start_loop .)
    IGUALDAD        reduce using rule 20 (bloque -> start_loop .)
    DESIGUALDAD     reduce using rule 20 (bloque -> start_loop .)
    SUMA            reduce using rule 20 (bloque -> start_loop .)
    MULTI           reduce using rule 20 (bloque -> start_loop .)
    DIVI            reduce using rule 20 (bloque -> start_loop .)
    MODULO          reduce using rule 20 (bloque -> start_loop .)
    AS              reduce using rule 20 (bloque -> start_loop .)

  ! PUNTO           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! OR              [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! AND             [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MAYORIGUAL      [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MAYOR           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MENORIGUAL      [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MENOR           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! IGUALDAD        [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! DESIGUALDAD     [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! RESTA           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! SUMA            [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MULTI           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! DIVI            [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MODULO          [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! AS              [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! LD              [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! PRINTLN         [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! PRINT           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! LET             [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! ID              [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! MATCH           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! IF              [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! WHILE           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! RETURN          [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! BREAK           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! CONTINUE        [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! LOOP            [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! NOT             [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! PI              [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! POWF            [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! POW             [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! CI              [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! ENTERO          [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! FLOAT           [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! CADENA          [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! CARACTER        [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! TRUE            [ reduce using rule 120 (expre_valor -> start_loop .) ]
  ! FALSE           [ reduce using rule 120 (expre_valor -> start_loop .) ]


state 201

    (34) asignacion_arreglo -> acceso_arreglo . IGUAL expresiones
    (123) expre_valor -> acceso_arreglo .

    IGUAL           shift and go to state 215
    PUNTO           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    OR              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    AND             reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MAYORIGUAL      reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MAYOR           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MENORIGUAL      reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MENOR           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    IGUALDAD        reduce using rule 123 (expre_valor -> acceso_arreglo .)
    DESIGUALDAD     reduce using rule 123 (expre_valor -> acceso_arreglo .)
    RESTA           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    SUMA            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MULTI           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    DIVI            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MODULO          reduce using rule 123 (expre_valor -> acceso_arreglo .)
    AS              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    LD              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    PRINTLN         reduce using rule 123 (expre_valor -> acceso_arreglo .)
    PRINT           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    LET             reduce using rule 123 (expre_valor -> acceso_arreglo .)
    ID              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    MATCH           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    IF              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    WHILE           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    RETURN          reduce using rule 123 (expre_valor -> acceso_arreglo .)
    BREAK           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    CONTINUE        reduce using rule 123 (expre_valor -> acceso_arreglo .)
    LOOP            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    NOT             reduce using rule 123 (expre_valor -> acceso_arreglo .)
    PI              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    POWF            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    POW             reduce using rule 123 (expre_valor -> acceso_arreglo .)
    CI              reduce using rule 123 (expre_valor -> acceso_arreglo .)
    ENTERO          reduce using rule 123 (expre_valor -> acceso_arreglo .)
    FLOAT           reduce using rule 123 (expre_valor -> acceso_arreglo .)
    CADENA          reduce using rule 123 (expre_valor -> acceso_arreglo .)
    CARACTER        reduce using rule 123 (expre_valor -> acceso_arreglo .)
    TRUE            reduce using rule 123 (expre_valor -> acceso_arreglo .)
    FALSE           reduce using rule 123 (expre_valor -> acceso_arreglo .)


state 202

    (43) start_loop -> LOOP LI lista_bloque LD .

    PUNTO           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    OR              reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    AND             reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    MAYORIGUAL      reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    MAYOR           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    MENORIGUAL      reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    MENOR           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    IGUALDAD        reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    DESIGUALDAD     reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    RESTA           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    SUMA            reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    MULTI           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    DIVI            reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    MODULO          reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    AS              reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    FUNCION         reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    LET             reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    ID              reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    $end            reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    PYC             reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    LD              reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    PRINTLN         reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    PRINT           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    MATCH           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    IF              reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    WHILE           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    RETURN          reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    LOOP            reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    GBAJO           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    NOT             reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    PI              reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    POWF            reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    POW             reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    CI              reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    ENTERO          reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    FLOAT           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    CADENA          reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    CARACTER        reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    TRUE            reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    FALSE           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    IGUAL           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    BARRA           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    COMA            reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    PD              reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    LI              reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    CD              reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    BREAK           reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)
    CONTINUE        reduce using rule 43 (start_loop -> LOOP LI lista_bloque LD .)


state 203

    (8) lista_bloque -> lista_bloque bloque .

    LD              reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    PRINTLN         reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    PRINT           reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    LET             reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    ID              reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    MATCH           reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    IF              reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    WHILE           reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    RETURN          reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    BREAK           reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    CONTINUE        reduce using rule 8 (lista_bloque -> lista_bloque bloque .)
    LOOP            reduce using rule 8 (lista_bloque -> lista_bloque bloque .)


state 204

    (10) bloque -> impresiones PYC .

    LD              reduce using rule 10 (bloque -> impresiones PYC .)
    PRINTLN         reduce using rule 10 (bloque -> impresiones PYC .)
    PRINT           reduce using rule 10 (bloque -> impresiones PYC .)
    LET             reduce using rule 10 (bloque -> impresiones PYC .)
    ID              reduce using rule 10 (bloque -> impresiones PYC .)
    MATCH           reduce using rule 10 (bloque -> impresiones PYC .)
    IF              reduce using rule 10 (bloque -> impresiones PYC .)
    WHILE           reduce using rule 10 (bloque -> impresiones PYC .)
    RETURN          reduce using rule 10 (bloque -> impresiones PYC .)
    BREAK           reduce using rule 10 (bloque -> impresiones PYC .)
    CONTINUE        reduce using rule 10 (bloque -> impresiones PYC .)
    LOOP            reduce using rule 10 (bloque -> impresiones PYC .)
    NOT             reduce using rule 10 (bloque -> impresiones PYC .)
    RESTA           reduce using rule 10 (bloque -> impresiones PYC .)
    PI              reduce using rule 10 (bloque -> impresiones PYC .)
    POWF            reduce using rule 10 (bloque -> impresiones PYC .)
    POW             reduce using rule 10 (bloque -> impresiones PYC .)
    CI              reduce using rule 10 (bloque -> impresiones PYC .)
    ENTERO          reduce using rule 10 (bloque -> impresiones PYC .)
    FLOAT           reduce using rule 10 (bloque -> impresiones PYC .)
    CADENA          reduce using rule 10 (bloque -> impresiones PYC .)
    CARACTER        reduce using rule 10 (bloque -> impresiones PYC .)
    TRUE            reduce using rule 10 (bloque -> impresiones PYC .)
    FALSE           reduce using rule 10 (bloque -> impresiones PYC .)
    PUNTO           reduce using rule 10 (bloque -> impresiones PYC .)
    OR              reduce using rule 10 (bloque -> impresiones PYC .)
    AND             reduce using rule 10 (bloque -> impresiones PYC .)
    MAYORIGUAL      reduce using rule 10 (bloque -> impresiones PYC .)
    MAYOR           reduce using rule 10 (bloque -> impresiones PYC .)
    MENORIGUAL      reduce using rule 10 (bloque -> impresiones PYC .)
    MENOR           reduce using rule 10 (bloque -> impresiones PYC .)
    IGUALDAD        reduce using rule 10 (bloque -> impresiones PYC .)
    DESIGUALDAD     reduce using rule 10 (bloque -> impresiones PYC .)
    SUMA            reduce using rule 10 (bloque -> impresiones PYC .)
    MULTI           reduce using rule 10 (bloque -> impresiones PYC .)
    DIVI            reduce using rule 10 (bloque -> impresiones PYC .)
    MODULO          reduce using rule 10 (bloque -> impresiones PYC .)
    AS              reduce using rule 10 (bloque -> impresiones PYC .)


state 205

    (12) bloque -> asignacion PYC .

    LD              reduce using rule 12 (bloque -> asignacion PYC .)
    PRINTLN         reduce using rule 12 (bloque -> asignacion PYC .)
    PRINT           reduce using rule 12 (bloque -> asignacion PYC .)
    LET             reduce using rule 12 (bloque -> asignacion PYC .)
    ID              reduce using rule 12 (bloque -> asignacion PYC .)
    MATCH           reduce using rule 12 (bloque -> asignacion PYC .)
    IF              reduce using rule 12 (bloque -> asignacion PYC .)
    WHILE           reduce using rule 12 (bloque -> asignacion PYC .)
    RETURN          reduce using rule 12 (bloque -> asignacion PYC .)
    BREAK           reduce using rule 12 (bloque -> asignacion PYC .)
    CONTINUE        reduce using rule 12 (bloque -> asignacion PYC .)
    LOOP            reduce using rule 12 (bloque -> asignacion PYC .)
    NOT             reduce using rule 12 (bloque -> asignacion PYC .)
    RESTA           reduce using rule 12 (bloque -> asignacion PYC .)
    PI              reduce using rule 12 (bloque -> asignacion PYC .)
    POWF            reduce using rule 12 (bloque -> asignacion PYC .)
    POW             reduce using rule 12 (bloque -> asignacion PYC .)
    CI              reduce using rule 12 (bloque -> asignacion PYC .)
    ENTERO          reduce using rule 12 (bloque -> asignacion PYC .)
    FLOAT           reduce using rule 12 (bloque -> asignacion PYC .)
    CADENA          reduce using rule 12 (bloque -> asignacion PYC .)
    CARACTER        reduce using rule 12 (bloque -> asignacion PYC .)
    TRUE            reduce using rule 12 (bloque -> asignacion PYC .)
    FALSE           reduce using rule 12 (bloque -> asignacion PYC .)
    PUNTO           reduce using rule 12 (bloque -> asignacion PYC .)
    OR              reduce using rule 12 (bloque -> asignacion PYC .)
    AND             reduce using rule 12 (bloque -> asignacion PYC .)
    MAYORIGUAL      reduce using rule 12 (bloque -> asignacion PYC .)
    MAYOR           reduce using rule 12 (bloque -> asignacion PYC .)
    MENORIGUAL      reduce using rule 12 (bloque -> asignacion PYC .)
    MENOR           reduce using rule 12 (bloque -> asignacion PYC .)
    IGUALDAD        reduce using rule 12 (bloque -> asignacion PYC .)
    DESIGUALDAD     reduce using rule 12 (bloque -> asignacion PYC .)
    SUMA            reduce using rule 12 (bloque -> asignacion PYC .)
    MULTI           reduce using rule 12 (bloque -> asignacion PYC .)
    DIVI            reduce using rule 12 (bloque -> asignacion PYC .)
    MODULO          reduce using rule 12 (bloque -> asignacion PYC .)
    AS              reduce using rule 12 (bloque -> asignacion PYC .)


state 206

    (13) bloque -> llamada PYC .

    LD              reduce using rule 13 (bloque -> llamada PYC .)
    PRINTLN         reduce using rule 13 (bloque -> llamada PYC .)
    PRINT           reduce using rule 13 (bloque -> llamada PYC .)
    LET             reduce using rule 13 (bloque -> llamada PYC .)
    ID              reduce using rule 13 (bloque -> llamada PYC .)
    MATCH           reduce using rule 13 (bloque -> llamada PYC .)
    IF              reduce using rule 13 (bloque -> llamada PYC .)
    WHILE           reduce using rule 13 (bloque -> llamada PYC .)
    RETURN          reduce using rule 13 (bloque -> llamada PYC .)
    BREAK           reduce using rule 13 (bloque -> llamada PYC .)
    CONTINUE        reduce using rule 13 (bloque -> llamada PYC .)
    LOOP            reduce using rule 13 (bloque -> llamada PYC .)
    NOT             reduce using rule 13 (bloque -> llamada PYC .)
    RESTA           reduce using rule 13 (bloque -> llamada PYC .)
    PI              reduce using rule 13 (bloque -> llamada PYC .)
    POWF            reduce using rule 13 (bloque -> llamada PYC .)
    POW             reduce using rule 13 (bloque -> llamada PYC .)
    CI              reduce using rule 13 (bloque -> llamada PYC .)
    ENTERO          reduce using rule 13 (bloque -> llamada PYC .)
    FLOAT           reduce using rule 13 (bloque -> llamada PYC .)
    CADENA          reduce using rule 13 (bloque -> llamada PYC .)
    CARACTER        reduce using rule 13 (bloque -> llamada PYC .)
    TRUE            reduce using rule 13 (bloque -> llamada PYC .)
    FALSE           reduce using rule 13 (bloque -> llamada PYC .)
    PUNTO           reduce using rule 13 (bloque -> llamada PYC .)
    OR              reduce using rule 13 (bloque -> llamada PYC .)
    AND             reduce using rule 13 (bloque -> llamada PYC .)
    MAYORIGUAL      reduce using rule 13 (bloque -> llamada PYC .)
    MAYOR           reduce using rule 13 (bloque -> llamada PYC .)
    MENORIGUAL      reduce using rule 13 (bloque -> llamada PYC .)
    MENOR           reduce using rule 13 (bloque -> llamada PYC .)
    IGUALDAD        reduce using rule 13 (bloque -> llamada PYC .)
    DESIGUALDAD     reduce using rule 13 (bloque -> llamada PYC .)
    SUMA            reduce using rule 13 (bloque -> llamada PYC .)
    MULTI           reduce using rule 13 (bloque -> llamada PYC .)
    DIVI            reduce using rule 13 (bloque -> llamada PYC .)
    MODULO          reduce using rule 13 (bloque -> llamada PYC .)
    AS              reduce using rule 13 (bloque -> llamada PYC .)


state 207

    (17) bloque -> return_ins PYC .

    LD              reduce using rule 17 (bloque -> return_ins PYC .)
    PRINTLN         reduce using rule 17 (bloque -> return_ins PYC .)
    PRINT           reduce using rule 17 (bloque -> return_ins PYC .)
    LET             reduce using rule 17 (bloque -> return_ins PYC .)
    ID              reduce using rule 17 (bloque -> return_ins PYC .)
    MATCH           reduce using rule 17 (bloque -> return_ins PYC .)
    IF              reduce using rule 17 (bloque -> return_ins PYC .)
    WHILE           reduce using rule 17 (bloque -> return_ins PYC .)
    RETURN          reduce using rule 17 (bloque -> return_ins PYC .)
    BREAK           reduce using rule 17 (bloque -> return_ins PYC .)
    CONTINUE        reduce using rule 17 (bloque -> return_ins PYC .)
    LOOP            reduce using rule 17 (bloque -> return_ins PYC .)
    NOT             reduce using rule 17 (bloque -> return_ins PYC .)
    RESTA           reduce using rule 17 (bloque -> return_ins PYC .)
    PI              reduce using rule 17 (bloque -> return_ins PYC .)
    POWF            reduce using rule 17 (bloque -> return_ins PYC .)
    POW             reduce using rule 17 (bloque -> return_ins PYC .)
    CI              reduce using rule 17 (bloque -> return_ins PYC .)
    ENTERO          reduce using rule 17 (bloque -> return_ins PYC .)
    FLOAT           reduce using rule 17 (bloque -> return_ins PYC .)
    CADENA          reduce using rule 17 (bloque -> return_ins PYC .)
    CARACTER        reduce using rule 17 (bloque -> return_ins PYC .)
    TRUE            reduce using rule 17 (bloque -> return_ins PYC .)
    FALSE           reduce using rule 17 (bloque -> return_ins PYC .)
    PUNTO           reduce using rule 17 (bloque -> return_ins PYC .)
    OR              reduce using rule 17 (bloque -> return_ins PYC .)
    AND             reduce using rule 17 (bloque -> return_ins PYC .)
    MAYORIGUAL      reduce using rule 17 (bloque -> return_ins PYC .)
    MAYOR           reduce using rule 17 (bloque -> return_ins PYC .)
    MENORIGUAL      reduce using rule 17 (bloque -> return_ins PYC .)
    MENOR           reduce using rule 17 (bloque -> return_ins PYC .)
    IGUALDAD        reduce using rule 17 (bloque -> return_ins PYC .)
    DESIGUALDAD     reduce using rule 17 (bloque -> return_ins PYC .)
    SUMA            reduce using rule 17 (bloque -> return_ins PYC .)
    MULTI           reduce using rule 17 (bloque -> return_ins PYC .)
    DIVI            reduce using rule 17 (bloque -> return_ins PYC .)
    MODULO          reduce using rule 17 (bloque -> return_ins PYC .)
    AS              reduce using rule 17 (bloque -> return_ins PYC .)


state 208

    (18) bloque -> break_ins PYC .

    LD              reduce using rule 18 (bloque -> break_ins PYC .)
    PRINTLN         reduce using rule 18 (bloque -> break_ins PYC .)
    PRINT           reduce using rule 18 (bloque -> break_ins PYC .)
    LET             reduce using rule 18 (bloque -> break_ins PYC .)
    ID              reduce using rule 18 (bloque -> break_ins PYC .)
    MATCH           reduce using rule 18 (bloque -> break_ins PYC .)
    IF              reduce using rule 18 (bloque -> break_ins PYC .)
    WHILE           reduce using rule 18 (bloque -> break_ins PYC .)
    RETURN          reduce using rule 18 (bloque -> break_ins PYC .)
    BREAK           reduce using rule 18 (bloque -> break_ins PYC .)
    CONTINUE        reduce using rule 18 (bloque -> break_ins PYC .)
    LOOP            reduce using rule 18 (bloque -> break_ins PYC .)
    NOT             reduce using rule 18 (bloque -> break_ins PYC .)
    RESTA           reduce using rule 18 (bloque -> break_ins PYC .)
    PI              reduce using rule 18 (bloque -> break_ins PYC .)
    POWF            reduce using rule 18 (bloque -> break_ins PYC .)
    POW             reduce using rule 18 (bloque -> break_ins PYC .)
    CI              reduce using rule 18 (bloque -> break_ins PYC .)
    ENTERO          reduce using rule 18 (bloque -> break_ins PYC .)
    FLOAT           reduce using rule 18 (bloque -> break_ins PYC .)
    CADENA          reduce using rule 18 (bloque -> break_ins PYC .)
    CARACTER        reduce using rule 18 (bloque -> break_ins PYC .)
    TRUE            reduce using rule 18 (bloque -> break_ins PYC .)
    FALSE           reduce using rule 18 (bloque -> break_ins PYC .)
    PUNTO           reduce using rule 18 (bloque -> break_ins PYC .)
    OR              reduce using rule 18 (bloque -> break_ins PYC .)
    AND             reduce using rule 18 (bloque -> break_ins PYC .)
    MAYORIGUAL      reduce using rule 18 (bloque -> break_ins PYC .)
    MAYOR           reduce using rule 18 (bloque -> break_ins PYC .)
    MENORIGUAL      reduce using rule 18 (bloque -> break_ins PYC .)
    MENOR           reduce using rule 18 (bloque -> break_ins PYC .)
    IGUALDAD        reduce using rule 18 (bloque -> break_ins PYC .)
    DESIGUALDAD     reduce using rule 18 (bloque -> break_ins PYC .)
    SUMA            reduce using rule 18 (bloque -> break_ins PYC .)
    MULTI           reduce using rule 18 (bloque -> break_ins PYC .)
    DIVI            reduce using rule 18 (bloque -> break_ins PYC .)
    MODULO          reduce using rule 18 (bloque -> break_ins PYC .)
    AS              reduce using rule 18 (bloque -> break_ins PYC .)


state 209

    (19) bloque -> continue_ins PYC .

    LD              reduce using rule 19 (bloque -> continue_ins PYC .)
    PRINTLN         reduce using rule 19 (bloque -> continue_ins PYC .)
    PRINT           reduce using rule 19 (bloque -> continue_ins PYC .)
    LET             reduce using rule 19 (bloque -> continue_ins PYC .)
    ID              reduce using rule 19 (bloque -> continue_ins PYC .)
    MATCH           reduce using rule 19 (bloque -> continue_ins PYC .)
    IF              reduce using rule 19 (bloque -> continue_ins PYC .)
    WHILE           reduce using rule 19 (bloque -> continue_ins PYC .)
    RETURN          reduce using rule 19 (bloque -> continue_ins PYC .)
    BREAK           reduce using rule 19 (bloque -> continue_ins PYC .)
    CONTINUE        reduce using rule 19 (bloque -> continue_ins PYC .)
    LOOP            reduce using rule 19 (bloque -> continue_ins PYC .)
    NOT             reduce using rule 19 (bloque -> continue_ins PYC .)
    RESTA           reduce using rule 19 (bloque -> continue_ins PYC .)
    PI              reduce using rule 19 (bloque -> continue_ins PYC .)
    POWF            reduce using rule 19 (bloque -> continue_ins PYC .)
    POW             reduce using rule 19 (bloque -> continue_ins PYC .)
    CI              reduce using rule 19 (bloque -> continue_ins PYC .)
    ENTERO          reduce using rule 19 (bloque -> continue_ins PYC .)
    FLOAT           reduce using rule 19 (bloque -> continue_ins PYC .)
    CADENA          reduce using rule 19 (bloque -> continue_ins PYC .)
    CARACTER        reduce using rule 19 (bloque -> continue_ins PYC .)
    TRUE            reduce using rule 19 (bloque -> continue_ins PYC .)
    FALSE           reduce using rule 19 (bloque -> continue_ins PYC .)
    PUNTO           reduce using rule 19 (bloque -> continue_ins PYC .)
    OR              reduce using rule 19 (bloque -> continue_ins PYC .)
    AND             reduce using rule 19 (bloque -> continue_ins PYC .)
    MAYORIGUAL      reduce using rule 19 (bloque -> continue_ins PYC .)
    MAYOR           reduce using rule 19 (bloque -> continue_ins PYC .)
    MENORIGUAL      reduce using rule 19 (bloque -> continue_ins PYC .)
    MENOR           reduce using rule 19 (bloque -> continue_ins PYC .)
    IGUALDAD        reduce using rule 19 (bloque -> continue_ins PYC .)
    DESIGUALDAD     reduce using rule 19 (bloque -> continue_ins PYC .)
    SUMA            reduce using rule 19 (bloque -> continue_ins PYC .)
    MULTI           reduce using rule 19 (bloque -> continue_ins PYC .)
    DIVI            reduce using rule 19 (bloque -> continue_ins PYC .)
    MODULO          reduce using rule 19 (bloque -> continue_ins PYC .)
    AS              reduce using rule 19 (bloque -> continue_ins PYC .)


state 210

    (105) impresiones -> PRINTLN PI . CADENA PD
    (107) impresiones -> PRINTLN PI . CADENA COMA impresion_valores PD

    CADENA          shift and go to state 237


state 211

    (106) impresiones -> PRINT PI . CADENA PD
    (108) impresiones -> PRINT PI . CADENA COMA impresion_valores PD

    CADENA          shift and go to state 238


state 212

    (49) start_while -> WHILE expresiones . LI lista_bloque LD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    LI              shift and go to state 239
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 213

    (48) return_ins -> RETURN expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DESIGUALDAD resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIVI resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for AS resolved as shift
    PYC             reduce using rule 48 (return_ins -> RETURN expresiones .)
    LD              reduce using rule 48 (return_ins -> RETURN expresiones .)
    PRINTLN         reduce using rule 48 (return_ins -> RETURN expresiones .)
    PRINT           reduce using rule 48 (return_ins -> RETURN expresiones .)
    ID              reduce using rule 48 (return_ins -> RETURN expresiones .)
    MATCH           reduce using rule 48 (return_ins -> RETURN expresiones .)
    IF              reduce using rule 48 (return_ins -> RETURN expresiones .)
    WHILE           reduce using rule 48 (return_ins -> RETURN expresiones .)
    RETURN          reduce using rule 48 (return_ins -> RETURN expresiones .)
    LOOP            reduce using rule 48 (return_ins -> RETURN expresiones .)
    LET             reduce using rule 48 (return_ins -> RETURN expresiones .)
    GBAJO           reduce using rule 48 (return_ins -> RETURN expresiones .)
    NOT             reduce using rule 48 (return_ins -> RETURN expresiones .)
    PI              reduce using rule 48 (return_ins -> RETURN expresiones .)
    POWF            reduce using rule 48 (return_ins -> RETURN expresiones .)
    POW             reduce using rule 48 (return_ins -> RETURN expresiones .)
    CI              reduce using rule 48 (return_ins -> RETURN expresiones .)
    ENTERO          reduce using rule 48 (return_ins -> RETURN expresiones .)
    FLOAT           reduce using rule 48 (return_ins -> RETURN expresiones .)
    CADENA          reduce using rule 48 (return_ins -> RETURN expresiones .)
    CARACTER        reduce using rule 48 (return_ins -> RETURN expresiones .)
    TRUE            reduce using rule 48 (return_ins -> RETURN expresiones .)
    FALSE           reduce using rule 48 (return_ins -> RETURN expresiones .)
    IGUAL           reduce using rule 48 (return_ins -> RETURN expresiones .)
    BARRA           reduce using rule 48 (return_ins -> RETURN expresiones .)
    COMA            reduce using rule 48 (return_ins -> RETURN expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74

  ! RESTA           [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! PUNTO           [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! OR              [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! AND             [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! MAYORIGUAL      [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! MAYOR           [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! MENORIGUAL      [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! MENOR           [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! IGUALDAD        [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! DESIGUALDAD     [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! SUMA            [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! MULTI           [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! DIVI            [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! MODULO          [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]
  ! AS              [ reduce using rule 48 (return_ins -> RETURN expresiones .) ]


state 214

    (46) break_ins -> BREAK expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PYC             reduce using rule 46 (break_ins -> BREAK expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 215

    (34) asignacion_arreglo -> acceso_arreglo IGUAL . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    LD              reduce using rule 116 (expresiones -> .)
    PRINTLN         reduce using rule 116 (expresiones -> .)
    PRINT           reduce using rule 116 (expresiones -> .)
    LET             reduce using rule 116 (expresiones -> .)
    WHILE           reduce using rule 116 (expresiones -> .)
    RETURN          reduce using rule 116 (expresiones -> .)
    BREAK           reduce using rule 116 (expresiones -> .)
    CONTINUE        reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    acceso_arreglo                 shift and go to state 37
    expresiones                    shift and go to state 240
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 216

    (125) lista_Expresiones -> lista_Expresiones COMA expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    CD              reduce using rule 125 (lista_Expresiones -> lista_Expresiones COMA expresiones .)
    COMA            reduce using rule 125 (lista_Expresiones -> lista_Expresiones COMA expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 217

    (93) declaracion -> LET mutable ID tipado IGUAL expresiones . PYC
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PYC             shift and go to state 241
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 218

    (35) declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones . PYC
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PYC             shift and go to state 242
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 219

    (37) dimensiones_def -> CI dimensiones_def . PYC expresiones CD

    PYC             shift and go to state 243


state 220

    (38) dimensiones_def -> CI tipo_datos . PYC expresiones CD

    PYC             shift and go to state 244


state 221

    (75) funcion -> FUNCION MAIN PI PD LI lista_bloque LD .

    FUNCION         reduce using rule 75 (funcion -> FUNCION MAIN PI PD LI lista_bloque LD .)
    LET             reduce using rule 75 (funcion -> FUNCION MAIN PI PD LI lista_bloque LD .)
    ID              reduce using rule 75 (funcion -> FUNCION MAIN PI PD LI lista_bloque LD .)
    $end            reduce using rule 75 (funcion -> FUNCION MAIN PI PD LI lista_bloque LD .)


state 222

    (83) tipados_tipos -> DP REFERENCE dimensiones_def .

    PD              reduce using rule 83 (tipados_tipos -> DP REFERENCE dimensiones_def .)
    COMA            reduce using rule 83 (tipados_tipos -> DP REFERENCE dimensiones_def .)


state 223

    (76) funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque . LD
    (8) lista_bloque -> lista_bloque . bloque
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (39) acceso_arreglo -> . ID dimensiones

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              shift and go to state 245
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 150
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41

  ! LD              [ reduce using rule 23 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]

    bloque                         shift and go to state 203
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 138
    start_match                    shift and go to state 139
    start_if                       shift and go to state 140
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 145
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    acceso_arreglo                 shift and go to state 155

state 224

    (89) tipo_funcion -> RESTA MAYOR tipo_datos .

    LI              reduce using rule 89 (tipo_funcion -> RESTA MAYOR tipo_datos .)


state 225

    (90) tipo_funcion -> RESTA MAYOR VECTOR . MENOR tipo_datos MAYOR

    MENOR           shift and go to state 246


state 226

    (77) funcion -> FUNCION ID PI parametros PD tipo_funcion LI . lista_bloque LD
    (8) lista_bloque -> . lista_bloque bloque
    (9) lista_bloque -> . bloque
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (39) acceso_arreglo -> . ID dimensiones

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 150
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41

  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]

    lista_bloque                   shift and go to state 247
    bloque                         shift and go to state 134
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 138
    start_match                    shift and go to state 139
    start_if                       shift and go to state 140
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 145
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    acceso_arreglo                 shift and go to state 155

state 227

    (73) lista_expres -> lista_expres COMA expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PD              reduce using rule 73 (lista_expres -> lista_expres COMA expresiones .)
    COMA            reduce using rule 73 (lista_expres -> lista_expres COMA expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 228

    (149) expre_aritmetica -> POWF PI expresiones COMA expresiones . PD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PD              shift and go to state 248
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 229

    (150) expre_aritmetica -> POW PI expresiones COMA expresiones . PD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PD              shift and go to state 249
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 230

    (59) start_match -> MATCH expresiones LI matches LD .

    PUNTO           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    OR              reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    AND             reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    MAYORIGUAL      reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    MAYOR           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    MENORIGUAL      reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    MENOR           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    IGUALDAD        reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    DESIGUALDAD     reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    RESTA           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    SUMA            reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    MULTI           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    DIVI            reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    MODULO          reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    AS              reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    FUNCION         reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    LET             reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    ID              reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    $end            reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    PYC             reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    LD              reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    PRINTLN         reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    PRINT           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    MATCH           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    IF              reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    WHILE           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    RETURN          reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    LOOP            reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    GBAJO           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    NOT             reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    PI              reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    POWF            reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    POW             reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    CI              reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    ENTERO          reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    FLOAT           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    CADENA          reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    CARACTER        reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    TRUE            reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    FALSE           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    IGUAL           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    BARRA           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    COMA            reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    PD              reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    LI              reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    CD              reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    BREAK           reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)
    CONTINUE        reduce using rule 59 (start_match -> MATCH expresiones LI matches LD .)


state 231

    (60) matches -> matches bloque_match .

    LD              reduce using rule 60 (matches -> matches bloque_match .)
    PRINTLN         reduce using rule 60 (matches -> matches bloque_match .)
    PRINT           reduce using rule 60 (matches -> matches bloque_match .)
    ID              reduce using rule 60 (matches -> matches bloque_match .)
    MATCH           reduce using rule 60 (matches -> matches bloque_match .)
    IF              reduce using rule 60 (matches -> matches bloque_match .)
    WHILE           reduce using rule 60 (matches -> matches bloque_match .)
    RETURN          reduce using rule 60 (matches -> matches bloque_match .)
    LOOP            reduce using rule 60 (matches -> matches bloque_match .)
    LET             reduce using rule 60 (matches -> matches bloque_match .)
    GBAJO           reduce using rule 60 (matches -> matches bloque_match .)
    NOT             reduce using rule 60 (matches -> matches bloque_match .)
    RESTA           reduce using rule 60 (matches -> matches bloque_match .)
    PI              reduce using rule 60 (matches -> matches bloque_match .)
    POWF            reduce using rule 60 (matches -> matches bloque_match .)
    POW             reduce using rule 60 (matches -> matches bloque_match .)
    CI              reduce using rule 60 (matches -> matches bloque_match .)
    ENTERO          reduce using rule 60 (matches -> matches bloque_match .)
    FLOAT           reduce using rule 60 (matches -> matches bloque_match .)
    CADENA          reduce using rule 60 (matches -> matches bloque_match .)
    CARACTER        reduce using rule 60 (matches -> matches bloque_match .)
    TRUE            reduce using rule 60 (matches -> matches bloque_match .)
    FALSE           reduce using rule 60 (matches -> matches bloque_match .)
    IGUAL           reduce using rule 60 (matches -> matches bloque_match .)
    BARRA           reduce using rule 60 (matches -> matches bloque_match .)
    PUNTO           reduce using rule 60 (matches -> matches bloque_match .)
    OR              reduce using rule 60 (matches -> matches bloque_match .)
    AND             reduce using rule 60 (matches -> matches bloque_match .)
    MAYORIGUAL      reduce using rule 60 (matches -> matches bloque_match .)
    MAYOR           reduce using rule 60 (matches -> matches bloque_match .)
    MENORIGUAL      reduce using rule 60 (matches -> matches bloque_match .)
    MENOR           reduce using rule 60 (matches -> matches bloque_match .)
    IGUALDAD        reduce using rule 60 (matches -> matches bloque_match .)
    DESIGUALDAD     reduce using rule 60 (matches -> matches bloque_match .)
    SUMA            reduce using rule 60 (matches -> matches bloque_match .)
    MULTI           reduce using rule 60 (matches -> matches bloque_match .)
    DIVI            reduce using rule 60 (matches -> matches bloque_match .)
    MODULO          reduce using rule 60 (matches -> matches bloque_match .)
    AS              reduce using rule 60 (matches -> matches bloque_match .)


state 232

    (62) bloque_match -> varios_match IGUAL . MAYOR simple_bloque_exp COMA
    (63) bloque_match -> varios_match IGUAL . MAYOR LI list_exp_ins LD

    MAYOR           shift and go to state 250


state 233

    (68) varios_match -> varios_match BARRA . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 251
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 234

    (35) declaracion_arreglo -> LET mutable . ID validacion_dimension IGUAL expresiones PYC

    ID              shift and go to state 252


state 235

    (52) start_if -> IF expresiones LI list_exp_ins LD .
    (53) start_if -> IF expresiones LI list_exp_ins LD . ELSE LI list_exp_ins LD
    (54) start_if -> IF expresiones LI list_exp_ins LD . lista_elif
    (55) start_if -> IF expresiones LI list_exp_ins LD . lista_elif ELSE LI list_exp_ins LD
    (56) lista_elif -> . lista_elif else_if
    (57) lista_elif -> . else_if
    (58) else_if -> . ELSE IF expresiones LI list_exp_ins LD

    PUNTO           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    OR              reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    AND             reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    MAYORIGUAL      reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    MAYOR           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    MENORIGUAL      reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    MENOR           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    IGUALDAD        reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    DESIGUALDAD     reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    RESTA           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    SUMA            reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    MULTI           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    DIVI            reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    MODULO          reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    AS              reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    FUNCION         reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    LET             reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    ID              reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    $end            reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    PYC             reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    LD              reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    PRINTLN         reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    PRINT           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    MATCH           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    IF              reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    WHILE           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    RETURN          reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    LOOP            reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    GBAJO           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    NOT             reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    PI              reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    POWF            reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    POW             reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    CI              reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    ENTERO          reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    FLOAT           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    CADENA          reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    CARACTER        reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    TRUE            reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    FALSE           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    IGUAL           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    BARRA           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    COMA            reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    PD              reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    LI              reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    CD              reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    BREAK           reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    CONTINUE        reduce using rule 52 (start_if -> IF expresiones LI list_exp_ins LD .)
    ELSE            shift and go to state 253

    lista_elif                     shift and go to state 254
    else_if                        shift and go to state 255

state 236

    (50) list_exp_ins -> list_exp_ins bloque_exp .

    LD              reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    PRINTLN         reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    PRINT           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    LET             reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    ID              reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    MATCH           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    IF              reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    WHILE           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    RETURN          reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    BREAK           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    CONTINUE        reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    LOOP            reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    NOT             reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    RESTA           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    PI              reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    POWF            reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    POW             reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    CI              reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    ENTERO          reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    FLOAT           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    CADENA          reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    CARACTER        reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    TRUE            reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    FALSE           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    PUNTO           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    OR              reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    AND             reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    MAYORIGUAL      reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    MAYOR           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    MENORIGUAL      reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    MENOR           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    IGUALDAD        reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    DESIGUALDAD     reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    SUMA            reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    MULTI           reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    DIVI            reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    MODULO          reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)
    AS              reduce using rule 50 (list_exp_ins -> list_exp_ins bloque_exp .)


state 237

    (105) impresiones -> PRINTLN PI CADENA . PD
    (107) impresiones -> PRINTLN PI CADENA . COMA impresion_valores PD

    PD              shift and go to state 256
    COMA            shift and go to state 257


state 238

    (106) impresiones -> PRINT PI CADENA . PD
    (108) impresiones -> PRINT PI CADENA . COMA impresion_valores PD

    PD              shift and go to state 258
    COMA            shift and go to state 259


state 239

    (49) start_while -> WHILE expresiones LI . lista_bloque LD
    (8) lista_bloque -> . lista_bloque bloque
    (9) lista_bloque -> . bloque
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (39) acceso_arreglo -> . ID dimensiones

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 150
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41

  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]

    lista_bloque                   shift and go to state 260
    bloque                         shift and go to state 134
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 138
    start_match                    shift and go to state 139
    start_if                       shift and go to state 140
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 145
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    acceso_arreglo                 shift and go to state 155

state 240

    (34) asignacion_arreglo -> acceso_arreglo IGUAL expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DESIGUALDAD resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIVI resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for AS resolved as shift
    LD              reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    PRINTLN         reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    PRINT           reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    LET             reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    ID              reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    MATCH           reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    IF              reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    WHILE           reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    RETURN          reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    BREAK           reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    CONTINUE        reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    LOOP            reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    NOT             reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    PI              reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    POWF            reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    POW             reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    CI              reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    ENTERO          reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    FLOAT           reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    CADENA          reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    CARACTER        reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    TRUE            reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    FALSE           reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74

  ! RESTA           [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! PUNTO           [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! OR              [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! AND             [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! MAYORIGUAL      [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! MAYOR           [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! MENORIGUAL      [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! MENOR           [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! IGUALDAD        [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! DESIGUALDAD     [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! SUMA            [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! MULTI           [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! DIVI            [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! MODULO          [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]
  ! AS              [ reduce using rule 34 (asignacion_arreglo -> acceso_arreglo IGUAL expresiones .) ]


state 241

    (93) declaracion -> LET mutable ID tipado IGUAL expresiones PYC .

    FUNCION         reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    LET             reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    ID              reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    $end            reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    LD              reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    PRINTLN         reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    PRINT           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MATCH           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    IF              reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    WHILE           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    RETURN          reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    BREAK           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    CONTINUE        reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    LOOP            reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    NOT             reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    RESTA           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    PI              reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    POWF            reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    POW             reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    CI              reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    ENTERO          reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    FLOAT           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    CADENA          reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    CARACTER        reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    TRUE            reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    FALSE           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    PUNTO           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    OR              reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    AND             reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MAYORIGUAL      reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MAYOR           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MENORIGUAL      reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MENOR           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    IGUALDAD        reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    DESIGUALDAD     reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    SUMA            reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MULTI           reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    DIVI            reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MODULO          reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    AS              reduce using rule 93 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)


state 242

    (35) declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .

    FUNCION         reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    LET             reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    ID              reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    $end            reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    LD              reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    PRINTLN         reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    PRINT           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    MATCH           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    IF              reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    WHILE           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    RETURN          reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    BREAK           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    CONTINUE        reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    LOOP            reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    GBAJO           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    NOT             reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    RESTA           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    PI              reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    POWF            reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    POW             reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    CI              reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    ENTERO          reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    FLOAT           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    CADENA          reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    CARACTER        reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    TRUE            reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    FALSE           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    IGUAL           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    BARRA           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    PUNTO           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    OR              reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    AND             reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    MAYORIGUAL      reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    MAYOR           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    MENORIGUAL      reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    MENOR           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    IGUALDAD        reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    DESIGUALDAD     reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    SUMA            reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    MULTI           reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    DIVI            reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    MODULO          reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    AS              reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)
    COMA            reduce using rule 35 (declaracion_arreglo -> LET mutable ID validacion_dimension IGUAL expresiones PYC .)


state 243

    (37) dimensiones_def -> CI dimensiones_def PYC . expresiones CD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    CD              reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 261
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 244

    (38) dimensiones_def -> CI tipo_datos PYC . expresiones CD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    CD              reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 262
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 245

    (76) funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD .

    FUNCION         reduce using rule 76 (funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD .)
    LET             reduce using rule 76 (funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD .)
    ID              reduce using rule 76 (funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD .)
    $end            reduce using rule 76 (funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD .)


state 246

    (90) tipo_funcion -> RESTA MAYOR VECTOR MENOR . tipo_datos MAYOR
    (99) tipo_datos -> . TIPOINT
    (100) tipo_datos -> . TIPOFLOAT
    (101) tipo_datos -> . TIPOCHAR
    (102) tipo_datos -> . TIPOSTRING
    (103) tipo_datos -> . DIRSTRING
    (104) tipo_datos -> . TIPOBOOL

    TIPOINT         shift and go to state 122
    TIPOFLOAT       shift and go to state 123
    TIPOCHAR        shift and go to state 124
    TIPOSTRING      shift and go to state 125
    DIRSTRING       shift and go to state 126
    TIPOBOOL        shift and go to state 127

    tipo_datos                     shift and go to state 263

state 247

    (77) funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque . LD
    (8) lista_bloque -> lista_bloque . bloque
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (39) acceso_arreglo -> . ID dimensiones

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              shift and go to state 264
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 150
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41

  ! LD              [ reduce using rule 23 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]

    bloque                         shift and go to state 203
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 138
    start_match                    shift and go to state 139
    start_if                       shift and go to state 140
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 145
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    acceso_arreglo                 shift and go to state 155

state 248

    (149) expre_aritmetica -> POWF PI expresiones COMA expresiones PD .

    PUNTO           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    OR              reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    AND             reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MAYORIGUAL      reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MAYOR           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MENORIGUAL      reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MENOR           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    IGUALDAD        reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    DESIGUALDAD     reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    RESTA           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    SUMA            reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MULTI           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    DIVI            reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MODULO          reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    AS              reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    FUNCION         reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    LET             reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    ID              reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    $end            reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    PYC             reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    LD              reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    PRINTLN         reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    PRINT           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MATCH           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    IF              reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    WHILE           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    RETURN          reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    LOOP            reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    GBAJO           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    NOT             reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    PI              reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    POWF            reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    POW             reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    CI              reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    ENTERO          reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    FLOAT           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    CADENA          reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    CARACTER        reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    TRUE            reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    FALSE           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    IGUAL           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    BARRA           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    COMA            reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    PD              reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    LI              reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    CD              reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    BREAK           reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    CONTINUE        reduce using rule 149 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)


state 249

    (150) expre_aritmetica -> POW PI expresiones COMA expresiones PD .

    PUNTO           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    OR              reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    AND             reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MAYORIGUAL      reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MAYOR           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MENORIGUAL      reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MENOR           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    IGUALDAD        reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    DESIGUALDAD     reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    RESTA           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    SUMA            reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MULTI           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    DIVI            reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MODULO          reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    AS              reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    FUNCION         reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    LET             reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    ID              reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    $end            reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    PYC             reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    LD              reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    PRINTLN         reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    PRINT           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MATCH           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    IF              reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    WHILE           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    RETURN          reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    LOOP            reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    GBAJO           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    NOT             reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    PI              reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    POWF            reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    POW             reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    CI              reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    ENTERO          reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    FLOAT           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    CADENA          reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    CARACTER        reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    TRUE            reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    FALSE           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    IGUAL           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    BARRA           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    COMA            reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    PD              reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    LI              reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    CD              reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    BREAK           reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    CONTINUE        reduce using rule 150 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)


state 250

    (62) bloque_match -> varios_match IGUAL MAYOR . simple_bloque_exp COMA
    (63) bloque_match -> varios_match IGUAL MAYOR . LI list_exp_ins LD
    (64) simple_bloque_exp -> . expresiones
    (65) simple_bloque_exp -> . bloque_match
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (24) bloque_match -> . impresiones
    (25) bloque_match -> . asignacion
    (26) bloque_match -> . llamada
    (27) bloque_match -> . start_match
    (28) bloque_match -> . start_if
    (29) bloque_match -> . start_while
    (30) bloque_match -> . return_ins
    (31) bloque_match -> . start_loop
    (32) bloque_match -> . declaracion_arreglo
    (33) bloque_match -> .
    (62) bloque_match -> . varios_match IGUAL MAYOR simple_bloque_exp COMA
    (63) bloque_match -> . varios_match IGUAL MAYOR LI list_exp_ins LD
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (68) varios_match -> . varios_match BARRA expresiones
    (69) varios_match -> . expresiones
    (70) varios_match -> . GBAJO
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! reduce/reduce conflict for COMA resolved using rule 33 (bloque_match -> .)
  ! shift/reduce conflict for RESTA resolved as shift
    LI              shift and go to state 266
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    IGUAL           reduce using rule 116 (expresiones -> .)
    BARRA           reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 33 (bloque_match -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    LOOP            shift and go to state 41
    LET             shift and go to state 191
    GBAJO           shift and go to state 192
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! COMA            [ reduce using rule 116 (expresiones -> .) ]

    varios_match                   shift and go to state 189
    simple_bloque_exp              shift and go to state 265
    expresiones                    shift and go to state 267
    bloque_match                   shift and go to state 268
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    impresiones                    shift and go to state 180
    asignacion                     shift and go to state 181
    llamada                        shift and go to state 182
    start_match                    shift and go to state 183
    start_if                       shift and go to state 184
    start_while                    shift and go to state 185
    return_ins                     shift and go to state 186
    start_loop                     shift and go to state 187
    declaracion_arreglo            shift and go to state 188
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 251

    (68) varios_match -> varios_match BARRA expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    IGUAL           reduce using rule 68 (varios_match -> varios_match BARRA expresiones .)
    BARRA           reduce using rule 68 (varios_match -> varios_match BARRA expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 252

    (35) declaracion_arreglo -> LET mutable ID . validacion_dimension IGUAL expresiones PYC
    (36) validacion_dimension -> . DP dimensiones_def

    DP              shift and go to state 269

    validacion_dimension           shift and go to state 86

state 253

    (53) start_if -> IF expresiones LI list_exp_ins LD ELSE . LI list_exp_ins LD
    (58) else_if -> ELSE . IF expresiones LI list_exp_ins LD

    LI              shift and go to state 271
    IF              shift and go to state 270


state 254

    (54) start_if -> IF expresiones LI list_exp_ins LD lista_elif .
    (55) start_if -> IF expresiones LI list_exp_ins LD lista_elif . ELSE LI list_exp_ins LD
    (56) lista_elif -> lista_elif . else_if
    (58) else_if -> . ELSE IF expresiones LI list_exp_ins LD

    PUNTO           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    OR              reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    AND             reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MAYORIGUAL      reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MAYOR           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MENORIGUAL      reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MENOR           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    IGUALDAD        reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    DESIGUALDAD     reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    RESTA           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    SUMA            reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MULTI           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    DIVI            reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MODULO          reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    AS              reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    FUNCION         reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    LET             reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    ID              reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    $end            reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    PYC             reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    LD              reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    PRINTLN         reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    PRINT           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MATCH           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    IF              reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    WHILE           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    RETURN          reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    LOOP            reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    GBAJO           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    NOT             reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    PI              reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    POWF            reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    POW             reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    CI              reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    ENTERO          reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    FLOAT           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    CADENA          reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    CARACTER        reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    TRUE            reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    FALSE           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    IGUAL           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    BARRA           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    COMA            reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    PD              reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    LI              reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    CD              reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    BREAK           reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    CONTINUE        reduce using rule 54 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    ELSE            shift and go to state 272

    else_if                        shift and go to state 273

state 255

    (57) lista_elif -> else_if .

    ELSE            reduce using rule 57 (lista_elif -> else_if .)
    PUNTO           reduce using rule 57 (lista_elif -> else_if .)
    OR              reduce using rule 57 (lista_elif -> else_if .)
    AND             reduce using rule 57 (lista_elif -> else_if .)
    MAYORIGUAL      reduce using rule 57 (lista_elif -> else_if .)
    MAYOR           reduce using rule 57 (lista_elif -> else_if .)
    MENORIGUAL      reduce using rule 57 (lista_elif -> else_if .)
    MENOR           reduce using rule 57 (lista_elif -> else_if .)
    IGUALDAD        reduce using rule 57 (lista_elif -> else_if .)
    DESIGUALDAD     reduce using rule 57 (lista_elif -> else_if .)
    RESTA           reduce using rule 57 (lista_elif -> else_if .)
    SUMA            reduce using rule 57 (lista_elif -> else_if .)
    MULTI           reduce using rule 57 (lista_elif -> else_if .)
    DIVI            reduce using rule 57 (lista_elif -> else_if .)
    MODULO          reduce using rule 57 (lista_elif -> else_if .)
    AS              reduce using rule 57 (lista_elif -> else_if .)
    FUNCION         reduce using rule 57 (lista_elif -> else_if .)
    LET             reduce using rule 57 (lista_elif -> else_if .)
    ID              reduce using rule 57 (lista_elif -> else_if .)
    $end            reduce using rule 57 (lista_elif -> else_if .)
    PYC             reduce using rule 57 (lista_elif -> else_if .)
    LD              reduce using rule 57 (lista_elif -> else_if .)
    PRINTLN         reduce using rule 57 (lista_elif -> else_if .)
    PRINT           reduce using rule 57 (lista_elif -> else_if .)
    MATCH           reduce using rule 57 (lista_elif -> else_if .)
    IF              reduce using rule 57 (lista_elif -> else_if .)
    WHILE           reduce using rule 57 (lista_elif -> else_if .)
    RETURN          reduce using rule 57 (lista_elif -> else_if .)
    LOOP            reduce using rule 57 (lista_elif -> else_if .)
    GBAJO           reduce using rule 57 (lista_elif -> else_if .)
    NOT             reduce using rule 57 (lista_elif -> else_if .)
    PI              reduce using rule 57 (lista_elif -> else_if .)
    POWF            reduce using rule 57 (lista_elif -> else_if .)
    POW             reduce using rule 57 (lista_elif -> else_if .)
    CI              reduce using rule 57 (lista_elif -> else_if .)
    ENTERO          reduce using rule 57 (lista_elif -> else_if .)
    FLOAT           reduce using rule 57 (lista_elif -> else_if .)
    CADENA          reduce using rule 57 (lista_elif -> else_if .)
    CARACTER        reduce using rule 57 (lista_elif -> else_if .)
    TRUE            reduce using rule 57 (lista_elif -> else_if .)
    FALSE           reduce using rule 57 (lista_elif -> else_if .)
    IGUAL           reduce using rule 57 (lista_elif -> else_if .)
    BARRA           reduce using rule 57 (lista_elif -> else_if .)
    COMA            reduce using rule 57 (lista_elif -> else_if .)
    PD              reduce using rule 57 (lista_elif -> else_if .)
    LI              reduce using rule 57 (lista_elif -> else_if .)
    CD              reduce using rule 57 (lista_elif -> else_if .)
    BREAK           reduce using rule 57 (lista_elif -> else_if .)
    CONTINUE        reduce using rule 57 (lista_elif -> else_if .)


state 256

    (105) impresiones -> PRINTLN PI CADENA PD .

    PYC             reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    LD              reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    PRINTLN         reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    PRINT           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    ID              reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    MATCH           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    IF              reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    WHILE           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    RETURN          reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    LOOP            reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    LET             reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    GBAJO           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    NOT             reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    RESTA           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    PI              reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    POWF            reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    POW             reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    CI              reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    ENTERO          reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    FLOAT           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    CADENA          reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    CARACTER        reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    TRUE            reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    FALSE           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    IGUAL           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    BARRA           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    PUNTO           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    OR              reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    AND             reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    MAYORIGUAL      reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    MAYOR           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    MENORIGUAL      reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    MENOR           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    IGUALDAD        reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    DESIGUALDAD     reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    SUMA            reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    MULTI           reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    DIVI            reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    MODULO          reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    AS              reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)
    COMA            reduce using rule 105 (impresiones -> PRINTLN PI CADENA PD .)


state 257

    (107) impresiones -> PRINTLN PI CADENA COMA . impresion_valores PD
    (109) impresion_valores -> . impresion_valores COMA expresiones
    (110) impresion_valores -> . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    impresion_valores              shift and go to state 274
    expresiones                    shift and go to state 275
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 258

    (106) impresiones -> PRINT PI CADENA PD .

    PYC             reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    LD              reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    PRINTLN         reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    PRINT           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    ID              reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    MATCH           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    IF              reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    WHILE           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    RETURN          reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    LOOP            reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    LET             reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    GBAJO           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    NOT             reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    RESTA           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    PI              reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    POWF            reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    POW             reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    CI              reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    ENTERO          reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    FLOAT           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    CADENA          reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    CARACTER        reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    TRUE            reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    FALSE           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    IGUAL           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    BARRA           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    PUNTO           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    OR              reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    AND             reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    MAYORIGUAL      reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    MAYOR           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    MENORIGUAL      reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    MENOR           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    IGUALDAD        reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    DESIGUALDAD     reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    SUMA            reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    MULTI           reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    DIVI            reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    MODULO          reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    AS              reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)
    COMA            reduce using rule 106 (impresiones -> PRINT PI CADENA PD .)


state 259

    (108) impresiones -> PRINT PI CADENA COMA . impresion_valores PD
    (109) impresion_valores -> . impresion_valores COMA expresiones
    (110) impresion_valores -> . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    impresion_valores              shift and go to state 276
    expresiones                    shift and go to state 275
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 260

    (49) start_while -> WHILE expresiones LI lista_bloque . LD
    (8) lista_bloque -> lista_bloque . bloque
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (39) acceso_arreglo -> . ID dimensiones

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              shift and go to state 277
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 150
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41

  ! LD              [ reduce using rule 23 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]

    bloque                         shift and go to state 203
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 138
    start_match                    shift and go to state 139
    start_if                       shift and go to state 140
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 145
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    acceso_arreglo                 shift and go to state 155

state 261

    (37) dimensiones_def -> CI dimensiones_def PYC expresiones . CD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    CD              shift and go to state 278
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 262

    (38) dimensiones_def -> CI tipo_datos PYC expresiones . CD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    CD              shift and go to state 279
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 263

    (90) tipo_funcion -> RESTA MAYOR VECTOR MENOR tipo_datos . MAYOR

    MAYOR           shift and go to state 280


state 264

    (77) funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD .

    FUNCION         reduce using rule 77 (funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD .)
    LET             reduce using rule 77 (funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD .)
    ID              reduce using rule 77 (funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD .)
    $end            reduce using rule 77 (funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD .)


state 265

    (62) bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp . COMA

    COMA            shift and go to state 281


state 266

    (63) bloque_match -> varios_match IGUAL MAYOR LI . list_exp_ins LD
    (50) list_exp_ins -> . list_exp_ins bloque_exp
    (51) list_exp_ins -> . bloque_exp
    (66) bloque_exp -> . bloque
    (67) bloque_exp -> . expresiones
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (39) acceso_arreglo -> . ID dimensiones
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AS resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 23 (bloque -> .)
    PUNTO           reduce using rule 23 (bloque -> .)
    OR              reduce using rule 23 (bloque -> .)
    AND             reduce using rule 23 (bloque -> .)
    MAYORIGUAL      reduce using rule 23 (bloque -> .)
    MAYOR           reduce using rule 23 (bloque -> .)
    MENORIGUAL      reduce using rule 23 (bloque -> .)
    MENOR           reduce using rule 23 (bloque -> .)
    IGUALDAD        reduce using rule 23 (bloque -> .)
    DESIGUALDAD     reduce using rule 23 (bloque -> .)
    SUMA            reduce using rule 23 (bloque -> .)
    MULTI           reduce using rule 23 (bloque -> .)
    DIVI            reduce using rule 23 (bloque -> .)
    MODULO          reduce using rule 23 (bloque -> .)
    AS              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]
  ! NOT             [ reduce using rule 23 (bloque -> .) ]
  ! RESTA           [ reduce using rule 23 (bloque -> .) ]
  ! PI              [ reduce using rule 23 (bloque -> .) ]
  ! POWF            [ reduce using rule 23 (bloque -> .) ]
  ! POW             [ reduce using rule 23 (bloque -> .) ]
  ! CI              [ reduce using rule 23 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 23 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 23 (bloque -> .) ]
  ! CADENA          [ reduce using rule 23 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 23 (bloque -> .) ]
  ! TRUE            [ reduce using rule 23 (bloque -> .) ]
  ! FALSE           [ reduce using rule 23 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 116 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    list_exp_ins                   shift and go to state 282
    bloque_exp                     shift and go to state 195
    bloque                         shift and go to state 196
    expresiones                    shift and go to state 193
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 197
    start_match                    shift and go to state 198
    start_if                       shift and go to state 199
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 200
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    acceso_arreglo                 shift and go to state 201
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 267

    (64) simple_bloque_exp -> expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (69) varios_match -> expresiones .
    (152) datos_cast -> expresiones . AS tipo_datos

    COMA            reduce using rule 64 (simple_bloque_exp -> expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    IGUAL           reduce using rule 69 (varios_match -> expresiones .)
    BARRA           reduce using rule 69 (varios_match -> expresiones .)
    AS              shift and go to state 74


state 268

    (65) simple_bloque_exp -> bloque_match .

    COMA            reduce using rule 65 (simple_bloque_exp -> bloque_match .)


state 269

    (36) validacion_dimension -> DP . dimensiones_def
    (37) dimensiones_def -> . CI dimensiones_def PYC expresiones CD
    (38) dimensiones_def -> . CI tipo_datos PYC expresiones CD

    CI              shift and go to state 163

    dimensiones_def                shift and go to state 162

state 270

    (58) else_if -> ELSE IF . expresiones LI list_exp_ins LD
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    LI              reduce using rule 116 (expresiones -> .)
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 283
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 271

    (53) start_if -> IF expresiones LI list_exp_ins LD ELSE LI . list_exp_ins LD
    (50) list_exp_ins -> . list_exp_ins bloque_exp
    (51) list_exp_ins -> . bloque_exp
    (66) bloque_exp -> . bloque
    (67) bloque_exp -> . expresiones
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (39) acceso_arreglo -> . ID dimensiones
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AS resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 23 (bloque -> .)
    PUNTO           reduce using rule 23 (bloque -> .)
    OR              reduce using rule 23 (bloque -> .)
    AND             reduce using rule 23 (bloque -> .)
    MAYORIGUAL      reduce using rule 23 (bloque -> .)
    MAYOR           reduce using rule 23 (bloque -> .)
    MENORIGUAL      reduce using rule 23 (bloque -> .)
    MENOR           reduce using rule 23 (bloque -> .)
    IGUALDAD        reduce using rule 23 (bloque -> .)
    DESIGUALDAD     reduce using rule 23 (bloque -> .)
    SUMA            reduce using rule 23 (bloque -> .)
    MULTI           reduce using rule 23 (bloque -> .)
    DIVI            reduce using rule 23 (bloque -> .)
    MODULO          reduce using rule 23 (bloque -> .)
    AS              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]
  ! NOT             [ reduce using rule 23 (bloque -> .) ]
  ! RESTA           [ reduce using rule 23 (bloque -> .) ]
  ! PI              [ reduce using rule 23 (bloque -> .) ]
  ! POWF            [ reduce using rule 23 (bloque -> .) ]
  ! POW             [ reduce using rule 23 (bloque -> .) ]
  ! CI              [ reduce using rule 23 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 23 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 23 (bloque -> .) ]
  ! CADENA          [ reduce using rule 23 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 23 (bloque -> .) ]
  ! TRUE            [ reduce using rule 23 (bloque -> .) ]
  ! FALSE           [ reduce using rule 23 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 116 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 193
    list_exp_ins                   shift and go to state 284
    bloque_exp                     shift and go to state 195
    bloque                         shift and go to state 196
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 197
    start_match                    shift and go to state 198
    start_if                       shift and go to state 199
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 200
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    acceso_arreglo                 shift and go to state 201
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 272

    (55) start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE . LI list_exp_ins LD
    (58) else_if -> ELSE . IF expresiones LI list_exp_ins LD

    LI              shift and go to state 285
    IF              shift and go to state 270


state 273

    (56) lista_elif -> lista_elif else_if .

    ELSE            reduce using rule 56 (lista_elif -> lista_elif else_if .)
    PUNTO           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    OR              reduce using rule 56 (lista_elif -> lista_elif else_if .)
    AND             reduce using rule 56 (lista_elif -> lista_elif else_if .)
    MAYORIGUAL      reduce using rule 56 (lista_elif -> lista_elif else_if .)
    MAYOR           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    MENORIGUAL      reduce using rule 56 (lista_elif -> lista_elif else_if .)
    MENOR           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    IGUALDAD        reduce using rule 56 (lista_elif -> lista_elif else_if .)
    DESIGUALDAD     reduce using rule 56 (lista_elif -> lista_elif else_if .)
    RESTA           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    SUMA            reduce using rule 56 (lista_elif -> lista_elif else_if .)
    MULTI           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    DIVI            reduce using rule 56 (lista_elif -> lista_elif else_if .)
    MODULO          reduce using rule 56 (lista_elif -> lista_elif else_if .)
    AS              reduce using rule 56 (lista_elif -> lista_elif else_if .)
    FUNCION         reduce using rule 56 (lista_elif -> lista_elif else_if .)
    LET             reduce using rule 56 (lista_elif -> lista_elif else_if .)
    ID              reduce using rule 56 (lista_elif -> lista_elif else_if .)
    $end            reduce using rule 56 (lista_elif -> lista_elif else_if .)
    PYC             reduce using rule 56 (lista_elif -> lista_elif else_if .)
    LD              reduce using rule 56 (lista_elif -> lista_elif else_if .)
    PRINTLN         reduce using rule 56 (lista_elif -> lista_elif else_if .)
    PRINT           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    MATCH           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    IF              reduce using rule 56 (lista_elif -> lista_elif else_if .)
    WHILE           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    RETURN          reduce using rule 56 (lista_elif -> lista_elif else_if .)
    LOOP            reduce using rule 56 (lista_elif -> lista_elif else_if .)
    GBAJO           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    NOT             reduce using rule 56 (lista_elif -> lista_elif else_if .)
    PI              reduce using rule 56 (lista_elif -> lista_elif else_if .)
    POWF            reduce using rule 56 (lista_elif -> lista_elif else_if .)
    POW             reduce using rule 56 (lista_elif -> lista_elif else_if .)
    CI              reduce using rule 56 (lista_elif -> lista_elif else_if .)
    ENTERO          reduce using rule 56 (lista_elif -> lista_elif else_if .)
    FLOAT           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    CADENA          reduce using rule 56 (lista_elif -> lista_elif else_if .)
    CARACTER        reduce using rule 56 (lista_elif -> lista_elif else_if .)
    TRUE            reduce using rule 56 (lista_elif -> lista_elif else_if .)
    FALSE           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    IGUAL           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    BARRA           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    COMA            reduce using rule 56 (lista_elif -> lista_elif else_if .)
    PD              reduce using rule 56 (lista_elif -> lista_elif else_if .)
    LI              reduce using rule 56 (lista_elif -> lista_elif else_if .)
    CD              reduce using rule 56 (lista_elif -> lista_elif else_if .)
    BREAK           reduce using rule 56 (lista_elif -> lista_elif else_if .)
    CONTINUE        reduce using rule 56 (lista_elif -> lista_elif else_if .)


state 274

    (107) impresiones -> PRINTLN PI CADENA COMA impresion_valores . PD
    (109) impresion_valores -> impresion_valores . COMA expresiones

    PD              shift and go to state 287
    COMA            shift and go to state 286


state 275

    (110) impresion_valores -> expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PD              reduce using rule 110 (impresion_valores -> expresiones .)
    COMA            reduce using rule 110 (impresion_valores -> expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 276

    (108) impresiones -> PRINT PI CADENA COMA impresion_valores . PD
    (109) impresion_valores -> impresion_valores . COMA expresiones

    PD              shift and go to state 288
    COMA            shift and go to state 286


state 277

    (49) start_while -> WHILE expresiones LI lista_bloque LD .

    LD              reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    PRINTLN         reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    PRINT           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    LET             reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    ID              reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MATCH           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    IF              reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    WHILE           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    RETURN          reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    BREAK           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    CONTINUE        reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    LOOP            reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    GBAJO           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    NOT             reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    RESTA           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    PI              reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    POWF            reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    POW             reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    CI              reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    ENTERO          reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    FLOAT           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    CADENA          reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    CARACTER        reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    TRUE            reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    FALSE           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    IGUAL           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    BARRA           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    PUNTO           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    OR              reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    AND             reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MAYORIGUAL      reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MAYOR           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MENORIGUAL      reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MENOR           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    IGUALDAD        reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    DESIGUALDAD     reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    SUMA            reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MULTI           reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    DIVI            reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MODULO          reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    AS              reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)
    COMA            reduce using rule 49 (start_while -> WHILE expresiones LI lista_bloque LD .)


state 278

    (37) dimensiones_def -> CI dimensiones_def PYC expresiones CD .

    IGUAL           reduce using rule 37 (dimensiones_def -> CI dimensiones_def PYC expresiones CD .)
    PYC             reduce using rule 37 (dimensiones_def -> CI dimensiones_def PYC expresiones CD .)
    PD              reduce using rule 37 (dimensiones_def -> CI dimensiones_def PYC expresiones CD .)
    COMA            reduce using rule 37 (dimensiones_def -> CI dimensiones_def PYC expresiones CD .)


state 279

    (38) dimensiones_def -> CI tipo_datos PYC expresiones CD .

    IGUAL           reduce using rule 38 (dimensiones_def -> CI tipo_datos PYC expresiones CD .)
    PYC             reduce using rule 38 (dimensiones_def -> CI tipo_datos PYC expresiones CD .)
    PD              reduce using rule 38 (dimensiones_def -> CI tipo_datos PYC expresiones CD .)
    COMA            reduce using rule 38 (dimensiones_def -> CI tipo_datos PYC expresiones CD .)


state 280

    (90) tipo_funcion -> RESTA MAYOR VECTOR MENOR tipo_datos MAYOR .

    LI              reduce using rule 90 (tipo_funcion -> RESTA MAYOR VECTOR MENOR tipo_datos MAYOR .)


state 281

    (62) bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .

    LD              reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    PRINTLN         reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    PRINT           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    ID              reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MATCH           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    IF              reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    WHILE           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    RETURN          reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    LOOP            reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    LET             reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    GBAJO           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    NOT             reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    RESTA           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    PI              reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    POWF            reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    POW             reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    CI              reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    ENTERO          reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    FLOAT           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    CADENA          reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    CARACTER        reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    TRUE            reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    FALSE           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    IGUAL           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    BARRA           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    PUNTO           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    OR              reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    AND             reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MAYORIGUAL      reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MAYOR           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MENORIGUAL      reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MENOR           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    IGUALDAD        reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    DESIGUALDAD     reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    SUMA            reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MULTI           reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    DIVI            reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MODULO          reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    AS              reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    COMA            reduce using rule 62 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)


state 282

    (63) bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins . LD
    (50) list_exp_ins -> list_exp_ins . bloque_exp
    (66) bloque_exp -> . bloque
    (67) bloque_exp -> . expresiones
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (39) acceso_arreglo -> . ID dimensiones
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AS resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PRINTLN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 289
    PUNTO           reduce using rule 23 (bloque -> .)
    OR              reduce using rule 23 (bloque -> .)
    AND             reduce using rule 23 (bloque -> .)
    MAYORIGUAL      reduce using rule 23 (bloque -> .)
    MAYOR           reduce using rule 23 (bloque -> .)
    MENORIGUAL      reduce using rule 23 (bloque -> .)
    MENOR           reduce using rule 23 (bloque -> .)
    IGUALDAD        reduce using rule 23 (bloque -> .)
    DESIGUALDAD     reduce using rule 23 (bloque -> .)
    SUMA            reduce using rule 23 (bloque -> .)
    MULTI           reduce using rule 23 (bloque -> .)
    DIVI            reduce using rule 23 (bloque -> .)
    MODULO          reduce using rule 23 (bloque -> .)
    AS              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! LD              [ reduce using rule 23 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]
  ! NOT             [ reduce using rule 23 (bloque -> .) ]
  ! RESTA           [ reduce using rule 23 (bloque -> .) ]
  ! PI              [ reduce using rule 23 (bloque -> .) ]
  ! POWF            [ reduce using rule 23 (bloque -> .) ]
  ! POW             [ reduce using rule 23 (bloque -> .) ]
  ! CI              [ reduce using rule 23 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 23 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 23 (bloque -> .) ]
  ! CADENA          [ reduce using rule 23 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 23 (bloque -> .) ]
  ! TRUE            [ reduce using rule 23 (bloque -> .) ]
  ! FALSE           [ reduce using rule 23 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 116 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    bloque_exp                     shift and go to state 236
    bloque                         shift and go to state 196
    expresiones                    shift and go to state 193
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 197
    start_match                    shift and go to state 198
    start_if                       shift and go to state 199
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 200
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    acceso_arreglo                 shift and go to state 201
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 283

    (58) else_if -> ELSE IF expresiones . LI list_exp_ins LD
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    LI              shift and go to state 290
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 284

    (53) start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins . LD
    (50) list_exp_ins -> list_exp_ins . bloque_exp
    (66) bloque_exp -> . bloque
    (67) bloque_exp -> . expresiones
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (39) acceso_arreglo -> . ID dimensiones
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AS resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PRINTLN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 291
    PUNTO           reduce using rule 23 (bloque -> .)
    OR              reduce using rule 23 (bloque -> .)
    AND             reduce using rule 23 (bloque -> .)
    MAYORIGUAL      reduce using rule 23 (bloque -> .)
    MAYOR           reduce using rule 23 (bloque -> .)
    MENORIGUAL      reduce using rule 23 (bloque -> .)
    MENOR           reduce using rule 23 (bloque -> .)
    IGUALDAD        reduce using rule 23 (bloque -> .)
    DESIGUALDAD     reduce using rule 23 (bloque -> .)
    SUMA            reduce using rule 23 (bloque -> .)
    MULTI           reduce using rule 23 (bloque -> .)
    DIVI            reduce using rule 23 (bloque -> .)
    MODULO          reduce using rule 23 (bloque -> .)
    AS              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! LD              [ reduce using rule 23 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]
  ! NOT             [ reduce using rule 23 (bloque -> .) ]
  ! RESTA           [ reduce using rule 23 (bloque -> .) ]
  ! PI              [ reduce using rule 23 (bloque -> .) ]
  ! POWF            [ reduce using rule 23 (bloque -> .) ]
  ! POW             [ reduce using rule 23 (bloque -> .) ]
  ! CI              [ reduce using rule 23 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 23 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 23 (bloque -> .) ]
  ! CADENA          [ reduce using rule 23 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 23 (bloque -> .) ]
  ! TRUE            [ reduce using rule 23 (bloque -> .) ]
  ! FALSE           [ reduce using rule 23 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 116 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 193
    bloque_exp                     shift and go to state 236
    bloque                         shift and go to state 196
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 197
    start_match                    shift and go to state 198
    start_if                       shift and go to state 199
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 200
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    acceso_arreglo                 shift and go to state 201
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 285

    (55) start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI . list_exp_ins LD
    (50) list_exp_ins -> . list_exp_ins bloque_exp
    (51) list_exp_ins -> . bloque_exp
    (66) bloque_exp -> . bloque
    (67) bloque_exp -> . expresiones
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (39) acceso_arreglo -> . ID dimensiones
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AS resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 23 (bloque -> .)
    PUNTO           reduce using rule 23 (bloque -> .)
    OR              reduce using rule 23 (bloque -> .)
    AND             reduce using rule 23 (bloque -> .)
    MAYORIGUAL      reduce using rule 23 (bloque -> .)
    MAYOR           reduce using rule 23 (bloque -> .)
    MENORIGUAL      reduce using rule 23 (bloque -> .)
    MENOR           reduce using rule 23 (bloque -> .)
    IGUALDAD        reduce using rule 23 (bloque -> .)
    DESIGUALDAD     reduce using rule 23 (bloque -> .)
    SUMA            reduce using rule 23 (bloque -> .)
    MULTI           reduce using rule 23 (bloque -> .)
    DIVI            reduce using rule 23 (bloque -> .)
    MODULO          reduce using rule 23 (bloque -> .)
    AS              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]
  ! NOT             [ reduce using rule 23 (bloque -> .) ]
  ! RESTA           [ reduce using rule 23 (bloque -> .) ]
  ! PI              [ reduce using rule 23 (bloque -> .) ]
  ! POWF            [ reduce using rule 23 (bloque -> .) ]
  ! POW             [ reduce using rule 23 (bloque -> .) ]
  ! CI              [ reduce using rule 23 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 23 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 23 (bloque -> .) ]
  ! CADENA          [ reduce using rule 23 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 23 (bloque -> .) ]
  ! TRUE            [ reduce using rule 23 (bloque -> .) ]
  ! FALSE           [ reduce using rule 23 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 116 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 193
    list_exp_ins                   shift and go to state 292
    bloque_exp                     shift and go to state 195
    bloque                         shift and go to state 196
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 197
    start_match                    shift and go to state 198
    start_if                       shift and go to state 199
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 200
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    acceso_arreglo                 shift and go to state 201
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 286

    (109) impresion_valores -> impresion_valores COMA . expresiones
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (43) start_loop -> . LOOP LI lista_bloque LD
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (124) arreglo_init -> . CI lista_Expresiones CD
    (39) acceso_arreglo -> . ID dimensiones
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 116 (expresiones -> .)
    OR              reduce using rule 116 (expresiones -> .)
    AND             reduce using rule 116 (expresiones -> .)
    MAYORIGUAL      reduce using rule 116 (expresiones -> .)
    MAYOR           reduce using rule 116 (expresiones -> .)
    MENORIGUAL      reduce using rule 116 (expresiones -> .)
    MENOR           reduce using rule 116 (expresiones -> .)
    IGUALDAD        reduce using rule 116 (expresiones -> .)
    DESIGUALDAD     reduce using rule 116 (expresiones -> .)
    SUMA            reduce using rule 116 (expresiones -> .)
    MULTI           reduce using rule 116 (expresiones -> .)
    DIVI            reduce using rule 116 (expresiones -> .)
    MODULO          reduce using rule 116 (expresiones -> .)
    AS              reduce using rule 116 (expresiones -> .)
    PD              reduce using rule 116 (expresiones -> .)
    COMA            reduce using rule 116 (expresiones -> .)
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    ID              shift and go to state 19
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 293
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    datos_cast                     shift and go to state 31
    start_match                    shift and go to state 32
    start_if                       shift and go to state 33
    start_loop                     shift and go to state 34
    llamada                        shift and go to state 35
    arreglo_init                   shift and go to state 36
    acceso_arreglo                 shift and go to state 37
    datos                          shift and go to state 38

state 287

    (107) impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .

    PYC             reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    LD              reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    PRINTLN         reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    PRINT           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    ID              reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MATCH           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    IF              reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    WHILE           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    RETURN          reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    LOOP            reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    LET             reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    GBAJO           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    NOT             reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    RESTA           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    PI              reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    POWF            reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    POW             reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    CI              reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    ENTERO          reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    FLOAT           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    CADENA          reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    CARACTER        reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    TRUE            reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    FALSE           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    IGUAL           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    BARRA           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    PUNTO           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    OR              reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    AND             reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MAYORIGUAL      reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MAYOR           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MENORIGUAL      reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MENOR           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    IGUALDAD        reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    DESIGUALDAD     reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    SUMA            reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MULTI           reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    DIVI            reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MODULO          reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    AS              reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    COMA            reduce using rule 107 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)


state 288

    (108) impresiones -> PRINT PI CADENA COMA impresion_valores PD .

    PYC             reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    LD              reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    PRINTLN         reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    PRINT           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    ID              reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MATCH           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    IF              reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    WHILE           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    RETURN          reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    LOOP            reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    LET             reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    GBAJO           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    NOT             reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    RESTA           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    PI              reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    POWF            reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    POW             reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    CI              reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    ENTERO          reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    FLOAT           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    CADENA          reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    CARACTER        reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    TRUE            reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    FALSE           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    IGUAL           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    BARRA           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    PUNTO           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    OR              reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    AND             reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MAYORIGUAL      reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MAYOR           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MENORIGUAL      reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MENOR           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    IGUALDAD        reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    DESIGUALDAD     reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    SUMA            reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MULTI           reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    DIVI            reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MODULO          reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    AS              reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    COMA            reduce using rule 108 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)


state 289

    (63) bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .

    LD              reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    PRINTLN         reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    PRINT           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    ID              reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MATCH           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    IF              reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    WHILE           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    RETURN          reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    LOOP            reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    LET             reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    GBAJO           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    NOT             reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    RESTA           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    PI              reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    POWF            reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    POW             reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    CI              reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    ENTERO          reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    FLOAT           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    CADENA          reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    CARACTER        reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    TRUE            reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    FALSE           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    IGUAL           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    BARRA           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    PUNTO           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    OR              reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    AND             reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MAYORIGUAL      reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MAYOR           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MENORIGUAL      reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MENOR           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    IGUALDAD        reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    DESIGUALDAD     reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    SUMA            reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MULTI           reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    DIVI            reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MODULO          reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    AS              reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    COMA            reduce using rule 63 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)


state 290

    (58) else_if -> ELSE IF expresiones LI . list_exp_ins LD
    (50) list_exp_ins -> . list_exp_ins bloque_exp
    (51) list_exp_ins -> . bloque_exp
    (66) bloque_exp -> . bloque
    (67) bloque_exp -> . expresiones
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (39) acceso_arreglo -> . ID dimensiones
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AS resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 23 (bloque -> .)
    PUNTO           reduce using rule 23 (bloque -> .)
    OR              reduce using rule 23 (bloque -> .)
    AND             reduce using rule 23 (bloque -> .)
    MAYORIGUAL      reduce using rule 23 (bloque -> .)
    MAYOR           reduce using rule 23 (bloque -> .)
    MENORIGUAL      reduce using rule 23 (bloque -> .)
    MENOR           reduce using rule 23 (bloque -> .)
    IGUALDAD        reduce using rule 23 (bloque -> .)
    DESIGUALDAD     reduce using rule 23 (bloque -> .)
    SUMA            reduce using rule 23 (bloque -> .)
    MULTI           reduce using rule 23 (bloque -> .)
    DIVI            reduce using rule 23 (bloque -> .)
    MODULO          reduce using rule 23 (bloque -> .)
    AS              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]
  ! NOT             [ reduce using rule 23 (bloque -> .) ]
  ! RESTA           [ reduce using rule 23 (bloque -> .) ]
  ! PI              [ reduce using rule 23 (bloque -> .) ]
  ! POWF            [ reduce using rule 23 (bloque -> .) ]
  ! POW             [ reduce using rule 23 (bloque -> .) ]
  ! CI              [ reduce using rule 23 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 23 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 23 (bloque -> .) ]
  ! CADENA          [ reduce using rule 23 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 23 (bloque -> .) ]
  ! TRUE            [ reduce using rule 23 (bloque -> .) ]
  ! FALSE           [ reduce using rule 23 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 116 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 193
    list_exp_ins                   shift and go to state 294
    bloque_exp                     shift and go to state 195
    bloque                         shift and go to state 196
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 197
    start_match                    shift and go to state 198
    start_if                       shift and go to state 199
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 200
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    acceso_arreglo                 shift and go to state 201
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 291

    (53) start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .

    PUNTO           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    OR              reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    AND             reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MAYORIGUAL      reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MAYOR           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MENORIGUAL      reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MENOR           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    IGUALDAD        reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    DESIGUALDAD     reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    RESTA           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    SUMA            reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MULTI           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    DIVI            reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MODULO          reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    AS              reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    FUNCION         reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    LET             reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    ID              reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    $end            reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    PYC             reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    LD              reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    PRINTLN         reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    PRINT           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MATCH           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    IF              reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    WHILE           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    RETURN          reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    LOOP            reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    GBAJO           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    NOT             reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    PI              reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    POWF            reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    POW             reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    CI              reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    ENTERO          reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    FLOAT           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    CADENA          reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    CARACTER        reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    TRUE            reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    FALSE           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    IGUAL           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    BARRA           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    COMA            reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    PD              reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    LI              reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    CD              reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    BREAK           reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    CONTINUE        reduce using rule 53 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)


state 292

    (55) start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins . LD
    (50) list_exp_ins -> list_exp_ins . bloque_exp
    (66) bloque_exp -> . bloque
    (67) bloque_exp -> . expresiones
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (39) acceso_arreglo -> . ID dimensiones
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AS resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PRINTLN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 295
    PUNTO           reduce using rule 23 (bloque -> .)
    OR              reduce using rule 23 (bloque -> .)
    AND             reduce using rule 23 (bloque -> .)
    MAYORIGUAL      reduce using rule 23 (bloque -> .)
    MAYOR           reduce using rule 23 (bloque -> .)
    MENORIGUAL      reduce using rule 23 (bloque -> .)
    MENOR           reduce using rule 23 (bloque -> .)
    IGUALDAD        reduce using rule 23 (bloque -> .)
    DESIGUALDAD     reduce using rule 23 (bloque -> .)
    SUMA            reduce using rule 23 (bloque -> .)
    MULTI           reduce using rule 23 (bloque -> .)
    DIVI            reduce using rule 23 (bloque -> .)
    MODULO          reduce using rule 23 (bloque -> .)
    AS              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! LD              [ reduce using rule 23 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]
  ! NOT             [ reduce using rule 23 (bloque -> .) ]
  ! RESTA           [ reduce using rule 23 (bloque -> .) ]
  ! PI              [ reduce using rule 23 (bloque -> .) ]
  ! POWF            [ reduce using rule 23 (bloque -> .) ]
  ! POW             [ reduce using rule 23 (bloque -> .) ]
  ! CI              [ reduce using rule 23 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 23 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 23 (bloque -> .) ]
  ! CADENA          [ reduce using rule 23 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 23 (bloque -> .) ]
  ! TRUE            [ reduce using rule 23 (bloque -> .) ]
  ! FALSE           [ reduce using rule 23 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 116 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 193
    bloque_exp                     shift and go to state 236
    bloque                         shift and go to state 196
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 197
    start_match                    shift and go to state 198
    start_if                       shift and go to state 199
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 200
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    acceso_arreglo                 shift and go to state 201
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 293

    (109) impresion_valores -> impresion_valores COMA expresiones .
    (127) funcion_nativa -> expresiones . PUNTO nativas
    (133) expre_logica -> expresiones . OR expresiones
    (134) expre_logica -> expresiones . AND expresiones
    (136) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (137) expre_relacional -> expresiones . MAYOR expresiones
    (138) expre_relacional -> expresiones . MENORIGUAL expresiones
    (139) expre_relacional -> expresiones . MENOR expresiones
    (140) expre_relacional -> expresiones . IGUALDAD expresiones
    (141) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (144) expre_aritmetica -> expresiones . RESTA expresiones
    (145) expre_aritmetica -> expresiones . SUMA expresiones
    (146) expre_aritmetica -> expresiones . MULTI expresiones
    (147) expre_aritmetica -> expresiones . DIVI expresiones
    (148) expre_aritmetica -> expresiones . MODULO expresiones
    (152) datos_cast -> expresiones . AS tipo_datos

    PD              reduce using rule 109 (impresion_valores -> impresion_valores COMA expresiones .)
    COMA            reduce using rule 109 (impresion_valores -> impresion_valores COMA expresiones .)
    PUNTO           shift and go to state 60
    OR              shift and go to state 61
    AND             shift and go to state 62
    MAYORIGUAL      shift and go to state 63
    MAYOR           shift and go to state 64
    MENORIGUAL      shift and go to state 65
    MENOR           shift and go to state 66
    IGUALDAD        shift and go to state 67
    DESIGUALDAD     shift and go to state 68
    RESTA           shift and go to state 69
    SUMA            shift and go to state 70
    MULTI           shift and go to state 71
    DIVI            shift and go to state 72
    MODULO          shift and go to state 73
    AS              shift and go to state 74


state 294

    (58) else_if -> ELSE IF expresiones LI list_exp_ins . LD
    (50) list_exp_ins -> list_exp_ins . bloque_exp
    (66) bloque_exp -> . bloque
    (67) bloque_exp -> . expresiones
    (10) bloque -> . impresiones PYC
    (11) bloque -> . declaracion
    (12) bloque -> . asignacion PYC
    (13) bloque -> . llamada PYC
    (14) bloque -> . start_match
    (15) bloque -> . start_if
    (16) bloque -> . start_while
    (17) bloque -> . return_ins PYC
    (18) bloque -> . break_ins PYC
    (19) bloque -> . continue_ins PYC
    (20) bloque -> . start_loop
    (21) bloque -> . declaracion_arreglo
    (22) bloque -> . asignacion_arreglo
    (23) bloque -> .
    (111) expresiones -> . funcion_nativa
    (112) expresiones -> . expre_logica
    (113) expresiones -> . expre_relacional
    (114) expresiones -> . expre_aritmetica
    (115) expresiones -> . expre_valor
    (116) expresiones -> .
    (105) impresiones -> . PRINTLN PI CADENA PD
    (106) impresiones -> . PRINT PI CADENA PD
    (107) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (108) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (92) declaracion -> . LET mutable ID tipado PYC
    (93) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (94) asignacion -> . ID IGUAL expresiones
    (71) llamada -> . ID PI PD
    (72) llamada -> . ID PI lista_expres PD
    (59) start_match -> . MATCH expresiones LI matches LD
    (52) start_if -> . IF expresiones LI list_exp_ins LD
    (53) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (54) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (55) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (49) start_while -> . WHILE expresiones LI lista_bloque LD
    (47) return_ins -> . RETURN
    (48) return_ins -> . RETURN expresiones
    (45) break_ins -> . BREAK
    (46) break_ins -> . BREAK expresiones
    (44) continue_ins -> . CONTINUE
    (43) start_loop -> . LOOP LI lista_bloque LD
    (35) declaracion_arreglo -> . LET mutable ID validacion_dimension IGUAL expresiones PYC
    (34) asignacion_arreglo -> . acceso_arreglo IGUAL expresiones
    (127) funcion_nativa -> . expresiones PUNTO nativas
    (133) expre_logica -> . expresiones OR expresiones
    (134) expre_logica -> . expresiones AND expresiones
    (135) expre_logica -> . NOT expresiones
    (136) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (137) expre_relacional -> . expresiones MAYOR expresiones
    (138) expre_relacional -> . expresiones MENORIGUAL expresiones
    (139) expre_relacional -> . expresiones MENOR expresiones
    (140) expre_relacional -> . expresiones IGUALDAD expresiones
    (141) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (142) expre_aritmetica -> . RESTA expresiones
    (143) expre_aritmetica -> . PI expresiones PD
    (144) expre_aritmetica -> . expresiones RESTA expresiones
    (145) expre_aritmetica -> . expresiones SUMA expresiones
    (146) expre_aritmetica -> . expresiones MULTI expresiones
    (147) expre_aritmetica -> . expresiones DIVI expresiones
    (148) expre_aritmetica -> . expresiones MODULO expresiones
    (149) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (150) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (117) expre_valor -> . datos_cast
    (118) expre_valor -> . start_match
    (119) expre_valor -> . start_if
    (120) expre_valor -> . start_loop
    (121) expre_valor -> . llamada
    (122) expre_valor -> . arreglo_init
    (123) expre_valor -> . acceso_arreglo
    (39) acceso_arreglo -> . ID dimensiones
    (151) datos_cast -> . datos
    (152) datos_cast -> . expresiones AS tipo_datos
    (124) arreglo_init -> . CI lista_Expresiones CD
    (153) datos -> . ENTERO
    (154) datos -> . FLOAT
    (155) datos -> . CADENA
    (156) datos -> . CARACTER
    (157) datos -> . ID
    (158) datos -> . TRUE
    (159) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for AS resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PRINTLN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CI resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 23 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 23 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for CI resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 296
    PUNTO           reduce using rule 23 (bloque -> .)
    OR              reduce using rule 23 (bloque -> .)
    AND             reduce using rule 23 (bloque -> .)
    MAYORIGUAL      reduce using rule 23 (bloque -> .)
    MAYOR           reduce using rule 23 (bloque -> .)
    MENORIGUAL      reduce using rule 23 (bloque -> .)
    MENOR           reduce using rule 23 (bloque -> .)
    IGUALDAD        reduce using rule 23 (bloque -> .)
    DESIGUALDAD     reduce using rule 23 (bloque -> .)
    SUMA            reduce using rule 23 (bloque -> .)
    MULTI           reduce using rule 23 (bloque -> .)
    DIVI            reduce using rule 23 (bloque -> .)
    MODULO          reduce using rule 23 (bloque -> .)
    AS              reduce using rule 23 (bloque -> .)
    PRINTLN         shift and go to state 148
    PRINT           shift and go to state 149
    LET             shift and go to state 10
    ID              shift and go to state 190
    MATCH           shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 151
    RETURN          shift and go to state 152
    BREAK           shift and go to state 153
    CONTINUE        shift and go to state 154
    LOOP            shift and go to state 41
    NOT             shift and go to state 26
    RESTA           shift and go to state 27
    PI              shift and go to state 28
    POWF            shift and go to state 29
    POW             shift and go to state 30
    CI              shift and go to state 42
    ENTERO          shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 45
    CARACTER        shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

  ! LD              [ reduce using rule 23 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 23 (bloque -> .) ]
  ! PRINT           [ reduce using rule 23 (bloque -> .) ]
  ! LET             [ reduce using rule 23 (bloque -> .) ]
  ! ID              [ reduce using rule 23 (bloque -> .) ]
  ! MATCH           [ reduce using rule 23 (bloque -> .) ]
  ! IF              [ reduce using rule 23 (bloque -> .) ]
  ! WHILE           [ reduce using rule 23 (bloque -> .) ]
  ! RETURN          [ reduce using rule 23 (bloque -> .) ]
  ! BREAK           [ reduce using rule 23 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 23 (bloque -> .) ]
  ! LOOP            [ reduce using rule 23 (bloque -> .) ]
  ! NOT             [ reduce using rule 23 (bloque -> .) ]
  ! RESTA           [ reduce using rule 23 (bloque -> .) ]
  ! PI              [ reduce using rule 23 (bloque -> .) ]
  ! POWF            [ reduce using rule 23 (bloque -> .) ]
  ! POW             [ reduce using rule 23 (bloque -> .) ]
  ! CI              [ reduce using rule 23 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 23 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 23 (bloque -> .) ]
  ! CADENA          [ reduce using rule 23 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 23 (bloque -> .) ]
  ! TRUE            [ reduce using rule 23 (bloque -> .) ]
  ! FALSE           [ reduce using rule 23 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 116 (expresiones -> .) ]
  ! OR              [ reduce using rule 116 (expresiones -> .) ]
  ! AND             [ reduce using rule 116 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 116 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 116 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 116 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 116 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 116 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 116 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 116 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 116 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 116 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 116 (expresiones -> .) ]
  ! AS              [ reduce using rule 116 (expresiones -> .) ]
  ! LD              [ reduce using rule 116 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 116 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 116 (expresiones -> .) ]
  ! LET             [ reduce using rule 116 (expresiones -> .) ]
  ! ID              [ reduce using rule 116 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 116 (expresiones -> .) ]
  ! IF              [ reduce using rule 116 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 116 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 116 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 116 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 116 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 116 (expresiones -> .) ]
  ! NOT             [ reduce using rule 116 (expresiones -> .) ]
  ! PI              [ reduce using rule 116 (expresiones -> .) ]
  ! POWF            [ reduce using rule 116 (expresiones -> .) ]
  ! POW             [ reduce using rule 116 (expresiones -> .) ]
  ! CI              [ reduce using rule 116 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 116 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 116 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 116 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 116 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 116 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 116 (expresiones -> .) ]

    expresiones                    shift and go to state 193
    bloque_exp                     shift and go to state 236
    bloque                         shift and go to state 196
    impresiones                    shift and go to state 135
    declaracion                    shift and go to state 136
    asignacion                     shift and go to state 137
    llamada                        shift and go to state 197
    start_match                    shift and go to state 198
    start_if                       shift and go to state 199
    start_while                    shift and go to state 141
    return_ins                     shift and go to state 142
    break_ins                      shift and go to state 143
    continue_ins                   shift and go to state 144
    start_loop                     shift and go to state 200
    declaracion_arreglo            shift and go to state 146
    asignacion_arreglo             shift and go to state 147
    funcion_nativa                 shift and go to state 21
    expre_logica                   shift and go to state 22
    expre_relacional               shift and go to state 23
    expre_aritmetica               shift and go to state 24
    expre_valor                    shift and go to state 25
    acceso_arreglo                 shift and go to state 201
    datos_cast                     shift and go to state 31
    arreglo_init                   shift and go to state 36
    datos                          shift and go to state 38

state 295

    (55) start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .

    PUNTO           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    OR              reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    AND             reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MAYORIGUAL      reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MAYOR           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MENORIGUAL      reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MENOR           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    IGUALDAD        reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    DESIGUALDAD     reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    RESTA           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    SUMA            reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MULTI           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    DIVI            reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MODULO          reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    AS              reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    FUNCION         reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    LET             reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    ID              reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    $end            reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    PYC             reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    LD              reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    PRINTLN         reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    PRINT           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MATCH           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    IF              reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    WHILE           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    RETURN          reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    LOOP            reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    GBAJO           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    NOT             reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    PI              reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    POWF            reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    POW             reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    CI              reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    ENTERO          reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    FLOAT           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    CADENA          reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    CARACTER        reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    TRUE            reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    FALSE           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    IGUAL           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    BARRA           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    COMA            reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    PD              reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    LI              reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    CD              reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    BREAK           reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    CONTINUE        reduce using rule 55 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)


state 296

    (58) else_if -> ELSE IF expresiones LI list_exp_ins LD .

    ELSE            reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PUNTO           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    OR              reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    AND             reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MAYORIGUAL      reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MAYOR           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MENORIGUAL      reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MENOR           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    IGUALDAD        reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    DESIGUALDAD     reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    RESTA           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    SUMA            reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MULTI           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    DIVI            reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MODULO          reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    AS              reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    FUNCION         reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    LET             reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    ID              reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    $end            reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PYC             reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    LD              reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PRINTLN         reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PRINT           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MATCH           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    IF              reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    WHILE           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    RETURN          reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    LOOP            reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    GBAJO           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    NOT             reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PI              reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    POWF            reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    POW             reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    CI              reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    ENTERO          reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    FLOAT           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    CADENA          reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    CARACTER        reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    TRUE            reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    FALSE           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    IGUAL           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    BARRA           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    COMA            reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PD              reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    LI              reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    CD              reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    BREAK           reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    CONTINUE        reduce using rule 58 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NOT in state 14 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 14 resolved as shift
WARNING: shift/reduce conflict for PI in state 14 resolved as shift
WARNING: shift/reduce conflict for POWF in state 14 resolved as shift
WARNING: shift/reduce conflict for POW in state 14 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 14 resolved as shift
WARNING: shift/reduce conflict for IF in state 14 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for CI in state 14 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 14 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 14 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 14 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 14 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 14 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 14 resolved as shift
WARNING: shift/reduce conflict for PI in state 19 resolved as shift
WARNING: shift/reduce conflict for CI in state 19 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 20 resolved as shift
WARNING: shift/reduce conflict for OR in state 20 resolved as shift
WARNING: shift/reduce conflict for AND in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 20 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 20 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 20 resolved as shift
WARNING: shift/reduce conflict for DESIGUALDAD in state 20 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 20 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 20 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 20 resolved as shift
WARNING: shift/reduce conflict for DIVI in state 20 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 20 resolved as shift
WARNING: shift/reduce conflict for AS in state 20 resolved as shift
WARNING: shift/reduce conflict for NOT in state 26 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 26 resolved as shift
WARNING: shift/reduce conflict for PI in state 26 resolved as shift
WARNING: shift/reduce conflict for POWF in state 26 resolved as shift
WARNING: shift/reduce conflict for POW in state 26 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 26 resolved as shift
WARNING: shift/reduce conflict for IF in state 26 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 26 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for CI in state 26 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 26 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 26 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 26 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 26 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 26 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 26 resolved as shift
WARNING: shift/reduce conflict for NOT in state 27 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 27 resolved as shift
WARNING: shift/reduce conflict for PI in state 27 resolved as shift
WARNING: shift/reduce conflict for POWF in state 27 resolved as shift
WARNING: shift/reduce conflict for POW in state 27 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 27 resolved as shift
WARNING: shift/reduce conflict for IF in state 27 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 27 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for CI in state 27 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 27 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 27 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 27 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 27 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 27 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 27 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 28 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 39 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 40 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 42 resolved as shift
WARNING: shift/reduce conflict for PD in state 56 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 56 resolved as shift
WARNING: shift/reduce conflict for CI in state 57 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 59 resolved as shift
WARNING: shift/reduce conflict for NOT in state 61 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 61 resolved as shift
WARNING: shift/reduce conflict for PI in state 61 resolved as shift
WARNING: shift/reduce conflict for POWF in state 61 resolved as shift
WARNING: shift/reduce conflict for POW in state 61 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 61 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for CI in state 61 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 61 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 61 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 61 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 61 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 61 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 61 resolved as shift
WARNING: shift/reduce conflict for NOT in state 62 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 62 resolved as shift
WARNING: shift/reduce conflict for PI in state 62 resolved as shift
WARNING: shift/reduce conflict for POWF in state 62 resolved as shift
WARNING: shift/reduce conflict for POW in state 62 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for CI in state 62 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 62 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 62 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 62 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 62 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 62 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 62 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 63 resolved as shift
WARNING: shift/reduce conflict for PI in state 63 resolved as shift
WARNING: shift/reduce conflict for POWF in state 63 resolved as shift
WARNING: shift/reduce conflict for POW in state 63 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for CI in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 63 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 63 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 63 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 63 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 64 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 64 resolved as shift
WARNING: shift/reduce conflict for PI in state 64 resolved as shift
WARNING: shift/reduce conflict for POWF in state 64 resolved as shift
WARNING: shift/reduce conflict for POW in state 64 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 64 resolved as shift
WARNING: shift/reduce conflict for IF in state 64 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 64 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for CI in state 64 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 64 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 64 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 64 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 64 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 64 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 64 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 65 resolved as shift
WARNING: shift/reduce conflict for PI in state 65 resolved as shift
WARNING: shift/reduce conflict for POWF in state 65 resolved as shift
WARNING: shift/reduce conflict for POW in state 65 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 65 resolved as shift
WARNING: shift/reduce conflict for ID in state 65 resolved as shift
WARNING: shift/reduce conflict for CI in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 65 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 65 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 65 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 65 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 66 resolved as shift
WARNING: shift/reduce conflict for PI in state 66 resolved as shift
WARNING: shift/reduce conflict for POWF in state 66 resolved as shift
WARNING: shift/reduce conflict for POW in state 66 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 66 resolved as shift
WARNING: shift/reduce conflict for CI in state 66 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 66 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 66 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 66 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 66 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 66 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 66 resolved as shift
WARNING: shift/reduce conflict for NOT in state 67 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 67 resolved as shift
WARNING: shift/reduce conflict for PI in state 67 resolved as shift
WARNING: shift/reduce conflict for POWF in state 67 resolved as shift
WARNING: shift/reduce conflict for POW in state 67 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 67 resolved as shift
WARNING: shift/reduce conflict for IF in state 67 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 67 resolved as shift
WARNING: shift/reduce conflict for ID in state 67 resolved as shift
WARNING: shift/reduce conflict for CI in state 67 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 67 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 67 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 67 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 67 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 67 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 67 resolved as shift
WARNING: shift/reduce conflict for NOT in state 68 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 68 resolved as shift
WARNING: shift/reduce conflict for PI in state 68 resolved as shift
WARNING: shift/reduce conflict for POWF in state 68 resolved as shift
WARNING: shift/reduce conflict for POW in state 68 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 68 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 68 resolved as shift
WARNING: shift/reduce conflict for ID in state 68 resolved as shift
WARNING: shift/reduce conflict for CI in state 68 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 68 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 68 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 68 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 68 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 68 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 68 resolved as shift
WARNING: shift/reduce conflict for NOT in state 69 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 69 resolved as shift
WARNING: shift/reduce conflict for PI in state 69 resolved as shift
WARNING: shift/reduce conflict for POWF in state 69 resolved as shift
WARNING: shift/reduce conflict for POW in state 69 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 69 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 69 resolved as shift
WARNING: shift/reduce conflict for ID in state 69 resolved as shift
WARNING: shift/reduce conflict for CI in state 69 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 69 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 69 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 69 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 69 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 69 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 69 resolved as shift
WARNING: shift/reduce conflict for NOT in state 70 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 70 resolved as shift
WARNING: shift/reduce conflict for PI in state 70 resolved as shift
WARNING: shift/reduce conflict for POWF in state 70 resolved as shift
WARNING: shift/reduce conflict for POW in state 70 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 70 resolved as shift
WARNING: shift/reduce conflict for ID in state 70 resolved as shift
WARNING: shift/reduce conflict for CI in state 70 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 70 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 70 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 70 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 70 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 70 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT in state 71 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 71 resolved as shift
WARNING: shift/reduce conflict for PI in state 71 resolved as shift
WARNING: shift/reduce conflict for POWF in state 71 resolved as shift
WARNING: shift/reduce conflict for POW in state 71 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 71 resolved as shift
WARNING: shift/reduce conflict for IF in state 71 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 71 resolved as shift
WARNING: shift/reduce conflict for ID in state 71 resolved as shift
WARNING: shift/reduce conflict for CI in state 71 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 71 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 71 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 71 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 71 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 71 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT in state 72 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 72 resolved as shift
WARNING: shift/reduce conflict for PI in state 72 resolved as shift
WARNING: shift/reduce conflict for POWF in state 72 resolved as shift
WARNING: shift/reduce conflict for POW in state 72 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 72 resolved as shift
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for CI in state 72 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 72 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 72 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 72 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 72 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 72 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 72 resolved as shift
WARNING: shift/reduce conflict for NOT in state 73 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 73 resolved as shift
WARNING: shift/reduce conflict for PI in state 73 resolved as shift
WARNING: shift/reduce conflict for POWF in state 73 resolved as shift
WARNING: shift/reduce conflict for POW in state 73 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 73 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 73 resolved as shift
WARNING: shift/reduce conflict for ID in state 73 resolved as shift
WARNING: shift/reduce conflict for CI in state 73 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 73 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 73 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 73 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 73 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 73 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 73 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 78 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 79 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 82 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 82 resolved as shift
WARNING: shift/reduce conflict for LET in state 82 resolved as shift
WARNING: shift/reduce conflict for ID in state 82 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 82 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 82 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 82 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 82 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 82 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 82 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 88 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 88 resolved as shift
WARNING: shift/reduce conflict for LET in state 88 resolved as shift
WARNING: shift/reduce conflict for ID in state 88 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 88 resolved as shift
WARNING: shift/reduce conflict for IF in state 88 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 88 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 88 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 88 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 88 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 88 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 131 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 131 resolved as shift
WARNING: shift/reduce conflict for ID in state 131 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 131 resolved as shift
WARNING: shift/reduce conflict for IF in state 131 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 131 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 131 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 131 resolved as shift
WARNING: shift/reduce conflict for LET in state 131 resolved as shift
WARNING: shift/reduce conflict for GBAJO in state 131 resolved as shift
WARNING: shift/reduce conflict for NOT in state 131 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 131 resolved as shift
WARNING: shift/reduce conflict for PI in state 131 resolved as shift
WARNING: shift/reduce conflict for POWF in state 131 resolved as shift
WARNING: shift/reduce conflict for POW in state 131 resolved as shift
WARNING: shift/reduce conflict for CI in state 131 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 131 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 131 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 131 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 131 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 131 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 131 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 132 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 132 resolved as shift
WARNING: shift/reduce conflict for LET in state 132 resolved as shift
WARNING: shift/reduce conflict for ID in state 132 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 132 resolved as shift
WARNING: shift/reduce conflict for IF in state 132 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 132 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 132 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 132 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 132 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 132 resolved as shift
WARNING: shift/reduce conflict for NOT in state 132 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 132 resolved as shift
WARNING: shift/reduce conflict for PI in state 132 resolved as shift
WARNING: shift/reduce conflict for POWF in state 132 resolved as shift
WARNING: shift/reduce conflict for POW in state 132 resolved as shift
WARNING: shift/reduce conflict for CI in state 132 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 132 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 132 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 132 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 132 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 132 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 132 resolved as shift
WARNING: shift/reduce conflict for LD in state 133 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 133 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 133 resolved as shift
WARNING: shift/reduce conflict for LET in state 133 resolved as shift
WARNING: shift/reduce conflict for ID in state 133 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 133 resolved as shift
WARNING: shift/reduce conflict for IF in state 133 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 133 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 133 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 133 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 133 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 133 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 151 resolved as shift
WARNING: shift/reduce conflict for NOT in state 152 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 152 resolved as shift
WARNING: shift/reduce conflict for PI in state 152 resolved as shift
WARNING: shift/reduce conflict for POWF in state 152 resolved as shift
WARNING: shift/reduce conflict for POW in state 152 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 152 resolved as shift
WARNING: shift/reduce conflict for IF in state 152 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 152 resolved as shift
WARNING: shift/reduce conflict for ID in state 152 resolved as shift
WARNING: shift/reduce conflict for CI in state 152 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 152 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 152 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 152 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 152 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 152 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 152 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 153 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 157 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 159 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 160 resolved as shift
WARNING: shift/reduce conflict for LD in state 164 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 164 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 164 resolved as shift
WARNING: shift/reduce conflict for LET in state 164 resolved as shift
WARNING: shift/reduce conflict for ID in state 164 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 164 resolved as shift
WARNING: shift/reduce conflict for IF in state 164 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 164 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 164 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 164 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 164 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 164 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 166 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 166 resolved as shift
WARNING: shift/reduce conflict for LET in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 166 resolved as shift
WARNING: shift/reduce conflict for IF in state 166 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 166 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 166 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 166 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 166 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 166 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 173 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 175 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 176 resolved as shift
WARNING: shift/reduce conflict for LD in state 178 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 178 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 178 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 178 resolved as shift
WARNING: shift/reduce conflict for IF in state 178 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 178 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 178 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 178 resolved as shift
WARNING: shift/reduce conflict for LET in state 178 resolved as shift
WARNING: shift/reduce conflict for GBAJO in state 178 resolved as shift
WARNING: shift/reduce conflict for NOT in state 178 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 178 resolved as shift
WARNING: shift/reduce conflict for PI in state 178 resolved as shift
WARNING: shift/reduce conflict for POWF in state 178 resolved as shift
WARNING: shift/reduce conflict for POW in state 178 resolved as shift
WARNING: shift/reduce conflict for CI in state 178 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 178 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 178 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 178 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 178 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 178 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 178 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 190 resolved as shift
WARNING: shift/reduce conflict for PI in state 190 resolved as shift
WARNING: shift/reduce conflict for CI in state 190 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 193 resolved as shift
WARNING: shift/reduce conflict for OR in state 193 resolved as shift
WARNING: shift/reduce conflict for AND in state 193 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 193 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 193 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 193 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 193 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 193 resolved as shift
WARNING: shift/reduce conflict for DESIGUALDAD in state 193 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 193 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 193 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 193 resolved as shift
WARNING: shift/reduce conflict for DIVI in state 193 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 193 resolved as shift
WARNING: shift/reduce conflict for AS in state 193 resolved as shift
WARNING: shift/reduce conflict for LD in state 194 resolved as shift
WARNING: shift/reduce conflict for LD in state 194 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 194 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 194 resolved as shift
WARNING: shift/reduce conflict for LET in state 194 resolved as shift
WARNING: shift/reduce conflict for ID in state 194 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 194 resolved as shift
WARNING: shift/reduce conflict for IF in state 194 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 194 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 194 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 194 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 194 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 194 resolved as shift
WARNING: shift/reduce conflict for NOT in state 194 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 194 resolved as shift
WARNING: shift/reduce conflict for PI in state 194 resolved as shift
WARNING: shift/reduce conflict for POWF in state 194 resolved as shift
WARNING: shift/reduce conflict for POW in state 194 resolved as shift
WARNING: shift/reduce conflict for CI in state 194 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 194 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 194 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 194 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 194 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 194 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 194 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 213 resolved as shift
WARNING: shift/reduce conflict for OR in state 213 resolved as shift
WARNING: shift/reduce conflict for AND in state 213 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 213 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 213 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 213 resolved as shift
WARNING: shift/reduce conflict for DESIGUALDAD in state 213 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 213 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 213 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 213 resolved as shift
WARNING: shift/reduce conflict for DIVI in state 213 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 213 resolved as shift
WARNING: shift/reduce conflict for AS in state 213 resolved as shift
WARNING: shift/reduce conflict for NOT in state 215 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 215 resolved as shift
WARNING: shift/reduce conflict for PI in state 215 resolved as shift
WARNING: shift/reduce conflict for POWF in state 215 resolved as shift
WARNING: shift/reduce conflict for POW in state 215 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 215 resolved as shift
WARNING: shift/reduce conflict for IF in state 215 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 215 resolved as shift
WARNING: shift/reduce conflict for ID in state 215 resolved as shift
WARNING: shift/reduce conflict for CI in state 215 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 215 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 215 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 215 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 215 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 215 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 215 resolved as shift
WARNING: shift/reduce conflict for LD in state 223 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 223 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 223 resolved as shift
WARNING: shift/reduce conflict for LET in state 223 resolved as shift
WARNING: shift/reduce conflict for ID in state 223 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 223 resolved as shift
WARNING: shift/reduce conflict for IF in state 223 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 223 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 223 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 223 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 223 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 223 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 226 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 226 resolved as shift
WARNING: shift/reduce conflict for LET in state 226 resolved as shift
WARNING: shift/reduce conflict for ID in state 226 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 226 resolved as shift
WARNING: shift/reduce conflict for IF in state 226 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 226 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 226 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 226 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 226 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 226 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 233 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 239 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 239 resolved as shift
WARNING: shift/reduce conflict for LET in state 239 resolved as shift
WARNING: shift/reduce conflict for ID in state 239 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 239 resolved as shift
WARNING: shift/reduce conflict for IF in state 239 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 239 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 239 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 239 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 239 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 239 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 240 resolved as shift
WARNING: shift/reduce conflict for OR in state 240 resolved as shift
WARNING: shift/reduce conflict for AND in state 240 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 240 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 240 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 240 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 240 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 240 resolved as shift
WARNING: shift/reduce conflict for DESIGUALDAD in state 240 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 240 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 240 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 240 resolved as shift
WARNING: shift/reduce conflict for DIVI in state 240 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 240 resolved as shift
WARNING: shift/reduce conflict for AS in state 240 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 243 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 244 resolved as shift
WARNING: shift/reduce conflict for LD in state 247 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 247 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 247 resolved as shift
WARNING: shift/reduce conflict for LET in state 247 resolved as shift
WARNING: shift/reduce conflict for ID in state 247 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 247 resolved as shift
WARNING: shift/reduce conflict for IF in state 247 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 247 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 247 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 247 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 247 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 247 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 250 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 257 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 259 resolved as shift
WARNING: shift/reduce conflict for LD in state 260 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 260 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 260 resolved as shift
WARNING: shift/reduce conflict for LET in state 260 resolved as shift
WARNING: shift/reduce conflict for ID in state 260 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 260 resolved as shift
WARNING: shift/reduce conflict for IF in state 260 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 260 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 260 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 260 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 260 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 260 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 266 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 266 resolved as shift
WARNING: shift/reduce conflict for LET in state 266 resolved as shift
WARNING: shift/reduce conflict for ID in state 266 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 266 resolved as shift
WARNING: shift/reduce conflict for IF in state 266 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 266 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 266 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 266 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 266 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 266 resolved as shift
WARNING: shift/reduce conflict for NOT in state 266 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 266 resolved as shift
WARNING: shift/reduce conflict for PI in state 266 resolved as shift
WARNING: shift/reduce conflict for POWF in state 266 resolved as shift
WARNING: shift/reduce conflict for POW in state 266 resolved as shift
WARNING: shift/reduce conflict for CI in state 266 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 266 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 266 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 266 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 266 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 266 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 266 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 270 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 271 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 271 resolved as shift
WARNING: shift/reduce conflict for LET in state 271 resolved as shift
WARNING: shift/reduce conflict for ID in state 271 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 271 resolved as shift
WARNING: shift/reduce conflict for IF in state 271 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 271 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 271 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 271 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 271 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 271 resolved as shift
WARNING: shift/reduce conflict for NOT in state 271 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 271 resolved as shift
WARNING: shift/reduce conflict for PI in state 271 resolved as shift
WARNING: shift/reduce conflict for POWF in state 271 resolved as shift
WARNING: shift/reduce conflict for POW in state 271 resolved as shift
WARNING: shift/reduce conflict for CI in state 271 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 271 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 271 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 271 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 271 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 271 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 271 resolved as shift
WARNING: shift/reduce conflict for LD in state 282 resolved as shift
WARNING: shift/reduce conflict for LD in state 282 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 282 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 282 resolved as shift
WARNING: shift/reduce conflict for LET in state 282 resolved as shift
WARNING: shift/reduce conflict for ID in state 282 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 282 resolved as shift
WARNING: shift/reduce conflict for IF in state 282 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 282 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 282 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 282 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 282 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 282 resolved as shift
WARNING: shift/reduce conflict for NOT in state 282 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 282 resolved as shift
WARNING: shift/reduce conflict for PI in state 282 resolved as shift
WARNING: shift/reduce conflict for POWF in state 282 resolved as shift
WARNING: shift/reduce conflict for POW in state 282 resolved as shift
WARNING: shift/reduce conflict for CI in state 282 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 282 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 282 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 282 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 282 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 282 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 282 resolved as shift
WARNING: shift/reduce conflict for LD in state 284 resolved as shift
WARNING: shift/reduce conflict for LD in state 284 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 284 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 284 resolved as shift
WARNING: shift/reduce conflict for LET in state 284 resolved as shift
WARNING: shift/reduce conflict for ID in state 284 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 284 resolved as shift
WARNING: shift/reduce conflict for IF in state 284 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 284 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 284 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 284 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 284 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 284 resolved as shift
WARNING: shift/reduce conflict for NOT in state 284 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 284 resolved as shift
WARNING: shift/reduce conflict for PI in state 284 resolved as shift
WARNING: shift/reduce conflict for POWF in state 284 resolved as shift
WARNING: shift/reduce conflict for POW in state 284 resolved as shift
WARNING: shift/reduce conflict for CI in state 284 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 284 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 284 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 284 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 284 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 284 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 284 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 285 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 285 resolved as shift
WARNING: shift/reduce conflict for LET in state 285 resolved as shift
WARNING: shift/reduce conflict for ID in state 285 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 285 resolved as shift
WARNING: shift/reduce conflict for IF in state 285 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 285 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 285 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 285 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 285 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 285 resolved as shift
WARNING: shift/reduce conflict for NOT in state 285 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 285 resolved as shift
WARNING: shift/reduce conflict for PI in state 285 resolved as shift
WARNING: shift/reduce conflict for POWF in state 285 resolved as shift
WARNING: shift/reduce conflict for POW in state 285 resolved as shift
WARNING: shift/reduce conflict for CI in state 285 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 285 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 285 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 285 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 285 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 285 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 285 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 286 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 290 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 290 resolved as shift
WARNING: shift/reduce conflict for LET in state 290 resolved as shift
WARNING: shift/reduce conflict for ID in state 290 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 290 resolved as shift
WARNING: shift/reduce conflict for IF in state 290 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 290 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 290 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 290 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 290 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 290 resolved as shift
WARNING: shift/reduce conflict for NOT in state 290 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 290 resolved as shift
WARNING: shift/reduce conflict for PI in state 290 resolved as shift
WARNING: shift/reduce conflict for POWF in state 290 resolved as shift
WARNING: shift/reduce conflict for POW in state 290 resolved as shift
WARNING: shift/reduce conflict for CI in state 290 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 290 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 290 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 290 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 290 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 290 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 290 resolved as shift
WARNING: shift/reduce conflict for LD in state 292 resolved as shift
WARNING: shift/reduce conflict for LD in state 292 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 292 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 292 resolved as shift
WARNING: shift/reduce conflict for LET in state 292 resolved as shift
WARNING: shift/reduce conflict for ID in state 292 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 292 resolved as shift
WARNING: shift/reduce conflict for IF in state 292 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 292 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 292 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 292 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 292 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 292 resolved as shift
WARNING: shift/reduce conflict for NOT in state 292 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 292 resolved as shift
WARNING: shift/reduce conflict for PI in state 292 resolved as shift
WARNING: shift/reduce conflict for POWF in state 292 resolved as shift
WARNING: shift/reduce conflict for POW in state 292 resolved as shift
WARNING: shift/reduce conflict for CI in state 292 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 292 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 292 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 292 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 292 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 292 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 292 resolved as shift
WARNING: shift/reduce conflict for LD in state 294 resolved as shift
WARNING: shift/reduce conflict for LD in state 294 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 294 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 294 resolved as shift
WARNING: shift/reduce conflict for LET in state 294 resolved as shift
WARNING: shift/reduce conflict for ID in state 294 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 294 resolved as shift
WARNING: shift/reduce conflict for IF in state 294 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 294 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 294 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 294 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 294 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 294 resolved as shift
WARNING: shift/reduce conflict for NOT in state 294 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 294 resolved as shift
WARNING: shift/reduce conflict for PI in state 294 resolved as shift
WARNING: shift/reduce conflict for POWF in state 294 resolved as shift
WARNING: shift/reduce conflict for POW in state 294 resolved as shift
WARNING: shift/reduce conflict for CI in state 294 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 294 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 294 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 294 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 294 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 294 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 294 resolved as shift
WARNING: reduce/reduce conflict in state 131 resolved using rule (bloque_match -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 131
WARNING: reduce/reduce conflict in state 132 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 132
WARNING: reduce/reduce conflict in state 152 resolved using rule (return_ins -> RETURN)
WARNING: rejected rule (expresiones -> <empty>) in state 152
WARNING: reduce/reduce conflict in state 153 resolved using rule (break_ins -> BREAK)
WARNING: rejected rule (expresiones -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 178 resolved using rule (bloque_match -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 182 resolved using rule (bloque_match -> llamada)
WARNING: rejected rule (expre_valor -> llamada) in state 182
WARNING: reduce/reduce conflict in state 183 resolved using rule (bloque_match -> start_match)
WARNING: rejected rule (expre_valor -> start_match) in state 183
WARNING: reduce/reduce conflict in state 184 resolved using rule (bloque_match -> start_if)
WARNING: rejected rule (expre_valor -> start_if) in state 184
WARNING: reduce/reduce conflict in state 187 resolved using rule (bloque_match -> start_loop)
WARNING: rejected rule (expre_valor -> start_loop) in state 187
WARNING: reduce/reduce conflict in state 194 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 194
WARNING: reduce/reduce conflict in state 198 resolved using rule (bloque -> start_match)
WARNING: rejected rule (expre_valor -> start_match) in state 198
WARNING: reduce/reduce conflict in state 199 resolved using rule (bloque -> start_if)
WARNING: rejected rule (expre_valor -> start_if) in state 199
WARNING: reduce/reduce conflict in state 200 resolved using rule (bloque -> start_loop)
WARNING: rejected rule (expre_valor -> start_loop) in state 200
WARNING: reduce/reduce conflict in state 250 resolved using rule (bloque_match -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 250
WARNING: reduce/reduce conflict in state 266 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 266
WARNING: reduce/reduce conflict in state 271 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 271
WARNING: reduce/reduce conflict in state 282 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 284 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 284
WARNING: reduce/reduce conflict in state 285 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 290 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 290
WARNING: reduce/reduce conflict in state 292 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 292
WARNING: reduce/reduce conflict in state 294 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 294
