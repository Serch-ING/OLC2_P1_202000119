Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    AND
    AS
    BARRA
    BREAK
    CADENA
    CAPACITY
    CARACTER
    CD
    CI
    CLONE
    COMA
    CONTAINS
    CONTINUE
    DESIGUALDAD
    DIRSTRING
    DIVI
    DP
    ELSE
    ERR
    FALSE
    FOR
    FUNCION
    GBAJO
    IF
    IGUAL
    IGUALDAD
    IN
    INSERT
    LD
    LEN
    LET
    LI
    LOOP
    MAIN
    MATCH
    MAYOR
    MAYORIGUAL
    MENOR
    MENORIGUAL
    MOD
    MODULO
    MULTI
    MUT
    NEW
    NOT
    OR
    POW
    POWF
    PUBLICO
    PUNTO
    PUSH
    REFER
    REMOVE
    RESTA
    RETURN
    SQRT
    STRUCT
    SUMA
    TIPOBOOL
    TIPOCHAR
    TIPOFLOAT
    TIPOINT
    TIPOSTRING
    TOOWNED
    TOSTRING
    TRUE
    VECT
    VECTOR
    WCAPACITY
    WHILE

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> impresiones
Rule 5     impresiones -> PRINTLN PI expresiones PD PYC
Rule 6     impresiones -> PRINT PI expresiones PD PYC
Rule 7     expresiones -> ID
Rule 8     expresiones -> ENTERO
Rule 9     expresiones -> FLOAT

Terminals, with rules where they appear

ABS                  : 
AND                  : 
AS                   : 
BARRA                : 
BREAK                : 
CADENA               : 
CAPACITY             : 
CARACTER             : 
CD                   : 
CI                   : 
CLONE                : 
COMA                 : 
CONTAINS             : 
CONTINUE             : 
DESIGUALDAD          : 
DIRSTRING            : 
DIVI                 : 
DP                   : 
ELSE                 : 
ENTERO               : 8
ERR                  : 
FALSE                : 
FLOAT                : 9
FOR                  : 
FUNCION              : 
GBAJO                : 
ID                   : 7
IF                   : 
IGUAL                : 
IGUALDAD             : 
IN                   : 
INSERT               : 
LD                   : 
LEN                  : 
LET                  : 
LI                   : 
LOOP                 : 
MAIN                 : 
MATCH                : 
MAYOR                : 
MAYORIGUAL           : 
MENOR                : 
MENORIGUAL           : 
MOD                  : 
MODULO               : 
MULTI                : 
MUT                  : 
NEW                  : 
NOT                  : 
OR                   : 
PD                   : 5 6
PI                   : 5 6
POW                  : 
POWF                 : 
PRINT                : 6
PRINTLN              : 5
PUBLICO              : 
PUNTO                : 
PUSH                 : 
PYC                  : 5 6
REFER                : 
REMOVE               : 
RESTA                : 
RETURN               : 
SQRT                 : 
STRUCT               : 
SUMA                 : 
TIPOBOOL             : 
TIPOCHAR             : 
TIPOFLOAT            : 
TIPOINT              : 
TIPOSTRING           : 
TOOWNED              : 
TOSTRING             : 
TRUE                 : 
VECT                 : 
VECTOR               : 
WCAPACITY            : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

expresiones          : 5 6
impresiones          : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . impresiones
    (5) impresiones -> . PRINTLN PI expresiones PD PYC
    (6) impresiones -> . PRINT PI expresiones PD PYC

    PRINTLN         shift and go to state 5
    PRINT           shift and go to state 6

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    impresiones                    shift and go to state 4

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . impresiones
    (5) impresiones -> . PRINTLN PI expresiones PD PYC
    (6) impresiones -> . PRINT PI expresiones PD PYC

    $end            reduce using rule 1 (init -> instrucciones .)
    PRINTLN         shift and go to state 5
    PRINT           shift and go to state 6

    instruccion                    shift and go to state 7
    impresiones                    shift and go to state 4

state 3

    (3) instrucciones -> instruccion .

    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> impresiones .

    PRINTLN         reduce using rule 4 (instruccion -> impresiones .)
    PRINT           reduce using rule 4 (instruccion -> impresiones .)
    $end            reduce using rule 4 (instruccion -> impresiones .)


state 5

    (5) impresiones -> PRINTLN . PI expresiones PD PYC

    PI              shift and go to state 8


state 6

    (6) impresiones -> PRINT . PI expresiones PD PYC

    PI              shift and go to state 9


state 7

    (2) instrucciones -> instrucciones instruccion .

    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 8

    (5) impresiones -> PRINTLN PI . expresiones PD PYC
    (7) expresiones -> . ID
    (8) expresiones -> . ENTERO
    (9) expresiones -> . FLOAT

    ID              shift and go to state 11
    ENTERO          shift and go to state 12
    FLOAT           shift and go to state 13

    expresiones                    shift and go to state 10

state 9

    (6) impresiones -> PRINT PI . expresiones PD PYC
    (7) expresiones -> . ID
    (8) expresiones -> . ENTERO
    (9) expresiones -> . FLOAT

    ID              shift and go to state 11
    ENTERO          shift and go to state 12
    FLOAT           shift and go to state 13

    expresiones                    shift and go to state 14

state 10

    (5) impresiones -> PRINTLN PI expresiones . PD PYC

    PD              shift and go to state 15


state 11

    (7) expresiones -> ID .

    PD              reduce using rule 7 (expresiones -> ID .)


state 12

    (8) expresiones -> ENTERO .

    PD              reduce using rule 8 (expresiones -> ENTERO .)


state 13

    (9) expresiones -> FLOAT .

    PD              reduce using rule 9 (expresiones -> FLOAT .)


state 14

    (6) impresiones -> PRINT PI expresiones . PD PYC

    PD              shift and go to state 16


state 15

    (5) impresiones -> PRINTLN PI expresiones PD . PYC

    PYC             shift and go to state 17


state 16

    (6) impresiones -> PRINT PI expresiones PD . PYC

    PYC             shift and go to state 18


state 17

    (5) impresiones -> PRINTLN PI expresiones PD PYC .

    PRINTLN         reduce using rule 5 (impresiones -> PRINTLN PI expresiones PD PYC .)
    PRINT           reduce using rule 5 (impresiones -> PRINTLN PI expresiones PD PYC .)
    $end            reduce using rule 5 (impresiones -> PRINTLN PI expresiones PD PYC .)


state 18

    (6) impresiones -> PRINT PI expresiones PD PYC .

    PRINTLN         reduce using rule 6 (impresiones -> PRINT PI expresiones PD PYC .)
    PRINT           reduce using rule 6 (impresiones -> PRINT PI expresiones PD PYC .)
    $end            reduce using rule 6 (impresiones -> PRINT PI expresiones PD PYC .)

