Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    CAPACITY
    CD
    CI
    CONTAINS
    ERR
    FOR
    IN
    INSERT
    LEN
    MOD
    NEW
    PUSH
    REMOVE
    STRUCT
    VECT
    WCAPACITY

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> funcion
Rule 5     instruccion -> declaracion
Rule 6     instruccion -> asignacion
Rule 7     lista_bloque -> lista_bloque bloque
Rule 8     lista_bloque -> bloque
Rule 9     bloque -> impresiones PYC
Rule 10    bloque -> declaracion
Rule 11    bloque -> asignacion PYC
Rule 12    bloque -> llamada PYC
Rule 13    bloque -> start_match
Rule 14    bloque -> start_if
Rule 15    bloque -> start_while
Rule 16    bloque -> return_ins PYC
Rule 17    bloque -> break_ins PYC
Rule 18    bloque -> continue_ins PYC
Rule 19    bloque -> start_loop
Rule 20    bloque -> <empty>
Rule 21    bloque_match -> impresiones
Rule 22    bloque_match -> asignacion
Rule 23    bloque_match -> llamada
Rule 24    bloque_match -> start_match
Rule 25    bloque_match -> start_if
Rule 26    bloque_match -> start_while
Rule 27    bloque_match -> return_ins PYC
Rule 28    bloque_match -> start_loop
Rule 29    bloque_match -> <empty>
Rule 30    start_loop -> LOOP LI lista_bloque LD
Rule 31    continue_ins -> CONTINUE
Rule 32    break_ins -> BREAK
Rule 33    break_ins -> BREAK expresiones
Rule 34    return_ins -> RETURN
Rule 35    return_ins -> RETURN expresiones
Rule 36    start_while -> WHILE expresiones LI lista_bloque LD
Rule 37    list_exp_ins -> list_exp_ins bloque_exp
Rule 38    list_exp_ins -> bloque_exp
Rule 39    start_if -> IF expresiones LI list_exp_ins LD
Rule 40    start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
Rule 41    start_if -> IF expresiones LI list_exp_ins LD lista_elif
Rule 42    start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
Rule 43    lista_elif -> lista_elif else_if
Rule 44    lista_elif -> else_if
Rule 45    else_if -> ELSE IF expresiones LI list_exp_ins LD
Rule 46    start_match -> MATCH expresiones LI matches LD
Rule 47    matches -> matches bloque_match
Rule 48    matches -> bloque_match
Rule 49    bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA
Rule 50    bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD
Rule 51    simple_bloque_exp -> expresiones
Rule 52    simple_bloque_exp -> bloque_match
Rule 53    bloque_exp -> bloque
Rule 54    bloque_exp -> expresiones
Rule 55    varios_match -> varios_match BARRA expresiones
Rule 56    varios_match -> expresiones
Rule 57    varios_match -> GBAJO
Rule 58    llamada -> ID PI PD
Rule 59    llamada -> ID PI lista_expres PD
Rule 60    lista_expres -> lista_expres COMA expresiones
Rule 61    lista_expres -> expresiones
Rule 62    funcion -> FUNCION MAIN PI PD LI lista_bloque LD
Rule 63    funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD
Rule 64    funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD
Rule 65    parametros -> parametros COMA definiciones
Rule 66    parametros -> definiciones
Rule 67    definiciones -> referencias mutable ID VECTOR tipado_vector
Rule 68    definiciones -> referencias mutable ID tipado
Rule 69    referencias -> REFER
Rule 70    referencias -> <empty>
Rule 71    tipado_vector -> <empty>
Rule 72    acceso -> PUBLICO
Rule 73    acceso -> <empty>
Rule 74    tipo_funcion -> RESTA MAYOR tipo_datos
Rule 75    tipo_funcion -> RESTA MAYOR VECTOR MENOR tipo_datos MAYOR
Rule 76    tipo_funcion -> <empty>
Rule 77    declaracion -> LET mutable ID tipado PYC
Rule 78    declaracion -> LET mutable ID tipado IGUAL expresiones PYC
Rule 79    asignacion -> ID IGUAL expresiones
Rule 80    mutable -> MUT
Rule 81    mutable -> <empty>
Rule 82    tipado -> DP tipo_datos
Rule 83    tipado -> <empty>
Rule 84    tipo_datos -> TIPOINT
Rule 85    tipo_datos -> TIPOFLOAT
Rule 86    tipo_datos -> TIPOCHAR
Rule 87    tipo_datos -> TIPOSTRING
Rule 88    tipo_datos -> DIRSTRING
Rule 89    tipo_datos -> TIPOBOOL
Rule 90    impresiones -> PRINTLN PI CADENA PD
Rule 91    impresiones -> PRINT PI CADENA PD
Rule 92    impresiones -> PRINTLN PI CADENA COMA impresion_valores PD
Rule 93    impresiones -> PRINT PI CADENA COMA impresion_valores PD
Rule 94    impresion_valores -> impresion_valores COMA expresiones
Rule 95    impresion_valores -> expresiones
Rule 96    expresiones -> funcion_nativa
Rule 97    expresiones -> expre_logica
Rule 98    expresiones -> expre_relacional
Rule 99    expresiones -> expre_aritmetica
Rule 100   expresiones -> expre_valor
Rule 101   expresiones -> <empty>
Rule 102   expre_valor -> datos_cast
Rule 103   expre_valor -> start_match
Rule 104   expre_valor -> start_if
Rule 105   expre_valor -> start_loop
Rule 106   expre_valor -> llamada
Rule 107   funcion_nativa -> expresiones PUNTO nativas
Rule 108   nativas -> ABS
Rule 109   nativas -> SQRT
Rule 110   nativas -> TOSTRING
Rule 111   nativas -> TOOWNED
Rule 112   nativas -> CLONE
Rule 113   expre_logica -> expresiones OR expresiones
Rule 114   expre_logica -> expresiones AND expresiones
Rule 115   expre_logica -> NOT expresiones
Rule 116   expre_relacional -> expresiones MAYORIGUAL expresiones
Rule 117   expre_relacional -> expresiones MAYOR expresiones
Rule 118   expre_relacional -> expresiones MENORIGUAL expresiones
Rule 119   expre_relacional -> expresiones MENOR expresiones
Rule 120   expre_relacional -> expresiones IGUALDAD expresiones
Rule 121   expre_relacional -> expresiones DESIGUALDAD expresiones
Rule 122   expre_aritmetica -> RESTA expresiones
Rule 123   expre_aritmetica -> PI expresiones PD
Rule 124   expre_aritmetica -> expresiones RESTA expresiones
Rule 125   expre_aritmetica -> expresiones SUMA expresiones
Rule 126   expre_aritmetica -> expresiones MULTI expresiones
Rule 127   expre_aritmetica -> expresiones DIVI expresiones
Rule 128   expre_aritmetica -> expresiones MODULO expresiones
Rule 129   expre_aritmetica -> POWF PI expresiones COMA expresiones PD
Rule 130   expre_aritmetica -> POW PI expresiones COMA expresiones PD
Rule 131   datos_cast -> datos
Rule 132   datos -> ENTERO
Rule 133   datos -> FLOAT
Rule 134   datos -> CADENA
Rule 135   datos -> CARACTER
Rule 136   datos -> ID
Rule 137   datos -> TRUE
Rule 138   datos -> FALSE

Terminals, with rules where they appear

ABS                  : 108
AND                  : 114
AS                   : 
BARRA                : 55
BREAK                : 32 33
CADENA               : 90 91 92 93 134
CAPACITY             : 
CARACTER             : 135
CD                   : 
CI                   : 
CLONE                : 112
COMA                 : 49 60 65 92 93 94 129 130
CONTAINS             : 
CONTINUE             : 31
DESIGUALDAD          : 121
DIRSTRING            : 88
DIVI                 : 127
DP                   : 82
ELSE                 : 40 42 45
ENTERO               : 132
ERR                  : 
FALSE                : 138
FLOAT                : 133
FOR                  : 
FUNCION              : 62 63 64
GBAJO                : 57
ID                   : 58 59 63 64 67 68 77 78 79 136
IF                   : 39 40 41 42 45
IGUAL                : 49 50 78 79
IGUALDAD             : 120
IN                   : 
INSERT               : 
LD                   : 30 36 39 40 40 41 42 42 45 46 50 62 63 64
LEN                  : 
LET                  : 77 78
LI                   : 30 36 39 40 40 41 42 42 45 46 50 62 63 64
LOOP                 : 30
MAIN                 : 62
MATCH                : 46
MAYOR                : 49 50 74 75 75 117
MAYORIGUAL           : 116
MENOR                : 75 119
MENORIGUAL           : 118
MOD                  : 
MODULO               : 128
MULTI                : 126
MUT                  : 80
NEW                  : 
NOT                  : 115
OR                   : 113
PD                   : 58 59 62 63 64 90 91 92 93 123 129 130
PI                   : 58 59 62 63 64 90 91 92 93 123 129 130
POW                  : 130
POWF                 : 129
PRINT                : 91 93
PRINTLN              : 90 92
PUBLICO              : 72
PUNTO                : 107
PUSH                 : 
PYC                  : 9 11 12 16 17 18 27 77 78
REFER                : 69
REMOVE               : 
RESTA                : 74 75 122 124
RETURN               : 34 35
SQRT                 : 109
STRUCT               : 
SUMA                 : 125
TIPOBOOL             : 89
TIPOCHAR             : 86
TIPOFLOAT            : 85
TIPOINT              : 84
TIPOSTRING           : 87
TOOWNED              : 111
TOSTRING             : 110
TRUE                 : 137
VECT                 : 
VECTOR               : 67 75
WCAPACITY            : 
WHILE                : 36
error                : 

Nonterminals, with rules where they appear

acceso               : 
asignacion           : 6 11 22
bloque               : 7 8 53
bloque_exp           : 37 38
bloque_match         : 47 48 52
break_ins            : 17
continue_ins         : 18
datos                : 131
datos_cast           : 102
declaracion          : 5 10
definiciones         : 65 66
else_if              : 43 44
expre_aritmetica     : 99
expre_logica         : 97
expre_relacional     : 98
expre_valor          : 100
expresiones          : 33 35 36 39 40 41 42 45 46 51 54 55 56 60 61 78 79 94 95 107 113 113 114 114 115 116 116 117 117 118 118 119 119 120 120 121 121 122 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130
funcion              : 4
funcion_nativa       : 96
impresion_valores    : 92 93 94
impresiones          : 9 21
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
list_exp_ins         : 37 39 40 40 41 42 42 45 50
lista_bloque         : 7 30 36 62 63 64
lista_elif           : 41 42 43
lista_expres         : 59 60
llamada              : 12 23 106
matches              : 46 47
mutable              : 67 68 77 78
nativas              : 107
parametros           : 64 65
referencias          : 67 68
return_ins           : 16 27
simple_bloque_exp    : 49
start_if             : 14 25 104
start_loop           : 19 28 105
start_match          : 13 24 103
start_while          : 15 26
tipado               : 68 77 78
tipado_vector        : 67
tipo_datos           : 74 75 82
tipo_funcion         : 63 64
varios_match         : 49 50 55

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . funcion
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion
    (62) funcion -> . FUNCION MAIN PI PD LI lista_bloque LD
    (63) funcion -> . FUNCION ID PI PD tipo_funcion LI lista_bloque LD
    (64) funcion -> . FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones

    FUNCION         shift and go to state 7
    LET             shift and go to state 9
    ID              shift and go to state 8

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    funcion                        shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . funcion
    (5) instruccion -> . declaracion
    (6) instruccion -> . asignacion
    (62) funcion -> . FUNCION MAIN PI PD LI lista_bloque LD
    (63) funcion -> . FUNCION ID PI PD tipo_funcion LI lista_bloque LD
    (64) funcion -> . FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones

    $end            reduce using rule 1 (init -> instrucciones .)
    FUNCION         shift and go to state 7
    LET             shift and go to state 9
    ID              shift and go to state 8

    instruccion                    shift and go to state 10
    funcion                        shift and go to state 4
    declaracion                    shift and go to state 5
    asignacion                     shift and go to state 6

state 3

    (3) instrucciones -> instruccion .

    FUNCION         reduce using rule 3 (instrucciones -> instruccion .)
    LET             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> funcion .

    FUNCION         reduce using rule 4 (instruccion -> funcion .)
    LET             reduce using rule 4 (instruccion -> funcion .)
    ID              reduce using rule 4 (instruccion -> funcion .)
    $end            reduce using rule 4 (instruccion -> funcion .)


state 5

    (5) instruccion -> declaracion .

    FUNCION         reduce using rule 5 (instruccion -> declaracion .)
    LET             reduce using rule 5 (instruccion -> declaracion .)
    ID              reduce using rule 5 (instruccion -> declaracion .)
    $end            reduce using rule 5 (instruccion -> declaracion .)


state 6

    (6) instruccion -> asignacion .

    FUNCION         reduce using rule 6 (instruccion -> asignacion .)
    LET             reduce using rule 6 (instruccion -> asignacion .)
    ID              reduce using rule 6 (instruccion -> asignacion .)
    $end            reduce using rule 6 (instruccion -> asignacion .)


state 7

    (62) funcion -> FUNCION . MAIN PI PD LI lista_bloque LD
    (63) funcion -> FUNCION . ID PI PD tipo_funcion LI lista_bloque LD
    (64) funcion -> FUNCION . ID PI parametros PD tipo_funcion LI lista_bloque LD

    MAIN            shift and go to state 11
    ID              shift and go to state 12


state 8

    (79) asignacion -> ID . IGUAL expresiones

    IGUAL           shift and go to state 13


state 9

    (77) declaracion -> LET . mutable ID tipado PYC
    (78) declaracion -> LET . mutable ID tipado IGUAL expresiones PYC
    (80) mutable -> . MUT
    (81) mutable -> .

    MUT             shift and go to state 15
    ID              reduce using rule 81 (mutable -> .)

    mutable                        shift and go to state 14

state 10

    (2) instrucciones -> instrucciones instruccion .

    FUNCION         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LET             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 11

    (62) funcion -> FUNCION MAIN . PI PD LI lista_bloque LD

    PI              shift and go to state 16


state 12

    (63) funcion -> FUNCION ID . PI PD tipo_funcion LI lista_bloque LD
    (64) funcion -> FUNCION ID . PI parametros PD tipo_funcion LI lista_bloque LD

    PI              shift and go to state 17


state 13

    (79) asignacion -> ID IGUAL . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 19
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 14

    (77) declaracion -> LET mutable . ID tipado PYC
    (78) declaracion -> LET mutable . ID tipado IGUAL expresiones PYC

    ID              shift and go to state 45


state 15

    (80) mutable -> MUT .

    ID              reduce using rule 80 (mutable -> MUT .)


state 16

    (62) funcion -> FUNCION MAIN PI . PD LI lista_bloque LD

    PD              shift and go to state 46


state 17

    (63) funcion -> FUNCION ID PI . PD tipo_funcion LI lista_bloque LD
    (64) funcion -> FUNCION ID PI . parametros PD tipo_funcion LI lista_bloque LD
    (65) parametros -> . parametros COMA definiciones
    (66) parametros -> . definiciones
    (67) definiciones -> . referencias mutable ID VECTOR tipado_vector
    (68) definiciones -> . referencias mutable ID tipado
    (69) referencias -> . REFER
    (70) referencias -> .

    PD              shift and go to state 47
    REFER           shift and go to state 51
    MUT             reduce using rule 70 (referencias -> .)
    ID              reduce using rule 70 (referencias -> .)

    parametros                     shift and go to state 48
    definiciones                   shift and go to state 49
    referencias                    shift and go to state 50

state 18

    (58) llamada -> ID . PI PD
    (59) llamada -> ID . PI lista_expres PD
    (136) datos -> ID .

  ! shift/reduce conflict for PI resolved as shift
    PI              shift and go to state 52
    PUNTO           reduce using rule 136 (datos -> ID .)
    OR              reduce using rule 136 (datos -> ID .)
    AND             reduce using rule 136 (datos -> ID .)
    MAYORIGUAL      reduce using rule 136 (datos -> ID .)
    MAYOR           reduce using rule 136 (datos -> ID .)
    MENORIGUAL      reduce using rule 136 (datos -> ID .)
    MENOR           reduce using rule 136 (datos -> ID .)
    IGUALDAD        reduce using rule 136 (datos -> ID .)
    DESIGUALDAD     reduce using rule 136 (datos -> ID .)
    RESTA           reduce using rule 136 (datos -> ID .)
    SUMA            reduce using rule 136 (datos -> ID .)
    MULTI           reduce using rule 136 (datos -> ID .)
    DIVI            reduce using rule 136 (datos -> ID .)
    MODULO          reduce using rule 136 (datos -> ID .)
    FUNCION         reduce using rule 136 (datos -> ID .)
    LET             reduce using rule 136 (datos -> ID .)
    ID              reduce using rule 136 (datos -> ID .)
    $end            reduce using rule 136 (datos -> ID .)
    PYC             reduce using rule 136 (datos -> ID .)
    LD              reduce using rule 136 (datos -> ID .)
    PRINTLN         reduce using rule 136 (datos -> ID .)
    PRINT           reduce using rule 136 (datos -> ID .)
    MATCH           reduce using rule 136 (datos -> ID .)
    IF              reduce using rule 136 (datos -> ID .)
    WHILE           reduce using rule 136 (datos -> ID .)
    RETURN          reduce using rule 136 (datos -> ID .)
    LOOP            reduce using rule 136 (datos -> ID .)
    GBAJO           reduce using rule 136 (datos -> ID .)
    NOT             reduce using rule 136 (datos -> ID .)
    POWF            reduce using rule 136 (datos -> ID .)
    POW             reduce using rule 136 (datos -> ID .)
    ENTERO          reduce using rule 136 (datos -> ID .)
    FLOAT           reduce using rule 136 (datos -> ID .)
    CADENA          reduce using rule 136 (datos -> ID .)
    CARACTER        reduce using rule 136 (datos -> ID .)
    TRUE            reduce using rule 136 (datos -> ID .)
    FALSE           reduce using rule 136 (datos -> ID .)
    IGUAL           reduce using rule 136 (datos -> ID .)
    BARRA           reduce using rule 136 (datos -> ID .)
    COMA            reduce using rule 136 (datos -> ID .)
    PD              reduce using rule 136 (datos -> ID .)
    LI              reduce using rule 136 (datos -> ID .)
    BREAK           reduce using rule 136 (datos -> ID .)
    CONTINUE        reduce using rule 136 (datos -> ID .)

  ! PI              [ reduce using rule 136 (datos -> ID .) ]


state 19

    (79) asignacion -> ID IGUAL expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DESIGUALDAD resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIVI resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    FUNCION         reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    LET             reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    ID              reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    $end            reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    PYC             reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    LD              reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    PRINTLN         reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    PRINT           reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    MATCH           reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    IF              reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    WHILE           reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    RETURN          reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    LOOP            reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    GBAJO           reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    NOT             reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    PI              reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    POWF            reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    POW             reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    ENTERO          reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    FLOAT           reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    CADENA          reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    CARACTER        reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    TRUE            reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    FALSE           reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    IGUAL           reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    BARRA           reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    COMA            reduce using rule 79 (asignacion -> ID IGUAL expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! RESTA           [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! PUNTO           [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! OR              [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! AND             [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! MAYORIGUAL      [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! MAYOR           [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! MENORIGUAL      [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! MENOR           [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! IGUALDAD        [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! DESIGUALDAD     [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! SUMA            [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! MULTI           [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! DIVI            [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]
  ! MODULO          [ reduce using rule 79 (asignacion -> ID IGUAL expresiones .) ]


state 20

    (96) expresiones -> funcion_nativa .

    PUNTO           reduce using rule 96 (expresiones -> funcion_nativa .)
    OR              reduce using rule 96 (expresiones -> funcion_nativa .)
    AND             reduce using rule 96 (expresiones -> funcion_nativa .)
    MAYORIGUAL      reduce using rule 96 (expresiones -> funcion_nativa .)
    MAYOR           reduce using rule 96 (expresiones -> funcion_nativa .)
    MENORIGUAL      reduce using rule 96 (expresiones -> funcion_nativa .)
    MENOR           reduce using rule 96 (expresiones -> funcion_nativa .)
    IGUALDAD        reduce using rule 96 (expresiones -> funcion_nativa .)
    DESIGUALDAD     reduce using rule 96 (expresiones -> funcion_nativa .)
    RESTA           reduce using rule 96 (expresiones -> funcion_nativa .)
    SUMA            reduce using rule 96 (expresiones -> funcion_nativa .)
    MULTI           reduce using rule 96 (expresiones -> funcion_nativa .)
    DIVI            reduce using rule 96 (expresiones -> funcion_nativa .)
    MODULO          reduce using rule 96 (expresiones -> funcion_nativa .)
    FUNCION         reduce using rule 96 (expresiones -> funcion_nativa .)
    LET             reduce using rule 96 (expresiones -> funcion_nativa .)
    ID              reduce using rule 96 (expresiones -> funcion_nativa .)
    $end            reduce using rule 96 (expresiones -> funcion_nativa .)
    PYC             reduce using rule 96 (expresiones -> funcion_nativa .)
    LD              reduce using rule 96 (expresiones -> funcion_nativa .)
    PRINTLN         reduce using rule 96 (expresiones -> funcion_nativa .)
    PRINT           reduce using rule 96 (expresiones -> funcion_nativa .)
    MATCH           reduce using rule 96 (expresiones -> funcion_nativa .)
    IF              reduce using rule 96 (expresiones -> funcion_nativa .)
    WHILE           reduce using rule 96 (expresiones -> funcion_nativa .)
    RETURN          reduce using rule 96 (expresiones -> funcion_nativa .)
    LOOP            reduce using rule 96 (expresiones -> funcion_nativa .)
    GBAJO           reduce using rule 96 (expresiones -> funcion_nativa .)
    NOT             reduce using rule 96 (expresiones -> funcion_nativa .)
    PI              reduce using rule 96 (expresiones -> funcion_nativa .)
    POWF            reduce using rule 96 (expresiones -> funcion_nativa .)
    POW             reduce using rule 96 (expresiones -> funcion_nativa .)
    ENTERO          reduce using rule 96 (expresiones -> funcion_nativa .)
    FLOAT           reduce using rule 96 (expresiones -> funcion_nativa .)
    CADENA          reduce using rule 96 (expresiones -> funcion_nativa .)
    CARACTER        reduce using rule 96 (expresiones -> funcion_nativa .)
    TRUE            reduce using rule 96 (expresiones -> funcion_nativa .)
    FALSE           reduce using rule 96 (expresiones -> funcion_nativa .)
    IGUAL           reduce using rule 96 (expresiones -> funcion_nativa .)
    BARRA           reduce using rule 96 (expresiones -> funcion_nativa .)
    COMA            reduce using rule 96 (expresiones -> funcion_nativa .)
    PD              reduce using rule 96 (expresiones -> funcion_nativa .)
    LI              reduce using rule 96 (expresiones -> funcion_nativa .)
    BREAK           reduce using rule 96 (expresiones -> funcion_nativa .)
    CONTINUE        reduce using rule 96 (expresiones -> funcion_nativa .)


state 21

    (97) expresiones -> expre_logica .

    PUNTO           reduce using rule 97 (expresiones -> expre_logica .)
    OR              reduce using rule 97 (expresiones -> expre_logica .)
    AND             reduce using rule 97 (expresiones -> expre_logica .)
    MAYORIGUAL      reduce using rule 97 (expresiones -> expre_logica .)
    MAYOR           reduce using rule 97 (expresiones -> expre_logica .)
    MENORIGUAL      reduce using rule 97 (expresiones -> expre_logica .)
    MENOR           reduce using rule 97 (expresiones -> expre_logica .)
    IGUALDAD        reduce using rule 97 (expresiones -> expre_logica .)
    DESIGUALDAD     reduce using rule 97 (expresiones -> expre_logica .)
    RESTA           reduce using rule 97 (expresiones -> expre_logica .)
    SUMA            reduce using rule 97 (expresiones -> expre_logica .)
    MULTI           reduce using rule 97 (expresiones -> expre_logica .)
    DIVI            reduce using rule 97 (expresiones -> expre_logica .)
    MODULO          reduce using rule 97 (expresiones -> expre_logica .)
    FUNCION         reduce using rule 97 (expresiones -> expre_logica .)
    LET             reduce using rule 97 (expresiones -> expre_logica .)
    ID              reduce using rule 97 (expresiones -> expre_logica .)
    $end            reduce using rule 97 (expresiones -> expre_logica .)
    PYC             reduce using rule 97 (expresiones -> expre_logica .)
    LD              reduce using rule 97 (expresiones -> expre_logica .)
    PRINTLN         reduce using rule 97 (expresiones -> expre_logica .)
    PRINT           reduce using rule 97 (expresiones -> expre_logica .)
    MATCH           reduce using rule 97 (expresiones -> expre_logica .)
    IF              reduce using rule 97 (expresiones -> expre_logica .)
    WHILE           reduce using rule 97 (expresiones -> expre_logica .)
    RETURN          reduce using rule 97 (expresiones -> expre_logica .)
    LOOP            reduce using rule 97 (expresiones -> expre_logica .)
    GBAJO           reduce using rule 97 (expresiones -> expre_logica .)
    NOT             reduce using rule 97 (expresiones -> expre_logica .)
    PI              reduce using rule 97 (expresiones -> expre_logica .)
    POWF            reduce using rule 97 (expresiones -> expre_logica .)
    POW             reduce using rule 97 (expresiones -> expre_logica .)
    ENTERO          reduce using rule 97 (expresiones -> expre_logica .)
    FLOAT           reduce using rule 97 (expresiones -> expre_logica .)
    CADENA          reduce using rule 97 (expresiones -> expre_logica .)
    CARACTER        reduce using rule 97 (expresiones -> expre_logica .)
    TRUE            reduce using rule 97 (expresiones -> expre_logica .)
    FALSE           reduce using rule 97 (expresiones -> expre_logica .)
    IGUAL           reduce using rule 97 (expresiones -> expre_logica .)
    BARRA           reduce using rule 97 (expresiones -> expre_logica .)
    COMA            reduce using rule 97 (expresiones -> expre_logica .)
    PD              reduce using rule 97 (expresiones -> expre_logica .)
    LI              reduce using rule 97 (expresiones -> expre_logica .)
    BREAK           reduce using rule 97 (expresiones -> expre_logica .)
    CONTINUE        reduce using rule 97 (expresiones -> expre_logica .)


state 22

    (98) expresiones -> expre_relacional .

    PUNTO           reduce using rule 98 (expresiones -> expre_relacional .)
    OR              reduce using rule 98 (expresiones -> expre_relacional .)
    AND             reduce using rule 98 (expresiones -> expre_relacional .)
    MAYORIGUAL      reduce using rule 98 (expresiones -> expre_relacional .)
    MAYOR           reduce using rule 98 (expresiones -> expre_relacional .)
    MENORIGUAL      reduce using rule 98 (expresiones -> expre_relacional .)
    MENOR           reduce using rule 98 (expresiones -> expre_relacional .)
    IGUALDAD        reduce using rule 98 (expresiones -> expre_relacional .)
    DESIGUALDAD     reduce using rule 98 (expresiones -> expre_relacional .)
    RESTA           reduce using rule 98 (expresiones -> expre_relacional .)
    SUMA            reduce using rule 98 (expresiones -> expre_relacional .)
    MULTI           reduce using rule 98 (expresiones -> expre_relacional .)
    DIVI            reduce using rule 98 (expresiones -> expre_relacional .)
    MODULO          reduce using rule 98 (expresiones -> expre_relacional .)
    FUNCION         reduce using rule 98 (expresiones -> expre_relacional .)
    LET             reduce using rule 98 (expresiones -> expre_relacional .)
    ID              reduce using rule 98 (expresiones -> expre_relacional .)
    $end            reduce using rule 98 (expresiones -> expre_relacional .)
    PYC             reduce using rule 98 (expresiones -> expre_relacional .)
    LD              reduce using rule 98 (expresiones -> expre_relacional .)
    PRINTLN         reduce using rule 98 (expresiones -> expre_relacional .)
    PRINT           reduce using rule 98 (expresiones -> expre_relacional .)
    MATCH           reduce using rule 98 (expresiones -> expre_relacional .)
    IF              reduce using rule 98 (expresiones -> expre_relacional .)
    WHILE           reduce using rule 98 (expresiones -> expre_relacional .)
    RETURN          reduce using rule 98 (expresiones -> expre_relacional .)
    LOOP            reduce using rule 98 (expresiones -> expre_relacional .)
    GBAJO           reduce using rule 98 (expresiones -> expre_relacional .)
    NOT             reduce using rule 98 (expresiones -> expre_relacional .)
    PI              reduce using rule 98 (expresiones -> expre_relacional .)
    POWF            reduce using rule 98 (expresiones -> expre_relacional .)
    POW             reduce using rule 98 (expresiones -> expre_relacional .)
    ENTERO          reduce using rule 98 (expresiones -> expre_relacional .)
    FLOAT           reduce using rule 98 (expresiones -> expre_relacional .)
    CADENA          reduce using rule 98 (expresiones -> expre_relacional .)
    CARACTER        reduce using rule 98 (expresiones -> expre_relacional .)
    TRUE            reduce using rule 98 (expresiones -> expre_relacional .)
    FALSE           reduce using rule 98 (expresiones -> expre_relacional .)
    IGUAL           reduce using rule 98 (expresiones -> expre_relacional .)
    BARRA           reduce using rule 98 (expresiones -> expre_relacional .)
    COMA            reduce using rule 98 (expresiones -> expre_relacional .)
    PD              reduce using rule 98 (expresiones -> expre_relacional .)
    LI              reduce using rule 98 (expresiones -> expre_relacional .)
    BREAK           reduce using rule 98 (expresiones -> expre_relacional .)
    CONTINUE        reduce using rule 98 (expresiones -> expre_relacional .)


state 23

    (99) expresiones -> expre_aritmetica .

    PUNTO           reduce using rule 99 (expresiones -> expre_aritmetica .)
    OR              reduce using rule 99 (expresiones -> expre_aritmetica .)
    AND             reduce using rule 99 (expresiones -> expre_aritmetica .)
    MAYORIGUAL      reduce using rule 99 (expresiones -> expre_aritmetica .)
    MAYOR           reduce using rule 99 (expresiones -> expre_aritmetica .)
    MENORIGUAL      reduce using rule 99 (expresiones -> expre_aritmetica .)
    MENOR           reduce using rule 99 (expresiones -> expre_aritmetica .)
    IGUALDAD        reduce using rule 99 (expresiones -> expre_aritmetica .)
    DESIGUALDAD     reduce using rule 99 (expresiones -> expre_aritmetica .)
    RESTA           reduce using rule 99 (expresiones -> expre_aritmetica .)
    SUMA            reduce using rule 99 (expresiones -> expre_aritmetica .)
    MULTI           reduce using rule 99 (expresiones -> expre_aritmetica .)
    DIVI            reduce using rule 99 (expresiones -> expre_aritmetica .)
    MODULO          reduce using rule 99 (expresiones -> expre_aritmetica .)
    FUNCION         reduce using rule 99 (expresiones -> expre_aritmetica .)
    LET             reduce using rule 99 (expresiones -> expre_aritmetica .)
    ID              reduce using rule 99 (expresiones -> expre_aritmetica .)
    $end            reduce using rule 99 (expresiones -> expre_aritmetica .)
    PYC             reduce using rule 99 (expresiones -> expre_aritmetica .)
    LD              reduce using rule 99 (expresiones -> expre_aritmetica .)
    PRINTLN         reduce using rule 99 (expresiones -> expre_aritmetica .)
    PRINT           reduce using rule 99 (expresiones -> expre_aritmetica .)
    MATCH           reduce using rule 99 (expresiones -> expre_aritmetica .)
    IF              reduce using rule 99 (expresiones -> expre_aritmetica .)
    WHILE           reduce using rule 99 (expresiones -> expre_aritmetica .)
    RETURN          reduce using rule 99 (expresiones -> expre_aritmetica .)
    LOOP            reduce using rule 99 (expresiones -> expre_aritmetica .)
    GBAJO           reduce using rule 99 (expresiones -> expre_aritmetica .)
    NOT             reduce using rule 99 (expresiones -> expre_aritmetica .)
    PI              reduce using rule 99 (expresiones -> expre_aritmetica .)
    POWF            reduce using rule 99 (expresiones -> expre_aritmetica .)
    POW             reduce using rule 99 (expresiones -> expre_aritmetica .)
    ENTERO          reduce using rule 99 (expresiones -> expre_aritmetica .)
    FLOAT           reduce using rule 99 (expresiones -> expre_aritmetica .)
    CADENA          reduce using rule 99 (expresiones -> expre_aritmetica .)
    CARACTER        reduce using rule 99 (expresiones -> expre_aritmetica .)
    TRUE            reduce using rule 99 (expresiones -> expre_aritmetica .)
    FALSE           reduce using rule 99 (expresiones -> expre_aritmetica .)
    IGUAL           reduce using rule 99 (expresiones -> expre_aritmetica .)
    BARRA           reduce using rule 99 (expresiones -> expre_aritmetica .)
    COMA            reduce using rule 99 (expresiones -> expre_aritmetica .)
    PD              reduce using rule 99 (expresiones -> expre_aritmetica .)
    LI              reduce using rule 99 (expresiones -> expre_aritmetica .)
    BREAK           reduce using rule 99 (expresiones -> expre_aritmetica .)
    CONTINUE        reduce using rule 99 (expresiones -> expre_aritmetica .)


state 24

    (100) expresiones -> expre_valor .

    PUNTO           reduce using rule 100 (expresiones -> expre_valor .)
    OR              reduce using rule 100 (expresiones -> expre_valor .)
    AND             reduce using rule 100 (expresiones -> expre_valor .)
    MAYORIGUAL      reduce using rule 100 (expresiones -> expre_valor .)
    MAYOR           reduce using rule 100 (expresiones -> expre_valor .)
    MENORIGUAL      reduce using rule 100 (expresiones -> expre_valor .)
    MENOR           reduce using rule 100 (expresiones -> expre_valor .)
    IGUALDAD        reduce using rule 100 (expresiones -> expre_valor .)
    DESIGUALDAD     reduce using rule 100 (expresiones -> expre_valor .)
    RESTA           reduce using rule 100 (expresiones -> expre_valor .)
    SUMA            reduce using rule 100 (expresiones -> expre_valor .)
    MULTI           reduce using rule 100 (expresiones -> expre_valor .)
    DIVI            reduce using rule 100 (expresiones -> expre_valor .)
    MODULO          reduce using rule 100 (expresiones -> expre_valor .)
    FUNCION         reduce using rule 100 (expresiones -> expre_valor .)
    LET             reduce using rule 100 (expresiones -> expre_valor .)
    ID              reduce using rule 100 (expresiones -> expre_valor .)
    $end            reduce using rule 100 (expresiones -> expre_valor .)
    PYC             reduce using rule 100 (expresiones -> expre_valor .)
    LD              reduce using rule 100 (expresiones -> expre_valor .)
    PRINTLN         reduce using rule 100 (expresiones -> expre_valor .)
    PRINT           reduce using rule 100 (expresiones -> expre_valor .)
    MATCH           reduce using rule 100 (expresiones -> expre_valor .)
    IF              reduce using rule 100 (expresiones -> expre_valor .)
    WHILE           reduce using rule 100 (expresiones -> expre_valor .)
    RETURN          reduce using rule 100 (expresiones -> expre_valor .)
    LOOP            reduce using rule 100 (expresiones -> expre_valor .)
    GBAJO           reduce using rule 100 (expresiones -> expre_valor .)
    NOT             reduce using rule 100 (expresiones -> expre_valor .)
    PI              reduce using rule 100 (expresiones -> expre_valor .)
    POWF            reduce using rule 100 (expresiones -> expre_valor .)
    POW             reduce using rule 100 (expresiones -> expre_valor .)
    ENTERO          reduce using rule 100 (expresiones -> expre_valor .)
    FLOAT           reduce using rule 100 (expresiones -> expre_valor .)
    CADENA          reduce using rule 100 (expresiones -> expre_valor .)
    CARACTER        reduce using rule 100 (expresiones -> expre_valor .)
    TRUE            reduce using rule 100 (expresiones -> expre_valor .)
    FALSE           reduce using rule 100 (expresiones -> expre_valor .)
    IGUAL           reduce using rule 100 (expresiones -> expre_valor .)
    BARRA           reduce using rule 100 (expresiones -> expre_valor .)
    COMA            reduce using rule 100 (expresiones -> expre_valor .)
    PD              reduce using rule 100 (expresiones -> expre_valor .)
    LI              reduce using rule 100 (expresiones -> expre_valor .)
    BREAK           reduce using rule 100 (expresiones -> expre_valor .)
    CONTINUE        reduce using rule 100 (expresiones -> expre_valor .)


state 25

    (115) expre_logica -> NOT . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 67
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 26

    (122) expre_aritmetica -> RESTA . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 68
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 27

    (123) expre_aritmetica -> PI . expresiones PD
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PD              reduce using rule 101 (expresiones -> .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 69
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 28

    (129) expre_aritmetica -> POWF . PI expresiones COMA expresiones PD

    PI              shift and go to state 70


state 29

    (130) expre_aritmetica -> POW . PI expresiones COMA expresiones PD

    PI              shift and go to state 71


state 30

    (102) expre_valor -> datos_cast .

    PUNTO           reduce using rule 102 (expre_valor -> datos_cast .)
    OR              reduce using rule 102 (expre_valor -> datos_cast .)
    AND             reduce using rule 102 (expre_valor -> datos_cast .)
    MAYORIGUAL      reduce using rule 102 (expre_valor -> datos_cast .)
    MAYOR           reduce using rule 102 (expre_valor -> datos_cast .)
    MENORIGUAL      reduce using rule 102 (expre_valor -> datos_cast .)
    MENOR           reduce using rule 102 (expre_valor -> datos_cast .)
    IGUALDAD        reduce using rule 102 (expre_valor -> datos_cast .)
    DESIGUALDAD     reduce using rule 102 (expre_valor -> datos_cast .)
    RESTA           reduce using rule 102 (expre_valor -> datos_cast .)
    SUMA            reduce using rule 102 (expre_valor -> datos_cast .)
    MULTI           reduce using rule 102 (expre_valor -> datos_cast .)
    DIVI            reduce using rule 102 (expre_valor -> datos_cast .)
    MODULO          reduce using rule 102 (expre_valor -> datos_cast .)
    FUNCION         reduce using rule 102 (expre_valor -> datos_cast .)
    LET             reduce using rule 102 (expre_valor -> datos_cast .)
    ID              reduce using rule 102 (expre_valor -> datos_cast .)
    $end            reduce using rule 102 (expre_valor -> datos_cast .)
    PYC             reduce using rule 102 (expre_valor -> datos_cast .)
    LD              reduce using rule 102 (expre_valor -> datos_cast .)
    PRINTLN         reduce using rule 102 (expre_valor -> datos_cast .)
    PRINT           reduce using rule 102 (expre_valor -> datos_cast .)
    MATCH           reduce using rule 102 (expre_valor -> datos_cast .)
    IF              reduce using rule 102 (expre_valor -> datos_cast .)
    WHILE           reduce using rule 102 (expre_valor -> datos_cast .)
    RETURN          reduce using rule 102 (expre_valor -> datos_cast .)
    LOOP            reduce using rule 102 (expre_valor -> datos_cast .)
    GBAJO           reduce using rule 102 (expre_valor -> datos_cast .)
    NOT             reduce using rule 102 (expre_valor -> datos_cast .)
    PI              reduce using rule 102 (expre_valor -> datos_cast .)
    POWF            reduce using rule 102 (expre_valor -> datos_cast .)
    POW             reduce using rule 102 (expre_valor -> datos_cast .)
    ENTERO          reduce using rule 102 (expre_valor -> datos_cast .)
    FLOAT           reduce using rule 102 (expre_valor -> datos_cast .)
    CADENA          reduce using rule 102 (expre_valor -> datos_cast .)
    CARACTER        reduce using rule 102 (expre_valor -> datos_cast .)
    TRUE            reduce using rule 102 (expre_valor -> datos_cast .)
    FALSE           reduce using rule 102 (expre_valor -> datos_cast .)
    IGUAL           reduce using rule 102 (expre_valor -> datos_cast .)
    BARRA           reduce using rule 102 (expre_valor -> datos_cast .)
    COMA            reduce using rule 102 (expre_valor -> datos_cast .)
    PD              reduce using rule 102 (expre_valor -> datos_cast .)
    LI              reduce using rule 102 (expre_valor -> datos_cast .)
    BREAK           reduce using rule 102 (expre_valor -> datos_cast .)
    CONTINUE        reduce using rule 102 (expre_valor -> datos_cast .)


state 31

    (103) expre_valor -> start_match .

    PUNTO           reduce using rule 103 (expre_valor -> start_match .)
    OR              reduce using rule 103 (expre_valor -> start_match .)
    AND             reduce using rule 103 (expre_valor -> start_match .)
    MAYORIGUAL      reduce using rule 103 (expre_valor -> start_match .)
    MAYOR           reduce using rule 103 (expre_valor -> start_match .)
    MENORIGUAL      reduce using rule 103 (expre_valor -> start_match .)
    MENOR           reduce using rule 103 (expre_valor -> start_match .)
    IGUALDAD        reduce using rule 103 (expre_valor -> start_match .)
    DESIGUALDAD     reduce using rule 103 (expre_valor -> start_match .)
    RESTA           reduce using rule 103 (expre_valor -> start_match .)
    SUMA            reduce using rule 103 (expre_valor -> start_match .)
    MULTI           reduce using rule 103 (expre_valor -> start_match .)
    DIVI            reduce using rule 103 (expre_valor -> start_match .)
    MODULO          reduce using rule 103 (expre_valor -> start_match .)
    FUNCION         reduce using rule 103 (expre_valor -> start_match .)
    LET             reduce using rule 103 (expre_valor -> start_match .)
    ID              reduce using rule 103 (expre_valor -> start_match .)
    $end            reduce using rule 103 (expre_valor -> start_match .)
    PYC             reduce using rule 103 (expre_valor -> start_match .)
    LD              reduce using rule 103 (expre_valor -> start_match .)
    PRINTLN         reduce using rule 103 (expre_valor -> start_match .)
    PRINT           reduce using rule 103 (expre_valor -> start_match .)
    MATCH           reduce using rule 103 (expre_valor -> start_match .)
    IF              reduce using rule 103 (expre_valor -> start_match .)
    WHILE           reduce using rule 103 (expre_valor -> start_match .)
    RETURN          reduce using rule 103 (expre_valor -> start_match .)
    LOOP            reduce using rule 103 (expre_valor -> start_match .)
    GBAJO           reduce using rule 103 (expre_valor -> start_match .)
    NOT             reduce using rule 103 (expre_valor -> start_match .)
    PI              reduce using rule 103 (expre_valor -> start_match .)
    POWF            reduce using rule 103 (expre_valor -> start_match .)
    POW             reduce using rule 103 (expre_valor -> start_match .)
    ENTERO          reduce using rule 103 (expre_valor -> start_match .)
    FLOAT           reduce using rule 103 (expre_valor -> start_match .)
    CADENA          reduce using rule 103 (expre_valor -> start_match .)
    CARACTER        reduce using rule 103 (expre_valor -> start_match .)
    TRUE            reduce using rule 103 (expre_valor -> start_match .)
    FALSE           reduce using rule 103 (expre_valor -> start_match .)
    IGUAL           reduce using rule 103 (expre_valor -> start_match .)
    BARRA           reduce using rule 103 (expre_valor -> start_match .)
    COMA            reduce using rule 103 (expre_valor -> start_match .)
    PD              reduce using rule 103 (expre_valor -> start_match .)
    LI              reduce using rule 103 (expre_valor -> start_match .)
    BREAK           reduce using rule 103 (expre_valor -> start_match .)
    CONTINUE        reduce using rule 103 (expre_valor -> start_match .)


state 32

    (104) expre_valor -> start_if .

    PUNTO           reduce using rule 104 (expre_valor -> start_if .)
    OR              reduce using rule 104 (expre_valor -> start_if .)
    AND             reduce using rule 104 (expre_valor -> start_if .)
    MAYORIGUAL      reduce using rule 104 (expre_valor -> start_if .)
    MAYOR           reduce using rule 104 (expre_valor -> start_if .)
    MENORIGUAL      reduce using rule 104 (expre_valor -> start_if .)
    MENOR           reduce using rule 104 (expre_valor -> start_if .)
    IGUALDAD        reduce using rule 104 (expre_valor -> start_if .)
    DESIGUALDAD     reduce using rule 104 (expre_valor -> start_if .)
    RESTA           reduce using rule 104 (expre_valor -> start_if .)
    SUMA            reduce using rule 104 (expre_valor -> start_if .)
    MULTI           reduce using rule 104 (expre_valor -> start_if .)
    DIVI            reduce using rule 104 (expre_valor -> start_if .)
    MODULO          reduce using rule 104 (expre_valor -> start_if .)
    FUNCION         reduce using rule 104 (expre_valor -> start_if .)
    LET             reduce using rule 104 (expre_valor -> start_if .)
    ID              reduce using rule 104 (expre_valor -> start_if .)
    $end            reduce using rule 104 (expre_valor -> start_if .)
    PYC             reduce using rule 104 (expre_valor -> start_if .)
    LD              reduce using rule 104 (expre_valor -> start_if .)
    PRINTLN         reduce using rule 104 (expre_valor -> start_if .)
    PRINT           reduce using rule 104 (expre_valor -> start_if .)
    MATCH           reduce using rule 104 (expre_valor -> start_if .)
    IF              reduce using rule 104 (expre_valor -> start_if .)
    WHILE           reduce using rule 104 (expre_valor -> start_if .)
    RETURN          reduce using rule 104 (expre_valor -> start_if .)
    LOOP            reduce using rule 104 (expre_valor -> start_if .)
    GBAJO           reduce using rule 104 (expre_valor -> start_if .)
    NOT             reduce using rule 104 (expre_valor -> start_if .)
    PI              reduce using rule 104 (expre_valor -> start_if .)
    POWF            reduce using rule 104 (expre_valor -> start_if .)
    POW             reduce using rule 104 (expre_valor -> start_if .)
    ENTERO          reduce using rule 104 (expre_valor -> start_if .)
    FLOAT           reduce using rule 104 (expre_valor -> start_if .)
    CADENA          reduce using rule 104 (expre_valor -> start_if .)
    CARACTER        reduce using rule 104 (expre_valor -> start_if .)
    TRUE            reduce using rule 104 (expre_valor -> start_if .)
    FALSE           reduce using rule 104 (expre_valor -> start_if .)
    IGUAL           reduce using rule 104 (expre_valor -> start_if .)
    BARRA           reduce using rule 104 (expre_valor -> start_if .)
    COMA            reduce using rule 104 (expre_valor -> start_if .)
    PD              reduce using rule 104 (expre_valor -> start_if .)
    LI              reduce using rule 104 (expre_valor -> start_if .)
    BREAK           reduce using rule 104 (expre_valor -> start_if .)
    CONTINUE        reduce using rule 104 (expre_valor -> start_if .)


state 33

    (105) expre_valor -> start_loop .

    PUNTO           reduce using rule 105 (expre_valor -> start_loop .)
    OR              reduce using rule 105 (expre_valor -> start_loop .)
    AND             reduce using rule 105 (expre_valor -> start_loop .)
    MAYORIGUAL      reduce using rule 105 (expre_valor -> start_loop .)
    MAYOR           reduce using rule 105 (expre_valor -> start_loop .)
    MENORIGUAL      reduce using rule 105 (expre_valor -> start_loop .)
    MENOR           reduce using rule 105 (expre_valor -> start_loop .)
    IGUALDAD        reduce using rule 105 (expre_valor -> start_loop .)
    DESIGUALDAD     reduce using rule 105 (expre_valor -> start_loop .)
    RESTA           reduce using rule 105 (expre_valor -> start_loop .)
    SUMA            reduce using rule 105 (expre_valor -> start_loop .)
    MULTI           reduce using rule 105 (expre_valor -> start_loop .)
    DIVI            reduce using rule 105 (expre_valor -> start_loop .)
    MODULO          reduce using rule 105 (expre_valor -> start_loop .)
    FUNCION         reduce using rule 105 (expre_valor -> start_loop .)
    LET             reduce using rule 105 (expre_valor -> start_loop .)
    ID              reduce using rule 105 (expre_valor -> start_loop .)
    $end            reduce using rule 105 (expre_valor -> start_loop .)
    PYC             reduce using rule 105 (expre_valor -> start_loop .)
    LD              reduce using rule 105 (expre_valor -> start_loop .)
    PRINTLN         reduce using rule 105 (expre_valor -> start_loop .)
    PRINT           reduce using rule 105 (expre_valor -> start_loop .)
    MATCH           reduce using rule 105 (expre_valor -> start_loop .)
    IF              reduce using rule 105 (expre_valor -> start_loop .)
    WHILE           reduce using rule 105 (expre_valor -> start_loop .)
    RETURN          reduce using rule 105 (expre_valor -> start_loop .)
    LOOP            reduce using rule 105 (expre_valor -> start_loop .)
    GBAJO           reduce using rule 105 (expre_valor -> start_loop .)
    NOT             reduce using rule 105 (expre_valor -> start_loop .)
    PI              reduce using rule 105 (expre_valor -> start_loop .)
    POWF            reduce using rule 105 (expre_valor -> start_loop .)
    POW             reduce using rule 105 (expre_valor -> start_loop .)
    ENTERO          reduce using rule 105 (expre_valor -> start_loop .)
    FLOAT           reduce using rule 105 (expre_valor -> start_loop .)
    CADENA          reduce using rule 105 (expre_valor -> start_loop .)
    CARACTER        reduce using rule 105 (expre_valor -> start_loop .)
    TRUE            reduce using rule 105 (expre_valor -> start_loop .)
    FALSE           reduce using rule 105 (expre_valor -> start_loop .)
    IGUAL           reduce using rule 105 (expre_valor -> start_loop .)
    BARRA           reduce using rule 105 (expre_valor -> start_loop .)
    COMA            reduce using rule 105 (expre_valor -> start_loop .)
    PD              reduce using rule 105 (expre_valor -> start_loop .)
    LI              reduce using rule 105 (expre_valor -> start_loop .)
    BREAK           reduce using rule 105 (expre_valor -> start_loop .)
    CONTINUE        reduce using rule 105 (expre_valor -> start_loop .)


state 34

    (106) expre_valor -> llamada .

    PUNTO           reduce using rule 106 (expre_valor -> llamada .)
    OR              reduce using rule 106 (expre_valor -> llamada .)
    AND             reduce using rule 106 (expre_valor -> llamada .)
    MAYORIGUAL      reduce using rule 106 (expre_valor -> llamada .)
    MAYOR           reduce using rule 106 (expre_valor -> llamada .)
    MENORIGUAL      reduce using rule 106 (expre_valor -> llamada .)
    MENOR           reduce using rule 106 (expre_valor -> llamada .)
    IGUALDAD        reduce using rule 106 (expre_valor -> llamada .)
    DESIGUALDAD     reduce using rule 106 (expre_valor -> llamada .)
    RESTA           reduce using rule 106 (expre_valor -> llamada .)
    SUMA            reduce using rule 106 (expre_valor -> llamada .)
    MULTI           reduce using rule 106 (expre_valor -> llamada .)
    DIVI            reduce using rule 106 (expre_valor -> llamada .)
    MODULO          reduce using rule 106 (expre_valor -> llamada .)
    FUNCION         reduce using rule 106 (expre_valor -> llamada .)
    LET             reduce using rule 106 (expre_valor -> llamada .)
    ID              reduce using rule 106 (expre_valor -> llamada .)
    $end            reduce using rule 106 (expre_valor -> llamada .)
    PYC             reduce using rule 106 (expre_valor -> llamada .)
    LD              reduce using rule 106 (expre_valor -> llamada .)
    PRINTLN         reduce using rule 106 (expre_valor -> llamada .)
    PRINT           reduce using rule 106 (expre_valor -> llamada .)
    MATCH           reduce using rule 106 (expre_valor -> llamada .)
    IF              reduce using rule 106 (expre_valor -> llamada .)
    WHILE           reduce using rule 106 (expre_valor -> llamada .)
    RETURN          reduce using rule 106 (expre_valor -> llamada .)
    LOOP            reduce using rule 106 (expre_valor -> llamada .)
    GBAJO           reduce using rule 106 (expre_valor -> llamada .)
    NOT             reduce using rule 106 (expre_valor -> llamada .)
    PI              reduce using rule 106 (expre_valor -> llamada .)
    POWF            reduce using rule 106 (expre_valor -> llamada .)
    POW             reduce using rule 106 (expre_valor -> llamada .)
    ENTERO          reduce using rule 106 (expre_valor -> llamada .)
    FLOAT           reduce using rule 106 (expre_valor -> llamada .)
    CADENA          reduce using rule 106 (expre_valor -> llamada .)
    CARACTER        reduce using rule 106 (expre_valor -> llamada .)
    TRUE            reduce using rule 106 (expre_valor -> llamada .)
    FALSE           reduce using rule 106 (expre_valor -> llamada .)
    IGUAL           reduce using rule 106 (expre_valor -> llamada .)
    BARRA           reduce using rule 106 (expre_valor -> llamada .)
    COMA            reduce using rule 106 (expre_valor -> llamada .)
    PD              reduce using rule 106 (expre_valor -> llamada .)
    LI              reduce using rule 106 (expre_valor -> llamada .)
    BREAK           reduce using rule 106 (expre_valor -> llamada .)
    CONTINUE        reduce using rule 106 (expre_valor -> llamada .)


state 35

    (131) datos_cast -> datos .

    PUNTO           reduce using rule 131 (datos_cast -> datos .)
    OR              reduce using rule 131 (datos_cast -> datos .)
    AND             reduce using rule 131 (datos_cast -> datos .)
    MAYORIGUAL      reduce using rule 131 (datos_cast -> datos .)
    MAYOR           reduce using rule 131 (datos_cast -> datos .)
    MENORIGUAL      reduce using rule 131 (datos_cast -> datos .)
    MENOR           reduce using rule 131 (datos_cast -> datos .)
    IGUALDAD        reduce using rule 131 (datos_cast -> datos .)
    DESIGUALDAD     reduce using rule 131 (datos_cast -> datos .)
    RESTA           reduce using rule 131 (datos_cast -> datos .)
    SUMA            reduce using rule 131 (datos_cast -> datos .)
    MULTI           reduce using rule 131 (datos_cast -> datos .)
    DIVI            reduce using rule 131 (datos_cast -> datos .)
    MODULO          reduce using rule 131 (datos_cast -> datos .)
    FUNCION         reduce using rule 131 (datos_cast -> datos .)
    LET             reduce using rule 131 (datos_cast -> datos .)
    ID              reduce using rule 131 (datos_cast -> datos .)
    $end            reduce using rule 131 (datos_cast -> datos .)
    PYC             reduce using rule 131 (datos_cast -> datos .)
    LD              reduce using rule 131 (datos_cast -> datos .)
    PRINTLN         reduce using rule 131 (datos_cast -> datos .)
    PRINT           reduce using rule 131 (datos_cast -> datos .)
    MATCH           reduce using rule 131 (datos_cast -> datos .)
    IF              reduce using rule 131 (datos_cast -> datos .)
    WHILE           reduce using rule 131 (datos_cast -> datos .)
    RETURN          reduce using rule 131 (datos_cast -> datos .)
    LOOP            reduce using rule 131 (datos_cast -> datos .)
    GBAJO           reduce using rule 131 (datos_cast -> datos .)
    NOT             reduce using rule 131 (datos_cast -> datos .)
    PI              reduce using rule 131 (datos_cast -> datos .)
    POWF            reduce using rule 131 (datos_cast -> datos .)
    POW             reduce using rule 131 (datos_cast -> datos .)
    ENTERO          reduce using rule 131 (datos_cast -> datos .)
    FLOAT           reduce using rule 131 (datos_cast -> datos .)
    CADENA          reduce using rule 131 (datos_cast -> datos .)
    CARACTER        reduce using rule 131 (datos_cast -> datos .)
    TRUE            reduce using rule 131 (datos_cast -> datos .)
    FALSE           reduce using rule 131 (datos_cast -> datos .)
    IGUAL           reduce using rule 131 (datos_cast -> datos .)
    BARRA           reduce using rule 131 (datos_cast -> datos .)
    COMA            reduce using rule 131 (datos_cast -> datos .)
    PD              reduce using rule 131 (datos_cast -> datos .)
    LI              reduce using rule 131 (datos_cast -> datos .)
    BREAK           reduce using rule 131 (datos_cast -> datos .)
    CONTINUE        reduce using rule 131 (datos_cast -> datos .)


state 36

    (46) start_match -> MATCH . expresiones LI matches LD
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    LI              reduce using rule 101 (expresiones -> .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 72
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 37

    (39) start_if -> IF . expresiones LI list_exp_ins LD
    (40) start_if -> IF . expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> IF . expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> IF . expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    LI              reduce using rule 101 (expresiones -> .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 73
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 38

    (30) start_loop -> LOOP . LI lista_bloque LD

    LI              shift and go to state 74


state 39

    (132) datos -> ENTERO .

    PUNTO           reduce using rule 132 (datos -> ENTERO .)
    OR              reduce using rule 132 (datos -> ENTERO .)
    AND             reduce using rule 132 (datos -> ENTERO .)
    MAYORIGUAL      reduce using rule 132 (datos -> ENTERO .)
    MAYOR           reduce using rule 132 (datos -> ENTERO .)
    MENORIGUAL      reduce using rule 132 (datos -> ENTERO .)
    MENOR           reduce using rule 132 (datos -> ENTERO .)
    IGUALDAD        reduce using rule 132 (datos -> ENTERO .)
    DESIGUALDAD     reduce using rule 132 (datos -> ENTERO .)
    RESTA           reduce using rule 132 (datos -> ENTERO .)
    SUMA            reduce using rule 132 (datos -> ENTERO .)
    MULTI           reduce using rule 132 (datos -> ENTERO .)
    DIVI            reduce using rule 132 (datos -> ENTERO .)
    MODULO          reduce using rule 132 (datos -> ENTERO .)
    FUNCION         reduce using rule 132 (datos -> ENTERO .)
    LET             reduce using rule 132 (datos -> ENTERO .)
    ID              reduce using rule 132 (datos -> ENTERO .)
    $end            reduce using rule 132 (datos -> ENTERO .)
    PYC             reduce using rule 132 (datos -> ENTERO .)
    LD              reduce using rule 132 (datos -> ENTERO .)
    PRINTLN         reduce using rule 132 (datos -> ENTERO .)
    PRINT           reduce using rule 132 (datos -> ENTERO .)
    MATCH           reduce using rule 132 (datos -> ENTERO .)
    IF              reduce using rule 132 (datos -> ENTERO .)
    WHILE           reduce using rule 132 (datos -> ENTERO .)
    RETURN          reduce using rule 132 (datos -> ENTERO .)
    LOOP            reduce using rule 132 (datos -> ENTERO .)
    GBAJO           reduce using rule 132 (datos -> ENTERO .)
    NOT             reduce using rule 132 (datos -> ENTERO .)
    PI              reduce using rule 132 (datos -> ENTERO .)
    POWF            reduce using rule 132 (datos -> ENTERO .)
    POW             reduce using rule 132 (datos -> ENTERO .)
    ENTERO          reduce using rule 132 (datos -> ENTERO .)
    FLOAT           reduce using rule 132 (datos -> ENTERO .)
    CADENA          reduce using rule 132 (datos -> ENTERO .)
    CARACTER        reduce using rule 132 (datos -> ENTERO .)
    TRUE            reduce using rule 132 (datos -> ENTERO .)
    FALSE           reduce using rule 132 (datos -> ENTERO .)
    IGUAL           reduce using rule 132 (datos -> ENTERO .)
    BARRA           reduce using rule 132 (datos -> ENTERO .)
    COMA            reduce using rule 132 (datos -> ENTERO .)
    PD              reduce using rule 132 (datos -> ENTERO .)
    LI              reduce using rule 132 (datos -> ENTERO .)
    BREAK           reduce using rule 132 (datos -> ENTERO .)
    CONTINUE        reduce using rule 132 (datos -> ENTERO .)


state 40

    (133) datos -> FLOAT .

    PUNTO           reduce using rule 133 (datos -> FLOAT .)
    OR              reduce using rule 133 (datos -> FLOAT .)
    AND             reduce using rule 133 (datos -> FLOAT .)
    MAYORIGUAL      reduce using rule 133 (datos -> FLOAT .)
    MAYOR           reduce using rule 133 (datos -> FLOAT .)
    MENORIGUAL      reduce using rule 133 (datos -> FLOAT .)
    MENOR           reduce using rule 133 (datos -> FLOAT .)
    IGUALDAD        reduce using rule 133 (datos -> FLOAT .)
    DESIGUALDAD     reduce using rule 133 (datos -> FLOAT .)
    RESTA           reduce using rule 133 (datos -> FLOAT .)
    SUMA            reduce using rule 133 (datos -> FLOAT .)
    MULTI           reduce using rule 133 (datos -> FLOAT .)
    DIVI            reduce using rule 133 (datos -> FLOAT .)
    MODULO          reduce using rule 133 (datos -> FLOAT .)
    FUNCION         reduce using rule 133 (datos -> FLOAT .)
    LET             reduce using rule 133 (datos -> FLOAT .)
    ID              reduce using rule 133 (datos -> FLOAT .)
    $end            reduce using rule 133 (datos -> FLOAT .)
    PYC             reduce using rule 133 (datos -> FLOAT .)
    LD              reduce using rule 133 (datos -> FLOAT .)
    PRINTLN         reduce using rule 133 (datos -> FLOAT .)
    PRINT           reduce using rule 133 (datos -> FLOAT .)
    MATCH           reduce using rule 133 (datos -> FLOAT .)
    IF              reduce using rule 133 (datos -> FLOAT .)
    WHILE           reduce using rule 133 (datos -> FLOAT .)
    RETURN          reduce using rule 133 (datos -> FLOAT .)
    LOOP            reduce using rule 133 (datos -> FLOAT .)
    GBAJO           reduce using rule 133 (datos -> FLOAT .)
    NOT             reduce using rule 133 (datos -> FLOAT .)
    PI              reduce using rule 133 (datos -> FLOAT .)
    POWF            reduce using rule 133 (datos -> FLOAT .)
    POW             reduce using rule 133 (datos -> FLOAT .)
    ENTERO          reduce using rule 133 (datos -> FLOAT .)
    FLOAT           reduce using rule 133 (datos -> FLOAT .)
    CADENA          reduce using rule 133 (datos -> FLOAT .)
    CARACTER        reduce using rule 133 (datos -> FLOAT .)
    TRUE            reduce using rule 133 (datos -> FLOAT .)
    FALSE           reduce using rule 133 (datos -> FLOAT .)
    IGUAL           reduce using rule 133 (datos -> FLOAT .)
    BARRA           reduce using rule 133 (datos -> FLOAT .)
    COMA            reduce using rule 133 (datos -> FLOAT .)
    PD              reduce using rule 133 (datos -> FLOAT .)
    LI              reduce using rule 133 (datos -> FLOAT .)
    BREAK           reduce using rule 133 (datos -> FLOAT .)
    CONTINUE        reduce using rule 133 (datos -> FLOAT .)


state 41

    (134) datos -> CADENA .

    PUNTO           reduce using rule 134 (datos -> CADENA .)
    OR              reduce using rule 134 (datos -> CADENA .)
    AND             reduce using rule 134 (datos -> CADENA .)
    MAYORIGUAL      reduce using rule 134 (datos -> CADENA .)
    MAYOR           reduce using rule 134 (datos -> CADENA .)
    MENORIGUAL      reduce using rule 134 (datos -> CADENA .)
    MENOR           reduce using rule 134 (datos -> CADENA .)
    IGUALDAD        reduce using rule 134 (datos -> CADENA .)
    DESIGUALDAD     reduce using rule 134 (datos -> CADENA .)
    RESTA           reduce using rule 134 (datos -> CADENA .)
    SUMA            reduce using rule 134 (datos -> CADENA .)
    MULTI           reduce using rule 134 (datos -> CADENA .)
    DIVI            reduce using rule 134 (datos -> CADENA .)
    MODULO          reduce using rule 134 (datos -> CADENA .)
    FUNCION         reduce using rule 134 (datos -> CADENA .)
    LET             reduce using rule 134 (datos -> CADENA .)
    ID              reduce using rule 134 (datos -> CADENA .)
    $end            reduce using rule 134 (datos -> CADENA .)
    PYC             reduce using rule 134 (datos -> CADENA .)
    LD              reduce using rule 134 (datos -> CADENA .)
    PRINTLN         reduce using rule 134 (datos -> CADENA .)
    PRINT           reduce using rule 134 (datos -> CADENA .)
    MATCH           reduce using rule 134 (datos -> CADENA .)
    IF              reduce using rule 134 (datos -> CADENA .)
    WHILE           reduce using rule 134 (datos -> CADENA .)
    RETURN          reduce using rule 134 (datos -> CADENA .)
    LOOP            reduce using rule 134 (datos -> CADENA .)
    GBAJO           reduce using rule 134 (datos -> CADENA .)
    NOT             reduce using rule 134 (datos -> CADENA .)
    PI              reduce using rule 134 (datos -> CADENA .)
    POWF            reduce using rule 134 (datos -> CADENA .)
    POW             reduce using rule 134 (datos -> CADENA .)
    ENTERO          reduce using rule 134 (datos -> CADENA .)
    FLOAT           reduce using rule 134 (datos -> CADENA .)
    CADENA          reduce using rule 134 (datos -> CADENA .)
    CARACTER        reduce using rule 134 (datos -> CADENA .)
    TRUE            reduce using rule 134 (datos -> CADENA .)
    FALSE           reduce using rule 134 (datos -> CADENA .)
    IGUAL           reduce using rule 134 (datos -> CADENA .)
    BARRA           reduce using rule 134 (datos -> CADENA .)
    COMA            reduce using rule 134 (datos -> CADENA .)
    PD              reduce using rule 134 (datos -> CADENA .)
    LI              reduce using rule 134 (datos -> CADENA .)
    BREAK           reduce using rule 134 (datos -> CADENA .)
    CONTINUE        reduce using rule 134 (datos -> CADENA .)


state 42

    (135) datos -> CARACTER .

    PUNTO           reduce using rule 135 (datos -> CARACTER .)
    OR              reduce using rule 135 (datos -> CARACTER .)
    AND             reduce using rule 135 (datos -> CARACTER .)
    MAYORIGUAL      reduce using rule 135 (datos -> CARACTER .)
    MAYOR           reduce using rule 135 (datos -> CARACTER .)
    MENORIGUAL      reduce using rule 135 (datos -> CARACTER .)
    MENOR           reduce using rule 135 (datos -> CARACTER .)
    IGUALDAD        reduce using rule 135 (datos -> CARACTER .)
    DESIGUALDAD     reduce using rule 135 (datos -> CARACTER .)
    RESTA           reduce using rule 135 (datos -> CARACTER .)
    SUMA            reduce using rule 135 (datos -> CARACTER .)
    MULTI           reduce using rule 135 (datos -> CARACTER .)
    DIVI            reduce using rule 135 (datos -> CARACTER .)
    MODULO          reduce using rule 135 (datos -> CARACTER .)
    FUNCION         reduce using rule 135 (datos -> CARACTER .)
    LET             reduce using rule 135 (datos -> CARACTER .)
    ID              reduce using rule 135 (datos -> CARACTER .)
    $end            reduce using rule 135 (datos -> CARACTER .)
    PYC             reduce using rule 135 (datos -> CARACTER .)
    LD              reduce using rule 135 (datos -> CARACTER .)
    PRINTLN         reduce using rule 135 (datos -> CARACTER .)
    PRINT           reduce using rule 135 (datos -> CARACTER .)
    MATCH           reduce using rule 135 (datos -> CARACTER .)
    IF              reduce using rule 135 (datos -> CARACTER .)
    WHILE           reduce using rule 135 (datos -> CARACTER .)
    RETURN          reduce using rule 135 (datos -> CARACTER .)
    LOOP            reduce using rule 135 (datos -> CARACTER .)
    GBAJO           reduce using rule 135 (datos -> CARACTER .)
    NOT             reduce using rule 135 (datos -> CARACTER .)
    PI              reduce using rule 135 (datos -> CARACTER .)
    POWF            reduce using rule 135 (datos -> CARACTER .)
    POW             reduce using rule 135 (datos -> CARACTER .)
    ENTERO          reduce using rule 135 (datos -> CARACTER .)
    FLOAT           reduce using rule 135 (datos -> CARACTER .)
    CADENA          reduce using rule 135 (datos -> CARACTER .)
    CARACTER        reduce using rule 135 (datos -> CARACTER .)
    TRUE            reduce using rule 135 (datos -> CARACTER .)
    FALSE           reduce using rule 135 (datos -> CARACTER .)
    IGUAL           reduce using rule 135 (datos -> CARACTER .)
    BARRA           reduce using rule 135 (datos -> CARACTER .)
    COMA            reduce using rule 135 (datos -> CARACTER .)
    PD              reduce using rule 135 (datos -> CARACTER .)
    LI              reduce using rule 135 (datos -> CARACTER .)
    BREAK           reduce using rule 135 (datos -> CARACTER .)
    CONTINUE        reduce using rule 135 (datos -> CARACTER .)


state 43

    (137) datos -> TRUE .

    PUNTO           reduce using rule 137 (datos -> TRUE .)
    OR              reduce using rule 137 (datos -> TRUE .)
    AND             reduce using rule 137 (datos -> TRUE .)
    MAYORIGUAL      reduce using rule 137 (datos -> TRUE .)
    MAYOR           reduce using rule 137 (datos -> TRUE .)
    MENORIGUAL      reduce using rule 137 (datos -> TRUE .)
    MENOR           reduce using rule 137 (datos -> TRUE .)
    IGUALDAD        reduce using rule 137 (datos -> TRUE .)
    DESIGUALDAD     reduce using rule 137 (datos -> TRUE .)
    RESTA           reduce using rule 137 (datos -> TRUE .)
    SUMA            reduce using rule 137 (datos -> TRUE .)
    MULTI           reduce using rule 137 (datos -> TRUE .)
    DIVI            reduce using rule 137 (datos -> TRUE .)
    MODULO          reduce using rule 137 (datos -> TRUE .)
    FUNCION         reduce using rule 137 (datos -> TRUE .)
    LET             reduce using rule 137 (datos -> TRUE .)
    ID              reduce using rule 137 (datos -> TRUE .)
    $end            reduce using rule 137 (datos -> TRUE .)
    PYC             reduce using rule 137 (datos -> TRUE .)
    LD              reduce using rule 137 (datos -> TRUE .)
    PRINTLN         reduce using rule 137 (datos -> TRUE .)
    PRINT           reduce using rule 137 (datos -> TRUE .)
    MATCH           reduce using rule 137 (datos -> TRUE .)
    IF              reduce using rule 137 (datos -> TRUE .)
    WHILE           reduce using rule 137 (datos -> TRUE .)
    RETURN          reduce using rule 137 (datos -> TRUE .)
    LOOP            reduce using rule 137 (datos -> TRUE .)
    GBAJO           reduce using rule 137 (datos -> TRUE .)
    NOT             reduce using rule 137 (datos -> TRUE .)
    PI              reduce using rule 137 (datos -> TRUE .)
    POWF            reduce using rule 137 (datos -> TRUE .)
    POW             reduce using rule 137 (datos -> TRUE .)
    ENTERO          reduce using rule 137 (datos -> TRUE .)
    FLOAT           reduce using rule 137 (datos -> TRUE .)
    CADENA          reduce using rule 137 (datos -> TRUE .)
    CARACTER        reduce using rule 137 (datos -> TRUE .)
    TRUE            reduce using rule 137 (datos -> TRUE .)
    FALSE           reduce using rule 137 (datos -> TRUE .)
    IGUAL           reduce using rule 137 (datos -> TRUE .)
    BARRA           reduce using rule 137 (datos -> TRUE .)
    COMA            reduce using rule 137 (datos -> TRUE .)
    PD              reduce using rule 137 (datos -> TRUE .)
    LI              reduce using rule 137 (datos -> TRUE .)
    BREAK           reduce using rule 137 (datos -> TRUE .)
    CONTINUE        reduce using rule 137 (datos -> TRUE .)


state 44

    (138) datos -> FALSE .

    PUNTO           reduce using rule 138 (datos -> FALSE .)
    OR              reduce using rule 138 (datos -> FALSE .)
    AND             reduce using rule 138 (datos -> FALSE .)
    MAYORIGUAL      reduce using rule 138 (datos -> FALSE .)
    MAYOR           reduce using rule 138 (datos -> FALSE .)
    MENORIGUAL      reduce using rule 138 (datos -> FALSE .)
    MENOR           reduce using rule 138 (datos -> FALSE .)
    IGUALDAD        reduce using rule 138 (datos -> FALSE .)
    DESIGUALDAD     reduce using rule 138 (datos -> FALSE .)
    RESTA           reduce using rule 138 (datos -> FALSE .)
    SUMA            reduce using rule 138 (datos -> FALSE .)
    MULTI           reduce using rule 138 (datos -> FALSE .)
    DIVI            reduce using rule 138 (datos -> FALSE .)
    MODULO          reduce using rule 138 (datos -> FALSE .)
    FUNCION         reduce using rule 138 (datos -> FALSE .)
    LET             reduce using rule 138 (datos -> FALSE .)
    ID              reduce using rule 138 (datos -> FALSE .)
    $end            reduce using rule 138 (datos -> FALSE .)
    PYC             reduce using rule 138 (datos -> FALSE .)
    LD              reduce using rule 138 (datos -> FALSE .)
    PRINTLN         reduce using rule 138 (datos -> FALSE .)
    PRINT           reduce using rule 138 (datos -> FALSE .)
    MATCH           reduce using rule 138 (datos -> FALSE .)
    IF              reduce using rule 138 (datos -> FALSE .)
    WHILE           reduce using rule 138 (datos -> FALSE .)
    RETURN          reduce using rule 138 (datos -> FALSE .)
    LOOP            reduce using rule 138 (datos -> FALSE .)
    GBAJO           reduce using rule 138 (datos -> FALSE .)
    NOT             reduce using rule 138 (datos -> FALSE .)
    PI              reduce using rule 138 (datos -> FALSE .)
    POWF            reduce using rule 138 (datos -> FALSE .)
    POW             reduce using rule 138 (datos -> FALSE .)
    ENTERO          reduce using rule 138 (datos -> FALSE .)
    FLOAT           reduce using rule 138 (datos -> FALSE .)
    CADENA          reduce using rule 138 (datos -> FALSE .)
    CARACTER        reduce using rule 138 (datos -> FALSE .)
    TRUE            reduce using rule 138 (datos -> FALSE .)
    FALSE           reduce using rule 138 (datos -> FALSE .)
    IGUAL           reduce using rule 138 (datos -> FALSE .)
    BARRA           reduce using rule 138 (datos -> FALSE .)
    COMA            reduce using rule 138 (datos -> FALSE .)
    PD              reduce using rule 138 (datos -> FALSE .)
    LI              reduce using rule 138 (datos -> FALSE .)
    BREAK           reduce using rule 138 (datos -> FALSE .)
    CONTINUE        reduce using rule 138 (datos -> FALSE .)


state 45

    (77) declaracion -> LET mutable ID . tipado PYC
    (78) declaracion -> LET mutable ID . tipado IGUAL expresiones PYC
    (82) tipado -> . DP tipo_datos
    (83) tipado -> .

    DP              shift and go to state 76
    PYC             reduce using rule 83 (tipado -> .)
    IGUAL           reduce using rule 83 (tipado -> .)

    tipado                         shift and go to state 75

state 46

    (62) funcion -> FUNCION MAIN PI PD . LI lista_bloque LD

    LI              shift and go to state 77


state 47

    (63) funcion -> FUNCION ID PI PD . tipo_funcion LI lista_bloque LD
    (74) tipo_funcion -> . RESTA MAYOR tipo_datos
    (75) tipo_funcion -> . RESTA MAYOR VECTOR MENOR tipo_datos MAYOR
    (76) tipo_funcion -> .

    RESTA           shift and go to state 79
    LI              reduce using rule 76 (tipo_funcion -> .)

    tipo_funcion                   shift and go to state 78

state 48

    (64) funcion -> FUNCION ID PI parametros . PD tipo_funcion LI lista_bloque LD
    (65) parametros -> parametros . COMA definiciones

    PD              shift and go to state 80
    COMA            shift and go to state 81


state 49

    (66) parametros -> definiciones .

    PD              reduce using rule 66 (parametros -> definiciones .)
    COMA            reduce using rule 66 (parametros -> definiciones .)


state 50

    (67) definiciones -> referencias . mutable ID VECTOR tipado_vector
    (68) definiciones -> referencias . mutable ID tipado
    (80) mutable -> . MUT
    (81) mutable -> .

    MUT             shift and go to state 15
    ID              reduce using rule 81 (mutable -> .)

    mutable                        shift and go to state 82

state 51

    (69) referencias -> REFER .

    MUT             reduce using rule 69 (referencias -> REFER .)
    ID              reduce using rule 69 (referencias -> REFER .)


state 52

    (58) llamada -> ID PI . PD
    (59) llamada -> ID PI . lista_expres PD
    (60) lista_expres -> . lista_expres COMA expresiones
    (61) lista_expres -> . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for PD resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
    PD              shift and go to state 83
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! PD              [ reduce using rule 101 (expresiones -> .) ]

    lista_expres                   shift and go to state 84
    expresiones                    shift and go to state 85
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 53

    (107) funcion_nativa -> expresiones PUNTO . nativas
    (108) nativas -> . ABS
    (109) nativas -> . SQRT
    (110) nativas -> . TOSTRING
    (111) nativas -> . TOOWNED
    (112) nativas -> . CLONE

    ABS             shift and go to state 87
    SQRT            shift and go to state 88
    TOSTRING        shift and go to state 89
    TOOWNED         shift and go to state 90
    CLONE           shift and go to state 91

    nativas                        shift and go to state 86

state 54

    (113) expre_logica -> expresiones OR . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 92
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 55

    (114) expre_logica -> expresiones AND . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 93
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 56

    (116) expre_relacional -> expresiones MAYORIGUAL . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 94
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 57

    (117) expre_relacional -> expresiones MAYOR . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 95
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 58

    (118) expre_relacional -> expresiones MENORIGUAL . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 96
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 59

    (119) expre_relacional -> expresiones MENOR . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 97
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 60

    (120) expre_relacional -> expresiones IGUALDAD . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 98
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 61

    (121) expre_relacional -> expresiones DESIGUALDAD . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 99
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 62

    (124) expre_aritmetica -> expresiones RESTA . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 100
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 63

    (125) expre_aritmetica -> expresiones SUMA . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 101
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 64

    (126) expre_aritmetica -> expresiones MULTI . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 102
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 65

    (127) expre_aritmetica -> expresiones DIVI . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 103
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 66

    (128) expre_aritmetica -> expresiones MODULO . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    FUNCION         reduce using rule 101 (expresiones -> .)
    LET             reduce using rule 101 (expresiones -> .)
    $end            reduce using rule 101 (expresiones -> .)
    PYC             reduce using rule 101 (expresiones -> .)
    LD              reduce using rule 101 (expresiones -> .)
    PRINTLN         reduce using rule 101 (expresiones -> .)
    PRINT           reduce using rule 101 (expresiones -> .)
    WHILE           reduce using rule 101 (expresiones -> .)
    RETURN          reduce using rule 101 (expresiones -> .)
    GBAJO           reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    LI              reduce using rule 101 (expresiones -> .)
    BREAK           reduce using rule 101 (expresiones -> .)
    CONTINUE        reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 104
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 67

    (115) expre_logica -> NOT expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 115 (expre_logica -> NOT expresiones .)
    OR              reduce using rule 115 (expre_logica -> NOT expresiones .)
    AND             reduce using rule 115 (expre_logica -> NOT expresiones .)
    MAYORIGUAL      reduce using rule 115 (expre_logica -> NOT expresiones .)
    MAYOR           reduce using rule 115 (expre_logica -> NOT expresiones .)
    MENORIGUAL      reduce using rule 115 (expre_logica -> NOT expresiones .)
    MENOR           reduce using rule 115 (expre_logica -> NOT expresiones .)
    IGUALDAD        reduce using rule 115 (expre_logica -> NOT expresiones .)
    DESIGUALDAD     reduce using rule 115 (expre_logica -> NOT expresiones .)
    RESTA           reduce using rule 115 (expre_logica -> NOT expresiones .)
    SUMA            reduce using rule 115 (expre_logica -> NOT expresiones .)
    MULTI           reduce using rule 115 (expre_logica -> NOT expresiones .)
    DIVI            reduce using rule 115 (expre_logica -> NOT expresiones .)
    MODULO          reduce using rule 115 (expre_logica -> NOT expresiones .)
    FUNCION         reduce using rule 115 (expre_logica -> NOT expresiones .)
    LET             reduce using rule 115 (expre_logica -> NOT expresiones .)
    ID              reduce using rule 115 (expre_logica -> NOT expresiones .)
    $end            reduce using rule 115 (expre_logica -> NOT expresiones .)
    PYC             reduce using rule 115 (expre_logica -> NOT expresiones .)
    LD              reduce using rule 115 (expre_logica -> NOT expresiones .)
    PRINTLN         reduce using rule 115 (expre_logica -> NOT expresiones .)
    PRINT           reduce using rule 115 (expre_logica -> NOT expresiones .)
    MATCH           reduce using rule 115 (expre_logica -> NOT expresiones .)
    IF              reduce using rule 115 (expre_logica -> NOT expresiones .)
    WHILE           reduce using rule 115 (expre_logica -> NOT expresiones .)
    RETURN          reduce using rule 115 (expre_logica -> NOT expresiones .)
    LOOP            reduce using rule 115 (expre_logica -> NOT expresiones .)
    GBAJO           reduce using rule 115 (expre_logica -> NOT expresiones .)
    NOT             reduce using rule 115 (expre_logica -> NOT expresiones .)
    PI              reduce using rule 115 (expre_logica -> NOT expresiones .)
    POWF            reduce using rule 115 (expre_logica -> NOT expresiones .)
    POW             reduce using rule 115 (expre_logica -> NOT expresiones .)
    ENTERO          reduce using rule 115 (expre_logica -> NOT expresiones .)
    FLOAT           reduce using rule 115 (expre_logica -> NOT expresiones .)
    CADENA          reduce using rule 115 (expre_logica -> NOT expresiones .)
    CARACTER        reduce using rule 115 (expre_logica -> NOT expresiones .)
    TRUE            reduce using rule 115 (expre_logica -> NOT expresiones .)
    FALSE           reduce using rule 115 (expre_logica -> NOT expresiones .)
    IGUAL           reduce using rule 115 (expre_logica -> NOT expresiones .)
    BARRA           reduce using rule 115 (expre_logica -> NOT expresiones .)
    COMA            reduce using rule 115 (expre_logica -> NOT expresiones .)
    PD              reduce using rule 115 (expre_logica -> NOT expresiones .)
    LI              reduce using rule 115 (expre_logica -> NOT expresiones .)
    BREAK           reduce using rule 115 (expre_logica -> NOT expresiones .)
    CONTINUE        reduce using rule 115 (expre_logica -> NOT expresiones .)

  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! RESTA           [ shift and go to state 62 ]
  ! SUMA            [ shift and go to state 63 ]
  ! MULTI           [ shift and go to state 64 ]
  ! DIVI            [ shift and go to state 65 ]
  ! MODULO          [ shift and go to state 66 ]


state 68

    (122) expre_aritmetica -> RESTA expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    OR              reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    AND             reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    MAYORIGUAL      reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    MAYOR           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    MENORIGUAL      reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    MENOR           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    IGUALDAD        reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    DESIGUALDAD     reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    RESTA           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    SUMA            reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    MULTI           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    DIVI            reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    MODULO          reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    FUNCION         reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    LET             reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    ID              reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    $end            reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    PYC             reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    LD              reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    PRINTLN         reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    PRINT           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    MATCH           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    IF              reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    WHILE           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    RETURN          reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    LOOP            reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    GBAJO           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    NOT             reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    PI              reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    POWF            reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    POW             reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    ENTERO          reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    FLOAT           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    CADENA          reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    CARACTER        reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    TRUE            reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    FALSE           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    IGUAL           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    BARRA           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    COMA            reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    PD              reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    LI              reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    BREAK           reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)
    CONTINUE        reduce using rule 122 (expre_aritmetica -> RESTA expresiones .)

  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! RESTA           [ shift and go to state 62 ]
  ! SUMA            [ shift and go to state 63 ]
  ! MULTI           [ shift and go to state 64 ]
  ! DIVI            [ shift and go to state 65 ]
  ! MODULO          [ shift and go to state 66 ]


state 69

    (123) expre_aritmetica -> PI expresiones . PD
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PD              shift and go to state 105
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 70

    (129) expre_aritmetica -> POWF PI . expresiones COMA expresiones PD
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    COMA            reduce using rule 101 (expresiones -> .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 106
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 71

    (130) expre_aritmetica -> POW PI . expresiones COMA expresiones PD
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    COMA            reduce using rule 101 (expresiones -> .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 107
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 72

    (46) start_match -> MATCH expresiones . LI matches LD
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    LI              shift and go to state 108
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 73

    (39) start_if -> IF expresiones . LI list_exp_ins LD
    (40) start_if -> IF expresiones . LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> IF expresiones . LI list_exp_ins LD lista_elif
    (42) start_if -> IF expresiones . LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    LI              shift and go to state 109
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 74

    (30) start_loop -> LOOP LI . lista_bloque LD
    (7) lista_bloque -> . lista_bloque bloque
    (8) lista_bloque -> . bloque
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 125
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38

  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]

    lista_bloque                   shift and go to state 110
    bloque                         shift and go to state 111
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    start_match                    shift and go to state 116
    start_if                       shift and go to state 117
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 122

state 75

    (77) declaracion -> LET mutable ID tipado . PYC
    (78) declaracion -> LET mutable ID tipado . IGUAL expresiones PYC

    PYC             shift and go to state 130
    IGUAL           shift and go to state 131


state 76

    (82) tipado -> DP . tipo_datos
    (84) tipo_datos -> . TIPOINT
    (85) tipo_datos -> . TIPOFLOAT
    (86) tipo_datos -> . TIPOCHAR
    (87) tipo_datos -> . TIPOSTRING
    (88) tipo_datos -> . DIRSTRING
    (89) tipo_datos -> . TIPOBOOL

    TIPOINT         shift and go to state 133
    TIPOFLOAT       shift and go to state 134
    TIPOCHAR        shift and go to state 135
    TIPOSTRING      shift and go to state 136
    DIRSTRING       shift and go to state 137
    TIPOBOOL        shift and go to state 138

    tipo_datos                     shift and go to state 132

state 77

    (62) funcion -> FUNCION MAIN PI PD LI . lista_bloque LD
    (7) lista_bloque -> . lista_bloque bloque
    (8) lista_bloque -> . bloque
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 125
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38

  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]

    lista_bloque                   shift and go to state 139
    bloque                         shift and go to state 111
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    start_match                    shift and go to state 116
    start_if                       shift and go to state 117
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 122

state 78

    (63) funcion -> FUNCION ID PI PD tipo_funcion . LI lista_bloque LD

    LI              shift and go to state 140


state 79

    (74) tipo_funcion -> RESTA . MAYOR tipo_datos
    (75) tipo_funcion -> RESTA . MAYOR VECTOR MENOR tipo_datos MAYOR

    MAYOR           shift and go to state 141


state 80

    (64) funcion -> FUNCION ID PI parametros PD . tipo_funcion LI lista_bloque LD
    (74) tipo_funcion -> . RESTA MAYOR tipo_datos
    (75) tipo_funcion -> . RESTA MAYOR VECTOR MENOR tipo_datos MAYOR
    (76) tipo_funcion -> .

    RESTA           shift and go to state 79
    LI              reduce using rule 76 (tipo_funcion -> .)

    tipo_funcion                   shift and go to state 142

state 81

    (65) parametros -> parametros COMA . definiciones
    (67) definiciones -> . referencias mutable ID VECTOR tipado_vector
    (68) definiciones -> . referencias mutable ID tipado
    (69) referencias -> . REFER
    (70) referencias -> .

    REFER           shift and go to state 51
    MUT             reduce using rule 70 (referencias -> .)
    ID              reduce using rule 70 (referencias -> .)

    definiciones                   shift and go to state 143
    referencias                    shift and go to state 50

state 82

    (67) definiciones -> referencias mutable . ID VECTOR tipado_vector
    (68) definiciones -> referencias mutable . ID tipado

    ID              shift and go to state 144


state 83

    (58) llamada -> ID PI PD .

    PUNTO           reduce using rule 58 (llamada -> ID PI PD .)
    OR              reduce using rule 58 (llamada -> ID PI PD .)
    AND             reduce using rule 58 (llamada -> ID PI PD .)
    MAYORIGUAL      reduce using rule 58 (llamada -> ID PI PD .)
    MAYOR           reduce using rule 58 (llamada -> ID PI PD .)
    MENORIGUAL      reduce using rule 58 (llamada -> ID PI PD .)
    MENOR           reduce using rule 58 (llamada -> ID PI PD .)
    IGUALDAD        reduce using rule 58 (llamada -> ID PI PD .)
    DESIGUALDAD     reduce using rule 58 (llamada -> ID PI PD .)
    RESTA           reduce using rule 58 (llamada -> ID PI PD .)
    SUMA            reduce using rule 58 (llamada -> ID PI PD .)
    MULTI           reduce using rule 58 (llamada -> ID PI PD .)
    DIVI            reduce using rule 58 (llamada -> ID PI PD .)
    MODULO          reduce using rule 58 (llamada -> ID PI PD .)
    FUNCION         reduce using rule 58 (llamada -> ID PI PD .)
    LET             reduce using rule 58 (llamada -> ID PI PD .)
    ID              reduce using rule 58 (llamada -> ID PI PD .)
    $end            reduce using rule 58 (llamada -> ID PI PD .)
    PYC             reduce using rule 58 (llamada -> ID PI PD .)
    LD              reduce using rule 58 (llamada -> ID PI PD .)
    PRINTLN         reduce using rule 58 (llamada -> ID PI PD .)
    PRINT           reduce using rule 58 (llamada -> ID PI PD .)
    MATCH           reduce using rule 58 (llamada -> ID PI PD .)
    IF              reduce using rule 58 (llamada -> ID PI PD .)
    WHILE           reduce using rule 58 (llamada -> ID PI PD .)
    RETURN          reduce using rule 58 (llamada -> ID PI PD .)
    LOOP            reduce using rule 58 (llamada -> ID PI PD .)
    GBAJO           reduce using rule 58 (llamada -> ID PI PD .)
    NOT             reduce using rule 58 (llamada -> ID PI PD .)
    PI              reduce using rule 58 (llamada -> ID PI PD .)
    POWF            reduce using rule 58 (llamada -> ID PI PD .)
    POW             reduce using rule 58 (llamada -> ID PI PD .)
    ENTERO          reduce using rule 58 (llamada -> ID PI PD .)
    FLOAT           reduce using rule 58 (llamada -> ID PI PD .)
    CADENA          reduce using rule 58 (llamada -> ID PI PD .)
    CARACTER        reduce using rule 58 (llamada -> ID PI PD .)
    TRUE            reduce using rule 58 (llamada -> ID PI PD .)
    FALSE           reduce using rule 58 (llamada -> ID PI PD .)
    IGUAL           reduce using rule 58 (llamada -> ID PI PD .)
    BARRA           reduce using rule 58 (llamada -> ID PI PD .)
    COMA            reduce using rule 58 (llamada -> ID PI PD .)
    PD              reduce using rule 58 (llamada -> ID PI PD .)
    LI              reduce using rule 58 (llamada -> ID PI PD .)
    BREAK           reduce using rule 58 (llamada -> ID PI PD .)
    CONTINUE        reduce using rule 58 (llamada -> ID PI PD .)


state 84

    (59) llamada -> ID PI lista_expres . PD
    (60) lista_expres -> lista_expres . COMA expresiones

    PD              shift and go to state 145
    COMA            shift and go to state 146


state 85

    (61) lista_expres -> expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PD              reduce using rule 61 (lista_expres -> expresiones .)
    COMA            reduce using rule 61 (lista_expres -> expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 86

    (107) funcion_nativa -> expresiones PUNTO nativas .

    PUNTO           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    OR              reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    AND             reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    MAYORIGUAL      reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    MAYOR           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    MENORIGUAL      reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    MENOR           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    IGUALDAD        reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    DESIGUALDAD     reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    RESTA           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    SUMA            reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    MULTI           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    DIVI            reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    MODULO          reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    FUNCION         reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    LET             reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    ID              reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    $end            reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    PYC             reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    LD              reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    PRINTLN         reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    PRINT           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    MATCH           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    IF              reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    WHILE           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    RETURN          reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    LOOP            reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    GBAJO           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    NOT             reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    PI              reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    POWF            reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    POW             reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    ENTERO          reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    FLOAT           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    CADENA          reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    CARACTER        reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    TRUE            reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    FALSE           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    IGUAL           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    BARRA           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    COMA            reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    PD              reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    LI              reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    BREAK           reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)
    CONTINUE        reduce using rule 107 (funcion_nativa -> expresiones PUNTO nativas .)


state 87

    (108) nativas -> ABS .

    PUNTO           reduce using rule 108 (nativas -> ABS .)
    OR              reduce using rule 108 (nativas -> ABS .)
    AND             reduce using rule 108 (nativas -> ABS .)
    MAYORIGUAL      reduce using rule 108 (nativas -> ABS .)
    MAYOR           reduce using rule 108 (nativas -> ABS .)
    MENORIGUAL      reduce using rule 108 (nativas -> ABS .)
    MENOR           reduce using rule 108 (nativas -> ABS .)
    IGUALDAD        reduce using rule 108 (nativas -> ABS .)
    DESIGUALDAD     reduce using rule 108 (nativas -> ABS .)
    RESTA           reduce using rule 108 (nativas -> ABS .)
    SUMA            reduce using rule 108 (nativas -> ABS .)
    MULTI           reduce using rule 108 (nativas -> ABS .)
    DIVI            reduce using rule 108 (nativas -> ABS .)
    MODULO          reduce using rule 108 (nativas -> ABS .)
    FUNCION         reduce using rule 108 (nativas -> ABS .)
    LET             reduce using rule 108 (nativas -> ABS .)
    ID              reduce using rule 108 (nativas -> ABS .)
    $end            reduce using rule 108 (nativas -> ABS .)
    PYC             reduce using rule 108 (nativas -> ABS .)
    LD              reduce using rule 108 (nativas -> ABS .)
    PRINTLN         reduce using rule 108 (nativas -> ABS .)
    PRINT           reduce using rule 108 (nativas -> ABS .)
    MATCH           reduce using rule 108 (nativas -> ABS .)
    IF              reduce using rule 108 (nativas -> ABS .)
    WHILE           reduce using rule 108 (nativas -> ABS .)
    RETURN          reduce using rule 108 (nativas -> ABS .)
    LOOP            reduce using rule 108 (nativas -> ABS .)
    GBAJO           reduce using rule 108 (nativas -> ABS .)
    NOT             reduce using rule 108 (nativas -> ABS .)
    PI              reduce using rule 108 (nativas -> ABS .)
    POWF            reduce using rule 108 (nativas -> ABS .)
    POW             reduce using rule 108 (nativas -> ABS .)
    ENTERO          reduce using rule 108 (nativas -> ABS .)
    FLOAT           reduce using rule 108 (nativas -> ABS .)
    CADENA          reduce using rule 108 (nativas -> ABS .)
    CARACTER        reduce using rule 108 (nativas -> ABS .)
    TRUE            reduce using rule 108 (nativas -> ABS .)
    FALSE           reduce using rule 108 (nativas -> ABS .)
    IGUAL           reduce using rule 108 (nativas -> ABS .)
    BARRA           reduce using rule 108 (nativas -> ABS .)
    COMA            reduce using rule 108 (nativas -> ABS .)
    PD              reduce using rule 108 (nativas -> ABS .)
    LI              reduce using rule 108 (nativas -> ABS .)
    BREAK           reduce using rule 108 (nativas -> ABS .)
    CONTINUE        reduce using rule 108 (nativas -> ABS .)


state 88

    (109) nativas -> SQRT .

    PUNTO           reduce using rule 109 (nativas -> SQRT .)
    OR              reduce using rule 109 (nativas -> SQRT .)
    AND             reduce using rule 109 (nativas -> SQRT .)
    MAYORIGUAL      reduce using rule 109 (nativas -> SQRT .)
    MAYOR           reduce using rule 109 (nativas -> SQRT .)
    MENORIGUAL      reduce using rule 109 (nativas -> SQRT .)
    MENOR           reduce using rule 109 (nativas -> SQRT .)
    IGUALDAD        reduce using rule 109 (nativas -> SQRT .)
    DESIGUALDAD     reduce using rule 109 (nativas -> SQRT .)
    RESTA           reduce using rule 109 (nativas -> SQRT .)
    SUMA            reduce using rule 109 (nativas -> SQRT .)
    MULTI           reduce using rule 109 (nativas -> SQRT .)
    DIVI            reduce using rule 109 (nativas -> SQRT .)
    MODULO          reduce using rule 109 (nativas -> SQRT .)
    FUNCION         reduce using rule 109 (nativas -> SQRT .)
    LET             reduce using rule 109 (nativas -> SQRT .)
    ID              reduce using rule 109 (nativas -> SQRT .)
    $end            reduce using rule 109 (nativas -> SQRT .)
    PYC             reduce using rule 109 (nativas -> SQRT .)
    LD              reduce using rule 109 (nativas -> SQRT .)
    PRINTLN         reduce using rule 109 (nativas -> SQRT .)
    PRINT           reduce using rule 109 (nativas -> SQRT .)
    MATCH           reduce using rule 109 (nativas -> SQRT .)
    IF              reduce using rule 109 (nativas -> SQRT .)
    WHILE           reduce using rule 109 (nativas -> SQRT .)
    RETURN          reduce using rule 109 (nativas -> SQRT .)
    LOOP            reduce using rule 109 (nativas -> SQRT .)
    GBAJO           reduce using rule 109 (nativas -> SQRT .)
    NOT             reduce using rule 109 (nativas -> SQRT .)
    PI              reduce using rule 109 (nativas -> SQRT .)
    POWF            reduce using rule 109 (nativas -> SQRT .)
    POW             reduce using rule 109 (nativas -> SQRT .)
    ENTERO          reduce using rule 109 (nativas -> SQRT .)
    FLOAT           reduce using rule 109 (nativas -> SQRT .)
    CADENA          reduce using rule 109 (nativas -> SQRT .)
    CARACTER        reduce using rule 109 (nativas -> SQRT .)
    TRUE            reduce using rule 109 (nativas -> SQRT .)
    FALSE           reduce using rule 109 (nativas -> SQRT .)
    IGUAL           reduce using rule 109 (nativas -> SQRT .)
    BARRA           reduce using rule 109 (nativas -> SQRT .)
    COMA            reduce using rule 109 (nativas -> SQRT .)
    PD              reduce using rule 109 (nativas -> SQRT .)
    LI              reduce using rule 109 (nativas -> SQRT .)
    BREAK           reduce using rule 109 (nativas -> SQRT .)
    CONTINUE        reduce using rule 109 (nativas -> SQRT .)


state 89

    (110) nativas -> TOSTRING .

    PUNTO           reduce using rule 110 (nativas -> TOSTRING .)
    OR              reduce using rule 110 (nativas -> TOSTRING .)
    AND             reduce using rule 110 (nativas -> TOSTRING .)
    MAYORIGUAL      reduce using rule 110 (nativas -> TOSTRING .)
    MAYOR           reduce using rule 110 (nativas -> TOSTRING .)
    MENORIGUAL      reduce using rule 110 (nativas -> TOSTRING .)
    MENOR           reduce using rule 110 (nativas -> TOSTRING .)
    IGUALDAD        reduce using rule 110 (nativas -> TOSTRING .)
    DESIGUALDAD     reduce using rule 110 (nativas -> TOSTRING .)
    RESTA           reduce using rule 110 (nativas -> TOSTRING .)
    SUMA            reduce using rule 110 (nativas -> TOSTRING .)
    MULTI           reduce using rule 110 (nativas -> TOSTRING .)
    DIVI            reduce using rule 110 (nativas -> TOSTRING .)
    MODULO          reduce using rule 110 (nativas -> TOSTRING .)
    FUNCION         reduce using rule 110 (nativas -> TOSTRING .)
    LET             reduce using rule 110 (nativas -> TOSTRING .)
    ID              reduce using rule 110 (nativas -> TOSTRING .)
    $end            reduce using rule 110 (nativas -> TOSTRING .)
    PYC             reduce using rule 110 (nativas -> TOSTRING .)
    LD              reduce using rule 110 (nativas -> TOSTRING .)
    PRINTLN         reduce using rule 110 (nativas -> TOSTRING .)
    PRINT           reduce using rule 110 (nativas -> TOSTRING .)
    MATCH           reduce using rule 110 (nativas -> TOSTRING .)
    IF              reduce using rule 110 (nativas -> TOSTRING .)
    WHILE           reduce using rule 110 (nativas -> TOSTRING .)
    RETURN          reduce using rule 110 (nativas -> TOSTRING .)
    LOOP            reduce using rule 110 (nativas -> TOSTRING .)
    GBAJO           reduce using rule 110 (nativas -> TOSTRING .)
    NOT             reduce using rule 110 (nativas -> TOSTRING .)
    PI              reduce using rule 110 (nativas -> TOSTRING .)
    POWF            reduce using rule 110 (nativas -> TOSTRING .)
    POW             reduce using rule 110 (nativas -> TOSTRING .)
    ENTERO          reduce using rule 110 (nativas -> TOSTRING .)
    FLOAT           reduce using rule 110 (nativas -> TOSTRING .)
    CADENA          reduce using rule 110 (nativas -> TOSTRING .)
    CARACTER        reduce using rule 110 (nativas -> TOSTRING .)
    TRUE            reduce using rule 110 (nativas -> TOSTRING .)
    FALSE           reduce using rule 110 (nativas -> TOSTRING .)
    IGUAL           reduce using rule 110 (nativas -> TOSTRING .)
    BARRA           reduce using rule 110 (nativas -> TOSTRING .)
    COMA            reduce using rule 110 (nativas -> TOSTRING .)
    PD              reduce using rule 110 (nativas -> TOSTRING .)
    LI              reduce using rule 110 (nativas -> TOSTRING .)
    BREAK           reduce using rule 110 (nativas -> TOSTRING .)
    CONTINUE        reduce using rule 110 (nativas -> TOSTRING .)


state 90

    (111) nativas -> TOOWNED .

    PUNTO           reduce using rule 111 (nativas -> TOOWNED .)
    OR              reduce using rule 111 (nativas -> TOOWNED .)
    AND             reduce using rule 111 (nativas -> TOOWNED .)
    MAYORIGUAL      reduce using rule 111 (nativas -> TOOWNED .)
    MAYOR           reduce using rule 111 (nativas -> TOOWNED .)
    MENORIGUAL      reduce using rule 111 (nativas -> TOOWNED .)
    MENOR           reduce using rule 111 (nativas -> TOOWNED .)
    IGUALDAD        reduce using rule 111 (nativas -> TOOWNED .)
    DESIGUALDAD     reduce using rule 111 (nativas -> TOOWNED .)
    RESTA           reduce using rule 111 (nativas -> TOOWNED .)
    SUMA            reduce using rule 111 (nativas -> TOOWNED .)
    MULTI           reduce using rule 111 (nativas -> TOOWNED .)
    DIVI            reduce using rule 111 (nativas -> TOOWNED .)
    MODULO          reduce using rule 111 (nativas -> TOOWNED .)
    FUNCION         reduce using rule 111 (nativas -> TOOWNED .)
    LET             reduce using rule 111 (nativas -> TOOWNED .)
    ID              reduce using rule 111 (nativas -> TOOWNED .)
    $end            reduce using rule 111 (nativas -> TOOWNED .)
    PYC             reduce using rule 111 (nativas -> TOOWNED .)
    LD              reduce using rule 111 (nativas -> TOOWNED .)
    PRINTLN         reduce using rule 111 (nativas -> TOOWNED .)
    PRINT           reduce using rule 111 (nativas -> TOOWNED .)
    MATCH           reduce using rule 111 (nativas -> TOOWNED .)
    IF              reduce using rule 111 (nativas -> TOOWNED .)
    WHILE           reduce using rule 111 (nativas -> TOOWNED .)
    RETURN          reduce using rule 111 (nativas -> TOOWNED .)
    LOOP            reduce using rule 111 (nativas -> TOOWNED .)
    GBAJO           reduce using rule 111 (nativas -> TOOWNED .)
    NOT             reduce using rule 111 (nativas -> TOOWNED .)
    PI              reduce using rule 111 (nativas -> TOOWNED .)
    POWF            reduce using rule 111 (nativas -> TOOWNED .)
    POW             reduce using rule 111 (nativas -> TOOWNED .)
    ENTERO          reduce using rule 111 (nativas -> TOOWNED .)
    FLOAT           reduce using rule 111 (nativas -> TOOWNED .)
    CADENA          reduce using rule 111 (nativas -> TOOWNED .)
    CARACTER        reduce using rule 111 (nativas -> TOOWNED .)
    TRUE            reduce using rule 111 (nativas -> TOOWNED .)
    FALSE           reduce using rule 111 (nativas -> TOOWNED .)
    IGUAL           reduce using rule 111 (nativas -> TOOWNED .)
    BARRA           reduce using rule 111 (nativas -> TOOWNED .)
    COMA            reduce using rule 111 (nativas -> TOOWNED .)
    PD              reduce using rule 111 (nativas -> TOOWNED .)
    LI              reduce using rule 111 (nativas -> TOOWNED .)
    BREAK           reduce using rule 111 (nativas -> TOOWNED .)
    CONTINUE        reduce using rule 111 (nativas -> TOOWNED .)


state 91

    (112) nativas -> CLONE .

    PUNTO           reduce using rule 112 (nativas -> CLONE .)
    OR              reduce using rule 112 (nativas -> CLONE .)
    AND             reduce using rule 112 (nativas -> CLONE .)
    MAYORIGUAL      reduce using rule 112 (nativas -> CLONE .)
    MAYOR           reduce using rule 112 (nativas -> CLONE .)
    MENORIGUAL      reduce using rule 112 (nativas -> CLONE .)
    MENOR           reduce using rule 112 (nativas -> CLONE .)
    IGUALDAD        reduce using rule 112 (nativas -> CLONE .)
    DESIGUALDAD     reduce using rule 112 (nativas -> CLONE .)
    RESTA           reduce using rule 112 (nativas -> CLONE .)
    SUMA            reduce using rule 112 (nativas -> CLONE .)
    MULTI           reduce using rule 112 (nativas -> CLONE .)
    DIVI            reduce using rule 112 (nativas -> CLONE .)
    MODULO          reduce using rule 112 (nativas -> CLONE .)
    FUNCION         reduce using rule 112 (nativas -> CLONE .)
    LET             reduce using rule 112 (nativas -> CLONE .)
    ID              reduce using rule 112 (nativas -> CLONE .)
    $end            reduce using rule 112 (nativas -> CLONE .)
    PYC             reduce using rule 112 (nativas -> CLONE .)
    LD              reduce using rule 112 (nativas -> CLONE .)
    PRINTLN         reduce using rule 112 (nativas -> CLONE .)
    PRINT           reduce using rule 112 (nativas -> CLONE .)
    MATCH           reduce using rule 112 (nativas -> CLONE .)
    IF              reduce using rule 112 (nativas -> CLONE .)
    WHILE           reduce using rule 112 (nativas -> CLONE .)
    RETURN          reduce using rule 112 (nativas -> CLONE .)
    LOOP            reduce using rule 112 (nativas -> CLONE .)
    GBAJO           reduce using rule 112 (nativas -> CLONE .)
    NOT             reduce using rule 112 (nativas -> CLONE .)
    PI              reduce using rule 112 (nativas -> CLONE .)
    POWF            reduce using rule 112 (nativas -> CLONE .)
    POW             reduce using rule 112 (nativas -> CLONE .)
    ENTERO          reduce using rule 112 (nativas -> CLONE .)
    FLOAT           reduce using rule 112 (nativas -> CLONE .)
    CADENA          reduce using rule 112 (nativas -> CLONE .)
    CARACTER        reduce using rule 112 (nativas -> CLONE .)
    TRUE            reduce using rule 112 (nativas -> CLONE .)
    FALSE           reduce using rule 112 (nativas -> CLONE .)
    IGUAL           reduce using rule 112 (nativas -> CLONE .)
    BARRA           reduce using rule 112 (nativas -> CLONE .)
    COMA            reduce using rule 112 (nativas -> CLONE .)
    PD              reduce using rule 112 (nativas -> CLONE .)
    LI              reduce using rule 112 (nativas -> CLONE .)
    BREAK           reduce using rule 112 (nativas -> CLONE .)
    CONTINUE        reduce using rule 112 (nativas -> CLONE .)


state 92

    (113) expre_logica -> expresiones OR expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    OR              reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    FUNCION         reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    LET             reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    ID              reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    $end            reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    PYC             reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    LD              reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    PRINTLN         reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    PRINT           reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    MATCH           reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    IF              reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    WHILE           reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    RETURN          reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    LOOP            reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    GBAJO           reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    NOT             reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    PI              reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    POWF            reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    POW             reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    ENTERO          reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    FLOAT           reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    CADENA          reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    CARACTER        reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    TRUE            reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    FALSE           reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    IGUAL           reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    BARRA           reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    COMA            reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    PD              reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    LI              reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    BREAK           reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    CONTINUE        reduce using rule 113 (expre_logica -> expresiones OR expresiones .)
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! AND             [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! MAYORIGUAL      [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! MAYOR           [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! MENORIGUAL      [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! MENOR           [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! IGUALDAD        [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! DESIGUALDAD     [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! RESTA           [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! SUMA            [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! MULTI           [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! DIVI            [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! MODULO          [ reduce using rule 113 (expre_logica -> expresiones OR expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 93

    (114) expre_logica -> expresiones AND expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    OR              reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    AND             reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    FUNCION         reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    LET             reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    ID              reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    $end            reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    PYC             reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    LD              reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    PRINTLN         reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    PRINT           reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    MATCH           reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    IF              reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    WHILE           reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    RETURN          reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    LOOP            reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    GBAJO           reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    NOT             reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    PI              reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    POWF            reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    POW             reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    ENTERO          reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    FLOAT           reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    CADENA          reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    CARACTER        reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    TRUE            reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    FALSE           reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    IGUAL           reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    BARRA           reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    COMA            reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    PD              reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    LI              reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    BREAK           reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    CONTINUE        reduce using rule 114 (expre_logica -> expresiones AND expresiones .)
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! MAYORIGUAL      [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! MAYOR           [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! MENORIGUAL      [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! MENOR           [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! IGUALDAD        [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! DESIGUALDAD     [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! RESTA           [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! SUMA            [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! MULTI           [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! DIVI            [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! MODULO          [ reduce using rule 114 (expre_logica -> expresiones AND expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]


state 94

    (116) expre_relacional -> expresiones MAYORIGUAL expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    OR              reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    AND             reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    MAYORIGUAL      reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    MAYOR           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    MENORIGUAL      reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    MENOR           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    IGUALDAD        reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    DESIGUALDAD     reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    FUNCION         reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    LET             reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    ID              reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    $end            reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    PYC             reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    LD              reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    PRINTLN         reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    PRINT           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    MATCH           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    IF              reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    WHILE           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    RETURN          reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    LOOP            reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    GBAJO           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    NOT             reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    PI              reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    POWF            reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    POW             reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    ENTERO          reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    FLOAT           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    CADENA          reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    CARACTER        reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    TRUE            reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    FALSE           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    IGUAL           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    BARRA           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    COMA            reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    PD              reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    LI              reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    BREAK           reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    CONTINUE        reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .)
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! RESTA           [ reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .) ]
  ! SUMA            [ reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .) ]
  ! MULTI           [ reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .) ]
  ! DIVI            [ reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .) ]
  ! MODULO          [ reduce using rule 116 (expre_relacional -> expresiones MAYORIGUAL expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]


state 95

    (117) expre_relacional -> expresiones MAYOR expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    OR              reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    AND             reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    MAYORIGUAL      reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    MAYOR           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    MENORIGUAL      reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    MENOR           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    IGUALDAD        reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    DESIGUALDAD     reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    FUNCION         reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    LET             reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    ID              reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    $end            reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    PYC             reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    LD              reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    PRINTLN         reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    PRINT           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    MATCH           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    IF              reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    WHILE           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    RETURN          reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    LOOP            reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    GBAJO           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    NOT             reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    PI              reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    POWF            reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    POW             reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    ENTERO          reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    FLOAT           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    CADENA          reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    CARACTER        reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    TRUE            reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    FALSE           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    IGUAL           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    BARRA           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    COMA            reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    PD              reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    LI              reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    BREAK           reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    CONTINUE        reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .)
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! RESTA           [ reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .) ]
  ! SUMA            [ reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .) ]
  ! MULTI           [ reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .) ]
  ! DIVI            [ reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .) ]
  ! MODULO          [ reduce using rule 117 (expre_relacional -> expresiones MAYOR expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]


state 96

    (118) expre_relacional -> expresiones MENORIGUAL expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    OR              reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    AND             reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    MAYORIGUAL      reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    MAYOR           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    MENORIGUAL      reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    MENOR           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    IGUALDAD        reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    DESIGUALDAD     reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    FUNCION         reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    LET             reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    ID              reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    $end            reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    PYC             reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    LD              reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    PRINTLN         reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    PRINT           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    MATCH           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    IF              reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    WHILE           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    RETURN          reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    LOOP            reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    GBAJO           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    NOT             reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    PI              reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    POWF            reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    POW             reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    ENTERO          reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    FLOAT           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    CADENA          reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    CARACTER        reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    TRUE            reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    FALSE           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    IGUAL           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    BARRA           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    COMA            reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    PD              reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    LI              reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    BREAK           reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    CONTINUE        reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .)
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! RESTA           [ reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .) ]
  ! SUMA            [ reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .) ]
  ! MULTI           [ reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .) ]
  ! DIVI            [ reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .) ]
  ! MODULO          [ reduce using rule 118 (expre_relacional -> expresiones MENORIGUAL expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]


state 97

    (119) expre_relacional -> expresiones MENOR expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    OR              reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    AND             reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    MAYORIGUAL      reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    MAYOR           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    MENORIGUAL      reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    MENOR           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    IGUALDAD        reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    DESIGUALDAD     reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    FUNCION         reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    LET             reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    ID              reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    $end            reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    PYC             reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    LD              reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    PRINTLN         reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    PRINT           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    MATCH           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    IF              reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    WHILE           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    RETURN          reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    LOOP            reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    GBAJO           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    NOT             reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    PI              reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    POWF            reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    POW             reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    ENTERO          reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    FLOAT           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    CADENA          reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    CARACTER        reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    TRUE            reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    FALSE           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    IGUAL           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    BARRA           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    COMA            reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    PD              reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    LI              reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    BREAK           reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    CONTINUE        reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .)
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! RESTA           [ reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .) ]
  ! SUMA            [ reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .) ]
  ! MULTI           [ reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .) ]
  ! DIVI            [ reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .) ]
  ! MODULO          [ reduce using rule 119 (expre_relacional -> expresiones MENOR expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]


state 98

    (120) expre_relacional -> expresiones IGUALDAD expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    OR              reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    AND             reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    MAYORIGUAL      reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    MAYOR           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    MENORIGUAL      reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    MENOR           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    IGUALDAD        reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    DESIGUALDAD     reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    FUNCION         reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    LET             reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    ID              reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    $end            reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    PYC             reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    LD              reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    PRINTLN         reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    PRINT           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    MATCH           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    IF              reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    WHILE           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    RETURN          reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    LOOP            reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    GBAJO           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    NOT             reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    PI              reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    POWF            reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    POW             reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    ENTERO          reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    FLOAT           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    CADENA          reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    CARACTER        reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    TRUE            reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    FALSE           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    IGUAL           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    BARRA           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    COMA            reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    PD              reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    LI              reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    BREAK           reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    CONTINUE        reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .)
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! RESTA           [ reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .) ]
  ! SUMA            [ reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .) ]
  ! MULTI           [ reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .) ]
  ! DIVI            [ reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .) ]
  ! MODULO          [ reduce using rule 120 (expre_relacional -> expresiones IGUALDAD expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]


state 99

    (121) expre_relacional -> expresiones DESIGUALDAD expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    OR              reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    AND             reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    MAYORIGUAL      reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    MAYOR           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    MENORIGUAL      reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    MENOR           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    IGUALDAD        reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    DESIGUALDAD     reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    FUNCION         reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    LET             reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    ID              reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    $end            reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    PYC             reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    LD              reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    PRINTLN         reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    PRINT           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    MATCH           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    IF              reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    WHILE           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    RETURN          reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    LOOP            reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    GBAJO           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    NOT             reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    PI              reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    POWF            reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    POW             reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    ENTERO          reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    FLOAT           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    CADENA          reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    CARACTER        reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    TRUE            reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    FALSE           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    IGUAL           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    BARRA           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    COMA            reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    PD              reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    LI              reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    BREAK           reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    CONTINUE        reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .)
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! RESTA           [ reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .) ]
  ! SUMA            [ reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .) ]
  ! MULTI           [ reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .) ]
  ! DIVI            [ reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .) ]
  ! MODULO          [ reduce using rule 121 (expre_relacional -> expresiones DESIGUALDAD expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]


state 100

    (124) expre_aritmetica -> expresiones RESTA expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    OR              reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    AND             reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    MAYORIGUAL      reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    MAYOR           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    MENORIGUAL      reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    MENOR           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    IGUALDAD        reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    DESIGUALDAD     reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    RESTA           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    SUMA            reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    FUNCION         reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    LET             reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    ID              reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    $end            reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    PYC             reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    LD              reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    PRINTLN         reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    PRINT           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    MATCH           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    IF              reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    WHILE           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    RETURN          reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    LOOP            reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    GBAJO           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    NOT             reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    PI              reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    POWF            reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    POW             reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    ENTERO          reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    FLOAT           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    CADENA          reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    CARACTER        reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    TRUE            reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    FALSE           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    IGUAL           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    BARRA           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    COMA            reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    PD              reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    LI              reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    BREAK           reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    CONTINUE        reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .)
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! MULTI           [ reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .) ]
  ! DIVI            [ reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .) ]
  ! MODULO          [ reduce using rule 124 (expre_aritmetica -> expresiones RESTA expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! RESTA           [ shift and go to state 62 ]
  ! SUMA            [ shift and go to state 63 ]


state 101

    (125) expre_aritmetica -> expresiones SUMA expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    OR              reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    AND             reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    MAYORIGUAL      reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    MAYOR           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    MENORIGUAL      reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    MENOR           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    IGUALDAD        reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    DESIGUALDAD     reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    RESTA           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    SUMA            reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    FUNCION         reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    LET             reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    ID              reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    $end            reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    PYC             reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    LD              reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    PRINTLN         reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    PRINT           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    MATCH           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    IF              reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    WHILE           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    RETURN          reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    LOOP            reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    GBAJO           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    NOT             reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    PI              reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    POWF            reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    POW             reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    ENTERO          reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    FLOAT           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    CADENA          reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    CARACTER        reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    TRUE            reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    FALSE           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    IGUAL           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    BARRA           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    COMA            reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    PD              reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    LI              reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    BREAK           reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    CONTINUE        reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .)
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! MULTI           [ reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .) ]
  ! DIVI            [ reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .) ]
  ! MODULO          [ reduce using rule 125 (expre_aritmetica -> expresiones SUMA expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! RESTA           [ shift and go to state 62 ]
  ! SUMA            [ shift and go to state 63 ]


state 102

    (126) expre_aritmetica -> expresiones MULTI expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    OR              reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    AND             reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    MAYORIGUAL      reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    MAYOR           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    MENORIGUAL      reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    MENOR           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    IGUALDAD        reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    DESIGUALDAD     reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    RESTA           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    SUMA            reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    MULTI           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    DIVI            reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    FUNCION         reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    LET             reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    ID              reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    $end            reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    PYC             reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    LD              reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    PRINTLN         reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    PRINT           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    MATCH           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    IF              reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    WHILE           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    RETURN          reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    LOOP            reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    GBAJO           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    NOT             reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    PI              reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    POWF            reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    POW             reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    ENTERO          reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    FLOAT           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    CADENA          reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    CARACTER        reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    TRUE            reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    FALSE           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    IGUAL           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    BARRA           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    COMA            reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    PD              reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    LI              reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    BREAK           reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    CONTINUE        reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .)
    MODULO          shift and go to state 66

  ! MODULO          [ reduce using rule 126 (expre_aritmetica -> expresiones MULTI expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! RESTA           [ shift and go to state 62 ]
  ! SUMA            [ shift and go to state 63 ]
  ! MULTI           [ shift and go to state 64 ]
  ! DIVI            [ shift and go to state 65 ]


state 103

    (127) expre_aritmetica -> expresiones DIVI expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    OR              reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    AND             reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    MAYORIGUAL      reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    MAYOR           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    MENORIGUAL      reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    MENOR           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    IGUALDAD        reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    DESIGUALDAD     reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    RESTA           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    SUMA            reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    MULTI           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    DIVI            reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    FUNCION         reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    LET             reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    ID              reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    $end            reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    PYC             reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    LD              reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    PRINTLN         reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    PRINT           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    MATCH           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    IF              reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    WHILE           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    RETURN          reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    LOOP            reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    GBAJO           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    NOT             reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    PI              reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    POWF            reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    POW             reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    ENTERO          reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    FLOAT           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    CADENA          reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    CARACTER        reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    TRUE            reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    FALSE           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    IGUAL           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    BARRA           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    COMA            reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    PD              reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    LI              reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    BREAK           reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    CONTINUE        reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .)
    MODULO          shift and go to state 66

  ! MODULO          [ reduce using rule 127 (expre_aritmetica -> expresiones DIVI expresiones .) ]
  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! RESTA           [ shift and go to state 62 ]
  ! SUMA            [ shift and go to state 63 ]
  ! MULTI           [ shift and go to state 64 ]
  ! DIVI            [ shift and go to state 65 ]


state 104

    (128) expre_aritmetica -> expresiones MODULO expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PUNTO           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    OR              reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    AND             reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    MAYORIGUAL      reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    MAYOR           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    MENORIGUAL      reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    MENOR           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    IGUALDAD        reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    DESIGUALDAD     reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    RESTA           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    SUMA            reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    MULTI           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    DIVI            reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    MODULO          reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    FUNCION         reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    LET             reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    ID              reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    $end            reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    PYC             reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    LD              reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    PRINTLN         reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    PRINT           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    MATCH           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    IF              reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    WHILE           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    RETURN          reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    LOOP            reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    GBAJO           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    NOT             reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    PI              reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    POWF            reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    POW             reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    ENTERO          reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    FLOAT           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    CADENA          reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    CARACTER        reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    TRUE            reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    FALSE           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    IGUAL           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    BARRA           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    COMA            reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    PD              reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    LI              reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    BREAK           reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)
    CONTINUE        reduce using rule 128 (expre_aritmetica -> expresiones MODULO expresiones .)

  ! PUNTO           [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]
  ! AND             [ shift and go to state 55 ]
  ! MAYORIGUAL      [ shift and go to state 56 ]
  ! MAYOR           [ shift and go to state 57 ]
  ! MENORIGUAL      [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! IGUALDAD        [ shift and go to state 60 ]
  ! DESIGUALDAD     [ shift and go to state 61 ]
  ! RESTA           [ shift and go to state 62 ]
  ! SUMA            [ shift and go to state 63 ]
  ! MULTI           [ shift and go to state 64 ]
  ! DIVI            [ shift and go to state 65 ]
  ! MODULO          [ shift and go to state 66 ]


state 105

    (123) expre_aritmetica -> PI expresiones PD .

    PUNTO           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    OR              reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    AND             reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    MAYORIGUAL      reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    MAYOR           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    MENORIGUAL      reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    MENOR           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    IGUALDAD        reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    DESIGUALDAD     reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    RESTA           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    SUMA            reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    MULTI           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    DIVI            reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    MODULO          reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    FUNCION         reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    LET             reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    ID              reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    $end            reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    PYC             reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    LD              reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    PRINTLN         reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    PRINT           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    MATCH           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    IF              reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    WHILE           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    RETURN          reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    LOOP            reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    GBAJO           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    NOT             reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    PI              reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    POWF            reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    POW             reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    ENTERO          reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    FLOAT           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    CADENA          reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    CARACTER        reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    TRUE            reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    FALSE           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    IGUAL           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    BARRA           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    COMA            reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    PD              reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    LI              reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    BREAK           reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)
    CONTINUE        reduce using rule 123 (expre_aritmetica -> PI expresiones PD .)


state 106

    (129) expre_aritmetica -> POWF PI expresiones . COMA expresiones PD
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    COMA            shift and go to state 147
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 107

    (130) expre_aritmetica -> POW PI expresiones . COMA expresiones PD
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    COMA            shift and go to state 148
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 108

    (46) start_match -> MATCH expresiones LI . matches LD
    (47) matches -> . matches bloque_match
    (48) matches -> . bloque_match
    (21) bloque_match -> . impresiones
    (22) bloque_match -> . asignacion
    (23) bloque_match -> . llamada
    (24) bloque_match -> . start_match
    (25) bloque_match -> . start_if
    (26) bloque_match -> . start_while
    (27) bloque_match -> . return_ins PYC
    (28) bloque_match -> . start_loop
    (29) bloque_match -> .
    (49) bloque_match -> . varios_match IGUAL MAYOR simple_bloque_exp COMA
    (50) bloque_match -> . varios_match IGUAL MAYOR LI list_exp_ins LD
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (30) start_loop -> . LOOP LI lista_bloque LD
    (55) varios_match -> . varios_match BARRA expresiones
    (56) varios_match -> . expresiones
    (57) varios_match -> . GBAJO
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for GBAJO resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for OR resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for AND resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for IGUAL resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for BARRA resolved using rule 29 (bloque_match -> .)
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 29 (bloque_match -> .)
    IGUAL           reduce using rule 29 (bloque_match -> .)
    BARRA           reduce using rule 29 (bloque_match -> .)
    PUNTO           reduce using rule 29 (bloque_match -> .)
    OR              reduce using rule 29 (bloque_match -> .)
    AND             reduce using rule 29 (bloque_match -> .)
    MAYORIGUAL      reduce using rule 29 (bloque_match -> .)
    MAYOR           reduce using rule 29 (bloque_match -> .)
    MENORIGUAL      reduce using rule 29 (bloque_match -> .)
    MENOR           reduce using rule 29 (bloque_match -> .)
    IGUALDAD        reduce using rule 29 (bloque_match -> .)
    DESIGUALDAD     reduce using rule 29 (bloque_match -> .)
    SUMA            reduce using rule 29 (bloque_match -> .)
    MULTI           reduce using rule 29 (bloque_match -> .)
    DIVI            reduce using rule 29 (bloque_match -> .)
    MODULO          reduce using rule 29 (bloque_match -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    LOOP            shift and go to state 38
    GBAJO           shift and go to state 162
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! PRINTLN         [ reduce using rule 29 (bloque_match -> .) ]
  ! PRINT           [ reduce using rule 29 (bloque_match -> .) ]
  ! ID              [ reduce using rule 29 (bloque_match -> .) ]
  ! MATCH           [ reduce using rule 29 (bloque_match -> .) ]
  ! IF              [ reduce using rule 29 (bloque_match -> .) ]
  ! WHILE           [ reduce using rule 29 (bloque_match -> .) ]
  ! RETURN          [ reduce using rule 29 (bloque_match -> .) ]
  ! LOOP            [ reduce using rule 29 (bloque_match -> .) ]
  ! GBAJO           [ reduce using rule 29 (bloque_match -> .) ]
  ! NOT             [ reduce using rule 29 (bloque_match -> .) ]
  ! RESTA           [ reduce using rule 29 (bloque_match -> .) ]
  ! PI              [ reduce using rule 29 (bloque_match -> .) ]
  ! POWF            [ reduce using rule 29 (bloque_match -> .) ]
  ! POW             [ reduce using rule 29 (bloque_match -> .) ]
  ! ENTERO          [ reduce using rule 29 (bloque_match -> .) ]
  ! FLOAT           [ reduce using rule 29 (bloque_match -> .) ]
  ! CADENA          [ reduce using rule 29 (bloque_match -> .) ]
  ! CARACTER        [ reduce using rule 29 (bloque_match -> .) ]
  ! TRUE            [ reduce using rule 29 (bloque_match -> .) ]
  ! FALSE           [ reduce using rule 29 (bloque_match -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! IGUAL           [ reduce using rule 101 (expresiones -> .) ]
  ! BARRA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 149
    matches                        shift and go to state 150
    bloque_match                   shift and go to state 151
    impresiones                    shift and go to state 152
    asignacion                     shift and go to state 153
    llamada                        shift and go to state 154
    start_match                    shift and go to state 155
    start_if                       shift and go to state 156
    start_while                    shift and go to state 157
    return_ins                     shift and go to state 158
    start_loop                     shift and go to state 159
    varios_match                   shift and go to state 160
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 109

    (39) start_if -> IF expresiones LI . list_exp_ins LD
    (40) start_if -> IF expresiones LI . list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> IF expresiones LI . list_exp_ins LD lista_elif
    (42) start_if -> IF expresiones LI . list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (37) list_exp_ins -> . list_exp_ins bloque_exp
    (38) list_exp_ins -> . bloque_exp
    (53) bloque_exp -> . bloque
    (54) bloque_exp -> . expresiones
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 20 (bloque -> .)
    PUNTO           reduce using rule 20 (bloque -> .)
    OR              reduce using rule 20 (bloque -> .)
    AND             reduce using rule 20 (bloque -> .)
    MAYORIGUAL      reduce using rule 20 (bloque -> .)
    MAYOR           reduce using rule 20 (bloque -> .)
    MENORIGUAL      reduce using rule 20 (bloque -> .)
    MENOR           reduce using rule 20 (bloque -> .)
    IGUALDAD        reduce using rule 20 (bloque -> .)
    DESIGUALDAD     reduce using rule 20 (bloque -> .)
    SUMA            reduce using rule 20 (bloque -> .)
    MULTI           reduce using rule 20 (bloque -> .)
    DIVI            reduce using rule 20 (bloque -> .)
    MODULO          reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]
  ! NOT             [ reduce using rule 20 (bloque -> .) ]
  ! RESTA           [ reduce using rule 20 (bloque -> .) ]
  ! PI              [ reduce using rule 20 (bloque -> .) ]
  ! POWF            [ reduce using rule 20 (bloque -> .) ]
  ! POW             [ reduce using rule 20 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 20 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 20 (bloque -> .) ]
  ! CADENA          [ reduce using rule 20 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 20 (bloque -> .) ]
  ! TRUE            [ reduce using rule 20 (bloque -> .) ]
  ! FALSE           [ reduce using rule 20 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! LD              [ reduce using rule 101 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 101 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 101 (expresiones -> .) ]
  ! LET             [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 101 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 101 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 101 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 163
    list_exp_ins                   shift and go to state 164
    bloque_exp                     shift and go to state 165
    bloque                         shift and go to state 166
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 167
    start_match                    shift and go to state 168
    start_if                       shift and go to state 169
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 170
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 110

    (30) start_loop -> LOOP LI lista_bloque . LD
    (7) lista_bloque -> lista_bloque . bloque
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              shift and go to state 171
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 125
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38

  ! LD              [ reduce using rule 20 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]

    bloque                         shift and go to state 172
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    start_match                    shift and go to state 116
    start_if                       shift and go to state 117
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 122

state 111

    (8) lista_bloque -> bloque .

    LD              reduce using rule 8 (lista_bloque -> bloque .)
    PRINTLN         reduce using rule 8 (lista_bloque -> bloque .)
    PRINT           reduce using rule 8 (lista_bloque -> bloque .)
    LET             reduce using rule 8 (lista_bloque -> bloque .)
    ID              reduce using rule 8 (lista_bloque -> bloque .)
    MATCH           reduce using rule 8 (lista_bloque -> bloque .)
    IF              reduce using rule 8 (lista_bloque -> bloque .)
    WHILE           reduce using rule 8 (lista_bloque -> bloque .)
    RETURN          reduce using rule 8 (lista_bloque -> bloque .)
    BREAK           reduce using rule 8 (lista_bloque -> bloque .)
    CONTINUE        reduce using rule 8 (lista_bloque -> bloque .)
    LOOP            reduce using rule 8 (lista_bloque -> bloque .)


state 112

    (9) bloque -> impresiones . PYC

    PYC             shift and go to state 173


state 113

    (10) bloque -> declaracion .

    LD              reduce using rule 10 (bloque -> declaracion .)
    PRINTLN         reduce using rule 10 (bloque -> declaracion .)
    PRINT           reduce using rule 10 (bloque -> declaracion .)
    LET             reduce using rule 10 (bloque -> declaracion .)
    ID              reduce using rule 10 (bloque -> declaracion .)
    MATCH           reduce using rule 10 (bloque -> declaracion .)
    IF              reduce using rule 10 (bloque -> declaracion .)
    WHILE           reduce using rule 10 (bloque -> declaracion .)
    RETURN          reduce using rule 10 (bloque -> declaracion .)
    BREAK           reduce using rule 10 (bloque -> declaracion .)
    CONTINUE        reduce using rule 10 (bloque -> declaracion .)
    LOOP            reduce using rule 10 (bloque -> declaracion .)
    NOT             reduce using rule 10 (bloque -> declaracion .)
    RESTA           reduce using rule 10 (bloque -> declaracion .)
    PI              reduce using rule 10 (bloque -> declaracion .)
    POWF            reduce using rule 10 (bloque -> declaracion .)
    POW             reduce using rule 10 (bloque -> declaracion .)
    ENTERO          reduce using rule 10 (bloque -> declaracion .)
    FLOAT           reduce using rule 10 (bloque -> declaracion .)
    CADENA          reduce using rule 10 (bloque -> declaracion .)
    CARACTER        reduce using rule 10 (bloque -> declaracion .)
    TRUE            reduce using rule 10 (bloque -> declaracion .)
    FALSE           reduce using rule 10 (bloque -> declaracion .)
    PUNTO           reduce using rule 10 (bloque -> declaracion .)
    OR              reduce using rule 10 (bloque -> declaracion .)
    AND             reduce using rule 10 (bloque -> declaracion .)
    MAYORIGUAL      reduce using rule 10 (bloque -> declaracion .)
    MAYOR           reduce using rule 10 (bloque -> declaracion .)
    MENORIGUAL      reduce using rule 10 (bloque -> declaracion .)
    MENOR           reduce using rule 10 (bloque -> declaracion .)
    IGUALDAD        reduce using rule 10 (bloque -> declaracion .)
    DESIGUALDAD     reduce using rule 10 (bloque -> declaracion .)
    SUMA            reduce using rule 10 (bloque -> declaracion .)
    MULTI           reduce using rule 10 (bloque -> declaracion .)
    DIVI            reduce using rule 10 (bloque -> declaracion .)
    MODULO          reduce using rule 10 (bloque -> declaracion .)


state 114

    (11) bloque -> asignacion . PYC

    PYC             shift and go to state 174


state 115

    (12) bloque -> llamada . PYC

    PYC             shift and go to state 175


state 116

    (13) bloque -> start_match .

    LD              reduce using rule 13 (bloque -> start_match .)
    PRINTLN         reduce using rule 13 (bloque -> start_match .)
    PRINT           reduce using rule 13 (bloque -> start_match .)
    LET             reduce using rule 13 (bloque -> start_match .)
    ID              reduce using rule 13 (bloque -> start_match .)
    MATCH           reduce using rule 13 (bloque -> start_match .)
    IF              reduce using rule 13 (bloque -> start_match .)
    WHILE           reduce using rule 13 (bloque -> start_match .)
    RETURN          reduce using rule 13 (bloque -> start_match .)
    BREAK           reduce using rule 13 (bloque -> start_match .)
    CONTINUE        reduce using rule 13 (bloque -> start_match .)
    LOOP            reduce using rule 13 (bloque -> start_match .)


state 117

    (14) bloque -> start_if .

    LD              reduce using rule 14 (bloque -> start_if .)
    PRINTLN         reduce using rule 14 (bloque -> start_if .)
    PRINT           reduce using rule 14 (bloque -> start_if .)
    LET             reduce using rule 14 (bloque -> start_if .)
    ID              reduce using rule 14 (bloque -> start_if .)
    MATCH           reduce using rule 14 (bloque -> start_if .)
    IF              reduce using rule 14 (bloque -> start_if .)
    WHILE           reduce using rule 14 (bloque -> start_if .)
    RETURN          reduce using rule 14 (bloque -> start_if .)
    BREAK           reduce using rule 14 (bloque -> start_if .)
    CONTINUE        reduce using rule 14 (bloque -> start_if .)
    LOOP            reduce using rule 14 (bloque -> start_if .)


state 118

    (15) bloque -> start_while .

    LD              reduce using rule 15 (bloque -> start_while .)
    PRINTLN         reduce using rule 15 (bloque -> start_while .)
    PRINT           reduce using rule 15 (bloque -> start_while .)
    LET             reduce using rule 15 (bloque -> start_while .)
    ID              reduce using rule 15 (bloque -> start_while .)
    MATCH           reduce using rule 15 (bloque -> start_while .)
    IF              reduce using rule 15 (bloque -> start_while .)
    WHILE           reduce using rule 15 (bloque -> start_while .)
    RETURN          reduce using rule 15 (bloque -> start_while .)
    BREAK           reduce using rule 15 (bloque -> start_while .)
    CONTINUE        reduce using rule 15 (bloque -> start_while .)
    LOOP            reduce using rule 15 (bloque -> start_while .)
    NOT             reduce using rule 15 (bloque -> start_while .)
    RESTA           reduce using rule 15 (bloque -> start_while .)
    PI              reduce using rule 15 (bloque -> start_while .)
    POWF            reduce using rule 15 (bloque -> start_while .)
    POW             reduce using rule 15 (bloque -> start_while .)
    ENTERO          reduce using rule 15 (bloque -> start_while .)
    FLOAT           reduce using rule 15 (bloque -> start_while .)
    CADENA          reduce using rule 15 (bloque -> start_while .)
    CARACTER        reduce using rule 15 (bloque -> start_while .)
    TRUE            reduce using rule 15 (bloque -> start_while .)
    FALSE           reduce using rule 15 (bloque -> start_while .)
    PUNTO           reduce using rule 15 (bloque -> start_while .)
    OR              reduce using rule 15 (bloque -> start_while .)
    AND             reduce using rule 15 (bloque -> start_while .)
    MAYORIGUAL      reduce using rule 15 (bloque -> start_while .)
    MAYOR           reduce using rule 15 (bloque -> start_while .)
    MENORIGUAL      reduce using rule 15 (bloque -> start_while .)
    MENOR           reduce using rule 15 (bloque -> start_while .)
    IGUALDAD        reduce using rule 15 (bloque -> start_while .)
    DESIGUALDAD     reduce using rule 15 (bloque -> start_while .)
    SUMA            reduce using rule 15 (bloque -> start_while .)
    MULTI           reduce using rule 15 (bloque -> start_while .)
    DIVI            reduce using rule 15 (bloque -> start_while .)
    MODULO          reduce using rule 15 (bloque -> start_while .)


state 119

    (16) bloque -> return_ins . PYC

    PYC             shift and go to state 176


state 120

    (17) bloque -> break_ins . PYC

    PYC             shift and go to state 177


state 121

    (18) bloque -> continue_ins . PYC

    PYC             shift and go to state 178


state 122

    (19) bloque -> start_loop .

    LD              reduce using rule 19 (bloque -> start_loop .)
    PRINTLN         reduce using rule 19 (bloque -> start_loop .)
    PRINT           reduce using rule 19 (bloque -> start_loop .)
    LET             reduce using rule 19 (bloque -> start_loop .)
    ID              reduce using rule 19 (bloque -> start_loop .)
    MATCH           reduce using rule 19 (bloque -> start_loop .)
    IF              reduce using rule 19 (bloque -> start_loop .)
    WHILE           reduce using rule 19 (bloque -> start_loop .)
    RETURN          reduce using rule 19 (bloque -> start_loop .)
    BREAK           reduce using rule 19 (bloque -> start_loop .)
    CONTINUE        reduce using rule 19 (bloque -> start_loop .)
    LOOP            reduce using rule 19 (bloque -> start_loop .)


state 123

    (90) impresiones -> PRINTLN . PI CADENA PD
    (92) impresiones -> PRINTLN . PI CADENA COMA impresion_valores PD

    PI              shift and go to state 179


state 124

    (91) impresiones -> PRINT . PI CADENA PD
    (93) impresiones -> PRINT . PI CADENA COMA impresion_valores PD

    PI              shift and go to state 180


state 125

    (79) asignacion -> ID . IGUAL expresiones
    (58) llamada -> ID . PI PD
    (59) llamada -> ID . PI lista_expres PD

    IGUAL           shift and go to state 13
    PI              shift and go to state 52


state 126

    (36) start_while -> WHILE . expresiones LI lista_bloque LD
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    LI              reduce using rule 101 (expresiones -> .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 181
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 127

    (34) return_ins -> RETURN .
    (35) return_ins -> RETURN . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! reduce/reduce conflict for PYC resolved using rule 34 (return_ins -> RETURN .)
  ! shift/reduce conflict for RESTA resolved as shift
    PYC             reduce using rule 34 (return_ins -> RETURN .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! PYC             [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 182
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 128

    (32) break_ins -> BREAK .
    (33) break_ins -> BREAK . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! reduce/reduce conflict for PYC resolved using rule 32 (break_ins -> BREAK .)
  ! shift/reduce conflict for RESTA resolved as shift
    PYC             reduce using rule 32 (break_ins -> BREAK .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! PYC             [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 183
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 129

    (31) continue_ins -> CONTINUE .

    PYC             reduce using rule 31 (continue_ins -> CONTINUE .)


state 130

    (77) declaracion -> LET mutable ID tipado PYC .

    FUNCION         reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    LET             reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    ID              reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    $end            reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    LD              reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    PRINTLN         reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    PRINT           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    MATCH           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    IF              reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    WHILE           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    RETURN          reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    BREAK           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    CONTINUE        reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    LOOP            reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    NOT             reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    RESTA           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    PI              reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    POWF            reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    POW             reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    ENTERO          reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    FLOAT           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    CADENA          reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    CARACTER        reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    TRUE            reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    FALSE           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    PUNTO           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    OR              reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    AND             reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    MAYORIGUAL      reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    MAYOR           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    MENORIGUAL      reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    MENOR           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    IGUALDAD        reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    DESIGUALDAD     reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    SUMA            reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    MULTI           reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    DIVI            reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)
    MODULO          reduce using rule 77 (declaracion -> LET mutable ID tipado PYC .)


state 131

    (78) declaracion -> LET mutable ID tipado IGUAL . expresiones PYC
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PYC             reduce using rule 101 (expresiones -> .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 184
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 132

    (82) tipado -> DP tipo_datos .

    PYC             reduce using rule 82 (tipado -> DP tipo_datos .)
    IGUAL           reduce using rule 82 (tipado -> DP tipo_datos .)
    PD              reduce using rule 82 (tipado -> DP tipo_datos .)
    COMA            reduce using rule 82 (tipado -> DP tipo_datos .)


state 133

    (84) tipo_datos -> TIPOINT .

    PYC             reduce using rule 84 (tipo_datos -> TIPOINT .)
    IGUAL           reduce using rule 84 (tipo_datos -> TIPOINT .)
    PD              reduce using rule 84 (tipo_datos -> TIPOINT .)
    COMA            reduce using rule 84 (tipo_datos -> TIPOINT .)
    LI              reduce using rule 84 (tipo_datos -> TIPOINT .)
    MAYOR           reduce using rule 84 (tipo_datos -> TIPOINT .)


state 134

    (85) tipo_datos -> TIPOFLOAT .

    PYC             reduce using rule 85 (tipo_datos -> TIPOFLOAT .)
    IGUAL           reduce using rule 85 (tipo_datos -> TIPOFLOAT .)
    PD              reduce using rule 85 (tipo_datos -> TIPOFLOAT .)
    COMA            reduce using rule 85 (tipo_datos -> TIPOFLOAT .)
    LI              reduce using rule 85 (tipo_datos -> TIPOFLOAT .)
    MAYOR           reduce using rule 85 (tipo_datos -> TIPOFLOAT .)


state 135

    (86) tipo_datos -> TIPOCHAR .

    PYC             reduce using rule 86 (tipo_datos -> TIPOCHAR .)
    IGUAL           reduce using rule 86 (tipo_datos -> TIPOCHAR .)
    PD              reduce using rule 86 (tipo_datos -> TIPOCHAR .)
    COMA            reduce using rule 86 (tipo_datos -> TIPOCHAR .)
    LI              reduce using rule 86 (tipo_datos -> TIPOCHAR .)
    MAYOR           reduce using rule 86 (tipo_datos -> TIPOCHAR .)


state 136

    (87) tipo_datos -> TIPOSTRING .

    PYC             reduce using rule 87 (tipo_datos -> TIPOSTRING .)
    IGUAL           reduce using rule 87 (tipo_datos -> TIPOSTRING .)
    PD              reduce using rule 87 (tipo_datos -> TIPOSTRING .)
    COMA            reduce using rule 87 (tipo_datos -> TIPOSTRING .)
    LI              reduce using rule 87 (tipo_datos -> TIPOSTRING .)
    MAYOR           reduce using rule 87 (tipo_datos -> TIPOSTRING .)


state 137

    (88) tipo_datos -> DIRSTRING .

    PYC             reduce using rule 88 (tipo_datos -> DIRSTRING .)
    IGUAL           reduce using rule 88 (tipo_datos -> DIRSTRING .)
    PD              reduce using rule 88 (tipo_datos -> DIRSTRING .)
    COMA            reduce using rule 88 (tipo_datos -> DIRSTRING .)
    LI              reduce using rule 88 (tipo_datos -> DIRSTRING .)
    MAYOR           reduce using rule 88 (tipo_datos -> DIRSTRING .)


state 138

    (89) tipo_datos -> TIPOBOOL .

    PYC             reduce using rule 89 (tipo_datos -> TIPOBOOL .)
    IGUAL           reduce using rule 89 (tipo_datos -> TIPOBOOL .)
    PD              reduce using rule 89 (tipo_datos -> TIPOBOOL .)
    COMA            reduce using rule 89 (tipo_datos -> TIPOBOOL .)
    LI              reduce using rule 89 (tipo_datos -> TIPOBOOL .)
    MAYOR           reduce using rule 89 (tipo_datos -> TIPOBOOL .)


state 139

    (62) funcion -> FUNCION MAIN PI PD LI lista_bloque . LD
    (7) lista_bloque -> lista_bloque . bloque
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              shift and go to state 185
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 125
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38

  ! LD              [ reduce using rule 20 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]

    bloque                         shift and go to state 172
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    start_match                    shift and go to state 116
    start_if                       shift and go to state 117
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 122

state 140

    (63) funcion -> FUNCION ID PI PD tipo_funcion LI . lista_bloque LD
    (7) lista_bloque -> . lista_bloque bloque
    (8) lista_bloque -> . bloque
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 125
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38

  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]

    lista_bloque                   shift and go to state 186
    bloque                         shift and go to state 111
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    start_match                    shift and go to state 116
    start_if                       shift and go to state 117
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 122

state 141

    (74) tipo_funcion -> RESTA MAYOR . tipo_datos
    (75) tipo_funcion -> RESTA MAYOR . VECTOR MENOR tipo_datos MAYOR
    (84) tipo_datos -> . TIPOINT
    (85) tipo_datos -> . TIPOFLOAT
    (86) tipo_datos -> . TIPOCHAR
    (87) tipo_datos -> . TIPOSTRING
    (88) tipo_datos -> . DIRSTRING
    (89) tipo_datos -> . TIPOBOOL

    VECTOR          shift and go to state 188
    TIPOINT         shift and go to state 133
    TIPOFLOAT       shift and go to state 134
    TIPOCHAR        shift and go to state 135
    TIPOSTRING      shift and go to state 136
    DIRSTRING       shift and go to state 137
    TIPOBOOL        shift and go to state 138

    tipo_datos                     shift and go to state 187

state 142

    (64) funcion -> FUNCION ID PI parametros PD tipo_funcion . LI lista_bloque LD

    LI              shift and go to state 189


state 143

    (65) parametros -> parametros COMA definiciones .

    PD              reduce using rule 65 (parametros -> parametros COMA definiciones .)
    COMA            reduce using rule 65 (parametros -> parametros COMA definiciones .)


state 144

    (67) definiciones -> referencias mutable ID . VECTOR tipado_vector
    (68) definiciones -> referencias mutable ID . tipado
    (82) tipado -> . DP tipo_datos
    (83) tipado -> .

    VECTOR          shift and go to state 190
    DP              shift and go to state 76
    PD              reduce using rule 83 (tipado -> .)
    COMA            reduce using rule 83 (tipado -> .)

    tipado                         shift and go to state 191

state 145

    (59) llamada -> ID PI lista_expres PD .

    PUNTO           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    OR              reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    AND             reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    MAYORIGUAL      reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    MAYOR           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    MENORIGUAL      reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    MENOR           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    IGUALDAD        reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    DESIGUALDAD     reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    RESTA           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    SUMA            reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    MULTI           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    DIVI            reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    MODULO          reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    FUNCION         reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    LET             reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    ID              reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    $end            reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    PYC             reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    LD              reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    PRINTLN         reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    PRINT           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    MATCH           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    IF              reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    WHILE           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    RETURN          reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    LOOP            reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    GBAJO           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    NOT             reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    PI              reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    POWF            reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    POW             reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    ENTERO          reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    FLOAT           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    CADENA          reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    CARACTER        reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    TRUE            reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    FALSE           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    IGUAL           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    BARRA           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    COMA            reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    PD              reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    LI              reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    BREAK           reduce using rule 59 (llamada -> ID PI lista_expres PD .)
    CONTINUE        reduce using rule 59 (llamada -> ID PI lista_expres PD .)


state 146

    (60) lista_expres -> lista_expres COMA . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 192
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 147

    (129) expre_aritmetica -> POWF PI expresiones COMA . expresiones PD
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PD              reduce using rule 101 (expresiones -> .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 193
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 148

    (130) expre_aritmetica -> POW PI expresiones COMA . expresiones PD
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PD              reduce using rule 101 (expresiones -> .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 194
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 149

    (56) varios_match -> expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    IGUAL           reduce using rule 56 (varios_match -> expresiones .)
    BARRA           reduce using rule 56 (varios_match -> expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 150

    (46) start_match -> MATCH expresiones LI matches . LD
    (47) matches -> matches . bloque_match
    (21) bloque_match -> . impresiones
    (22) bloque_match -> . asignacion
    (23) bloque_match -> . llamada
    (24) bloque_match -> . start_match
    (25) bloque_match -> . start_if
    (26) bloque_match -> . start_while
    (27) bloque_match -> . return_ins PYC
    (28) bloque_match -> . start_loop
    (29) bloque_match -> .
    (49) bloque_match -> . varios_match IGUAL MAYOR simple_bloque_exp COMA
    (50) bloque_match -> . varios_match IGUAL MAYOR LI list_exp_ins LD
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (30) start_loop -> . LOOP LI lista_bloque LD
    (55) varios_match -> . varios_match BARRA expresiones
    (56) varios_match -> . expresiones
    (57) varios_match -> . GBAJO
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for GBAJO resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for OR resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for AND resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for IGUAL resolved using rule 29 (bloque_match -> .)
  ! reduce/reduce conflict for BARRA resolved using rule 29 (bloque_match -> .)
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 195
    IGUAL           reduce using rule 29 (bloque_match -> .)
    BARRA           reduce using rule 29 (bloque_match -> .)
    PUNTO           reduce using rule 29 (bloque_match -> .)
    OR              reduce using rule 29 (bloque_match -> .)
    AND             reduce using rule 29 (bloque_match -> .)
    MAYORIGUAL      reduce using rule 29 (bloque_match -> .)
    MAYOR           reduce using rule 29 (bloque_match -> .)
    MENORIGUAL      reduce using rule 29 (bloque_match -> .)
    MENOR           reduce using rule 29 (bloque_match -> .)
    IGUALDAD        reduce using rule 29 (bloque_match -> .)
    DESIGUALDAD     reduce using rule 29 (bloque_match -> .)
    SUMA            reduce using rule 29 (bloque_match -> .)
    MULTI           reduce using rule 29 (bloque_match -> .)
    DIVI            reduce using rule 29 (bloque_match -> .)
    MODULO          reduce using rule 29 (bloque_match -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    LOOP            shift and go to state 38
    GBAJO           shift and go to state 162
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! LD              [ reduce using rule 29 (bloque_match -> .) ]
  ! PRINTLN         [ reduce using rule 29 (bloque_match -> .) ]
  ! PRINT           [ reduce using rule 29 (bloque_match -> .) ]
  ! ID              [ reduce using rule 29 (bloque_match -> .) ]
  ! MATCH           [ reduce using rule 29 (bloque_match -> .) ]
  ! IF              [ reduce using rule 29 (bloque_match -> .) ]
  ! WHILE           [ reduce using rule 29 (bloque_match -> .) ]
  ! RETURN          [ reduce using rule 29 (bloque_match -> .) ]
  ! LOOP            [ reduce using rule 29 (bloque_match -> .) ]
  ! GBAJO           [ reduce using rule 29 (bloque_match -> .) ]
  ! NOT             [ reduce using rule 29 (bloque_match -> .) ]
  ! RESTA           [ reduce using rule 29 (bloque_match -> .) ]
  ! PI              [ reduce using rule 29 (bloque_match -> .) ]
  ! POWF            [ reduce using rule 29 (bloque_match -> .) ]
  ! POW             [ reduce using rule 29 (bloque_match -> .) ]
  ! ENTERO          [ reduce using rule 29 (bloque_match -> .) ]
  ! FLOAT           [ reduce using rule 29 (bloque_match -> .) ]
  ! CADENA          [ reduce using rule 29 (bloque_match -> .) ]
  ! CARACTER        [ reduce using rule 29 (bloque_match -> .) ]
  ! TRUE            [ reduce using rule 29 (bloque_match -> .) ]
  ! FALSE           [ reduce using rule 29 (bloque_match -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! IGUAL           [ reduce using rule 101 (expresiones -> .) ]
  ! BARRA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 149
    bloque_match                   shift and go to state 196
    impresiones                    shift and go to state 152
    asignacion                     shift and go to state 153
    llamada                        shift and go to state 154
    start_match                    shift and go to state 155
    start_if                       shift and go to state 156
    start_while                    shift and go to state 157
    return_ins                     shift and go to state 158
    start_loop                     shift and go to state 159
    varios_match                   shift and go to state 160
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 151

    (48) matches -> bloque_match .

    LD              reduce using rule 48 (matches -> bloque_match .)
    PRINTLN         reduce using rule 48 (matches -> bloque_match .)
    PRINT           reduce using rule 48 (matches -> bloque_match .)
    ID              reduce using rule 48 (matches -> bloque_match .)
    MATCH           reduce using rule 48 (matches -> bloque_match .)
    IF              reduce using rule 48 (matches -> bloque_match .)
    WHILE           reduce using rule 48 (matches -> bloque_match .)
    RETURN          reduce using rule 48 (matches -> bloque_match .)
    LOOP            reduce using rule 48 (matches -> bloque_match .)
    GBAJO           reduce using rule 48 (matches -> bloque_match .)
    NOT             reduce using rule 48 (matches -> bloque_match .)
    RESTA           reduce using rule 48 (matches -> bloque_match .)
    PI              reduce using rule 48 (matches -> bloque_match .)
    POWF            reduce using rule 48 (matches -> bloque_match .)
    POW             reduce using rule 48 (matches -> bloque_match .)
    ENTERO          reduce using rule 48 (matches -> bloque_match .)
    FLOAT           reduce using rule 48 (matches -> bloque_match .)
    CADENA          reduce using rule 48 (matches -> bloque_match .)
    CARACTER        reduce using rule 48 (matches -> bloque_match .)
    TRUE            reduce using rule 48 (matches -> bloque_match .)
    FALSE           reduce using rule 48 (matches -> bloque_match .)
    IGUAL           reduce using rule 48 (matches -> bloque_match .)
    BARRA           reduce using rule 48 (matches -> bloque_match .)
    PUNTO           reduce using rule 48 (matches -> bloque_match .)
    OR              reduce using rule 48 (matches -> bloque_match .)
    AND             reduce using rule 48 (matches -> bloque_match .)
    MAYORIGUAL      reduce using rule 48 (matches -> bloque_match .)
    MAYOR           reduce using rule 48 (matches -> bloque_match .)
    MENORIGUAL      reduce using rule 48 (matches -> bloque_match .)
    MENOR           reduce using rule 48 (matches -> bloque_match .)
    IGUALDAD        reduce using rule 48 (matches -> bloque_match .)
    DESIGUALDAD     reduce using rule 48 (matches -> bloque_match .)
    SUMA            reduce using rule 48 (matches -> bloque_match .)
    MULTI           reduce using rule 48 (matches -> bloque_match .)
    DIVI            reduce using rule 48 (matches -> bloque_match .)
    MODULO          reduce using rule 48 (matches -> bloque_match .)


state 152

    (21) bloque_match -> impresiones .

    LD              reduce using rule 21 (bloque_match -> impresiones .)
    PRINTLN         reduce using rule 21 (bloque_match -> impresiones .)
    PRINT           reduce using rule 21 (bloque_match -> impresiones .)
    ID              reduce using rule 21 (bloque_match -> impresiones .)
    MATCH           reduce using rule 21 (bloque_match -> impresiones .)
    IF              reduce using rule 21 (bloque_match -> impresiones .)
    WHILE           reduce using rule 21 (bloque_match -> impresiones .)
    RETURN          reduce using rule 21 (bloque_match -> impresiones .)
    LOOP            reduce using rule 21 (bloque_match -> impresiones .)
    GBAJO           reduce using rule 21 (bloque_match -> impresiones .)
    NOT             reduce using rule 21 (bloque_match -> impresiones .)
    RESTA           reduce using rule 21 (bloque_match -> impresiones .)
    PI              reduce using rule 21 (bloque_match -> impresiones .)
    POWF            reduce using rule 21 (bloque_match -> impresiones .)
    POW             reduce using rule 21 (bloque_match -> impresiones .)
    ENTERO          reduce using rule 21 (bloque_match -> impresiones .)
    FLOAT           reduce using rule 21 (bloque_match -> impresiones .)
    CADENA          reduce using rule 21 (bloque_match -> impresiones .)
    CARACTER        reduce using rule 21 (bloque_match -> impresiones .)
    TRUE            reduce using rule 21 (bloque_match -> impresiones .)
    FALSE           reduce using rule 21 (bloque_match -> impresiones .)
    IGUAL           reduce using rule 21 (bloque_match -> impresiones .)
    BARRA           reduce using rule 21 (bloque_match -> impresiones .)
    PUNTO           reduce using rule 21 (bloque_match -> impresiones .)
    OR              reduce using rule 21 (bloque_match -> impresiones .)
    AND             reduce using rule 21 (bloque_match -> impresiones .)
    MAYORIGUAL      reduce using rule 21 (bloque_match -> impresiones .)
    MAYOR           reduce using rule 21 (bloque_match -> impresiones .)
    MENORIGUAL      reduce using rule 21 (bloque_match -> impresiones .)
    MENOR           reduce using rule 21 (bloque_match -> impresiones .)
    IGUALDAD        reduce using rule 21 (bloque_match -> impresiones .)
    DESIGUALDAD     reduce using rule 21 (bloque_match -> impresiones .)
    SUMA            reduce using rule 21 (bloque_match -> impresiones .)
    MULTI           reduce using rule 21 (bloque_match -> impresiones .)
    DIVI            reduce using rule 21 (bloque_match -> impresiones .)
    MODULO          reduce using rule 21 (bloque_match -> impresiones .)
    COMA            reduce using rule 21 (bloque_match -> impresiones .)


state 153

    (22) bloque_match -> asignacion .

    LD              reduce using rule 22 (bloque_match -> asignacion .)
    PRINTLN         reduce using rule 22 (bloque_match -> asignacion .)
    PRINT           reduce using rule 22 (bloque_match -> asignacion .)
    ID              reduce using rule 22 (bloque_match -> asignacion .)
    MATCH           reduce using rule 22 (bloque_match -> asignacion .)
    IF              reduce using rule 22 (bloque_match -> asignacion .)
    WHILE           reduce using rule 22 (bloque_match -> asignacion .)
    RETURN          reduce using rule 22 (bloque_match -> asignacion .)
    LOOP            reduce using rule 22 (bloque_match -> asignacion .)
    GBAJO           reduce using rule 22 (bloque_match -> asignacion .)
    NOT             reduce using rule 22 (bloque_match -> asignacion .)
    RESTA           reduce using rule 22 (bloque_match -> asignacion .)
    PI              reduce using rule 22 (bloque_match -> asignacion .)
    POWF            reduce using rule 22 (bloque_match -> asignacion .)
    POW             reduce using rule 22 (bloque_match -> asignacion .)
    ENTERO          reduce using rule 22 (bloque_match -> asignacion .)
    FLOAT           reduce using rule 22 (bloque_match -> asignacion .)
    CADENA          reduce using rule 22 (bloque_match -> asignacion .)
    CARACTER        reduce using rule 22 (bloque_match -> asignacion .)
    TRUE            reduce using rule 22 (bloque_match -> asignacion .)
    FALSE           reduce using rule 22 (bloque_match -> asignacion .)
    IGUAL           reduce using rule 22 (bloque_match -> asignacion .)
    BARRA           reduce using rule 22 (bloque_match -> asignacion .)
    PUNTO           reduce using rule 22 (bloque_match -> asignacion .)
    OR              reduce using rule 22 (bloque_match -> asignacion .)
    AND             reduce using rule 22 (bloque_match -> asignacion .)
    MAYORIGUAL      reduce using rule 22 (bloque_match -> asignacion .)
    MAYOR           reduce using rule 22 (bloque_match -> asignacion .)
    MENORIGUAL      reduce using rule 22 (bloque_match -> asignacion .)
    MENOR           reduce using rule 22 (bloque_match -> asignacion .)
    IGUALDAD        reduce using rule 22 (bloque_match -> asignacion .)
    DESIGUALDAD     reduce using rule 22 (bloque_match -> asignacion .)
    SUMA            reduce using rule 22 (bloque_match -> asignacion .)
    MULTI           reduce using rule 22 (bloque_match -> asignacion .)
    DIVI            reduce using rule 22 (bloque_match -> asignacion .)
    MODULO          reduce using rule 22 (bloque_match -> asignacion .)
    COMA            reduce using rule 22 (bloque_match -> asignacion .)


state 154

    (23) bloque_match -> llamada .
    (106) expre_valor -> llamada .

  ! reduce/reduce conflict for PUNTO resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for OR resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for AND resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MAYOR resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MENOR resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for RESTA resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for SUMA resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MULTI resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for DIVI resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for IGUAL resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for BARRA resolved using rule 23 (bloque_match -> llamada .)
  ! reduce/reduce conflict for COMA resolved using rule 23 (bloque_match -> llamada .)
    LD              reduce using rule 23 (bloque_match -> llamada .)
    PRINTLN         reduce using rule 23 (bloque_match -> llamada .)
    PRINT           reduce using rule 23 (bloque_match -> llamada .)
    ID              reduce using rule 23 (bloque_match -> llamada .)
    MATCH           reduce using rule 23 (bloque_match -> llamada .)
    IF              reduce using rule 23 (bloque_match -> llamada .)
    WHILE           reduce using rule 23 (bloque_match -> llamada .)
    RETURN          reduce using rule 23 (bloque_match -> llamada .)
    LOOP            reduce using rule 23 (bloque_match -> llamada .)
    GBAJO           reduce using rule 23 (bloque_match -> llamada .)
    NOT             reduce using rule 23 (bloque_match -> llamada .)
    RESTA           reduce using rule 23 (bloque_match -> llamada .)
    PI              reduce using rule 23 (bloque_match -> llamada .)
    POWF            reduce using rule 23 (bloque_match -> llamada .)
    POW             reduce using rule 23 (bloque_match -> llamada .)
    ENTERO          reduce using rule 23 (bloque_match -> llamada .)
    FLOAT           reduce using rule 23 (bloque_match -> llamada .)
    CADENA          reduce using rule 23 (bloque_match -> llamada .)
    CARACTER        reduce using rule 23 (bloque_match -> llamada .)
    TRUE            reduce using rule 23 (bloque_match -> llamada .)
    FALSE           reduce using rule 23 (bloque_match -> llamada .)
    IGUAL           reduce using rule 23 (bloque_match -> llamada .)
    BARRA           reduce using rule 23 (bloque_match -> llamada .)
    PUNTO           reduce using rule 23 (bloque_match -> llamada .)
    OR              reduce using rule 23 (bloque_match -> llamada .)
    AND             reduce using rule 23 (bloque_match -> llamada .)
    MAYORIGUAL      reduce using rule 23 (bloque_match -> llamada .)
    MAYOR           reduce using rule 23 (bloque_match -> llamada .)
    MENORIGUAL      reduce using rule 23 (bloque_match -> llamada .)
    MENOR           reduce using rule 23 (bloque_match -> llamada .)
    IGUALDAD        reduce using rule 23 (bloque_match -> llamada .)
    DESIGUALDAD     reduce using rule 23 (bloque_match -> llamada .)
    SUMA            reduce using rule 23 (bloque_match -> llamada .)
    MULTI           reduce using rule 23 (bloque_match -> llamada .)
    DIVI            reduce using rule 23 (bloque_match -> llamada .)
    MODULO          reduce using rule 23 (bloque_match -> llamada .)
    COMA            reduce using rule 23 (bloque_match -> llamada .)

  ! PUNTO           [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! OR              [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! AND             [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! MAYORIGUAL      [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! MAYOR           [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! MENORIGUAL      [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! MENOR           [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! IGUALDAD        [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! DESIGUALDAD     [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! RESTA           [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! SUMA            [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! MULTI           [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! DIVI            [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! MODULO          [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! IGUAL           [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! BARRA           [ reduce using rule 106 (expre_valor -> llamada .) ]
  ! COMA            [ reduce using rule 106 (expre_valor -> llamada .) ]


state 155

    (24) bloque_match -> start_match .
    (103) expre_valor -> start_match .

  ! reduce/reduce conflict for PUNTO resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for OR resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for AND resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MAYOR resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MENOR resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for RESTA resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for SUMA resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MULTI resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for DIVI resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for MODULO resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for IGUAL resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for BARRA resolved using rule 24 (bloque_match -> start_match .)
  ! reduce/reduce conflict for COMA resolved using rule 24 (bloque_match -> start_match .)
    LD              reduce using rule 24 (bloque_match -> start_match .)
    PRINTLN         reduce using rule 24 (bloque_match -> start_match .)
    PRINT           reduce using rule 24 (bloque_match -> start_match .)
    ID              reduce using rule 24 (bloque_match -> start_match .)
    MATCH           reduce using rule 24 (bloque_match -> start_match .)
    IF              reduce using rule 24 (bloque_match -> start_match .)
    WHILE           reduce using rule 24 (bloque_match -> start_match .)
    RETURN          reduce using rule 24 (bloque_match -> start_match .)
    LOOP            reduce using rule 24 (bloque_match -> start_match .)
    GBAJO           reduce using rule 24 (bloque_match -> start_match .)
    NOT             reduce using rule 24 (bloque_match -> start_match .)
    RESTA           reduce using rule 24 (bloque_match -> start_match .)
    PI              reduce using rule 24 (bloque_match -> start_match .)
    POWF            reduce using rule 24 (bloque_match -> start_match .)
    POW             reduce using rule 24 (bloque_match -> start_match .)
    ENTERO          reduce using rule 24 (bloque_match -> start_match .)
    FLOAT           reduce using rule 24 (bloque_match -> start_match .)
    CADENA          reduce using rule 24 (bloque_match -> start_match .)
    CARACTER        reduce using rule 24 (bloque_match -> start_match .)
    TRUE            reduce using rule 24 (bloque_match -> start_match .)
    FALSE           reduce using rule 24 (bloque_match -> start_match .)
    IGUAL           reduce using rule 24 (bloque_match -> start_match .)
    BARRA           reduce using rule 24 (bloque_match -> start_match .)
    PUNTO           reduce using rule 24 (bloque_match -> start_match .)
    OR              reduce using rule 24 (bloque_match -> start_match .)
    AND             reduce using rule 24 (bloque_match -> start_match .)
    MAYORIGUAL      reduce using rule 24 (bloque_match -> start_match .)
    MAYOR           reduce using rule 24 (bloque_match -> start_match .)
    MENORIGUAL      reduce using rule 24 (bloque_match -> start_match .)
    MENOR           reduce using rule 24 (bloque_match -> start_match .)
    IGUALDAD        reduce using rule 24 (bloque_match -> start_match .)
    DESIGUALDAD     reduce using rule 24 (bloque_match -> start_match .)
    SUMA            reduce using rule 24 (bloque_match -> start_match .)
    MULTI           reduce using rule 24 (bloque_match -> start_match .)
    DIVI            reduce using rule 24 (bloque_match -> start_match .)
    MODULO          reduce using rule 24 (bloque_match -> start_match .)
    COMA            reduce using rule 24 (bloque_match -> start_match .)

  ! PUNTO           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! OR              [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! AND             [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MAYORIGUAL      [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MAYOR           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MENORIGUAL      [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MENOR           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! IGUALDAD        [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! DESIGUALDAD     [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! RESTA           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! SUMA            [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MULTI           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! DIVI            [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MODULO          [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! IGUAL           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! BARRA           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! COMA            [ reduce using rule 103 (expre_valor -> start_match .) ]


state 156

    (25) bloque_match -> start_if .
    (104) expre_valor -> start_if .

  ! reduce/reduce conflict for PUNTO resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for OR resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for AND resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MAYOR resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MENOR resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for RESTA resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for SUMA resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MULTI resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for DIVI resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for MODULO resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for IGUAL resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for BARRA resolved using rule 25 (bloque_match -> start_if .)
  ! reduce/reduce conflict for COMA resolved using rule 25 (bloque_match -> start_if .)
    LD              reduce using rule 25 (bloque_match -> start_if .)
    PRINTLN         reduce using rule 25 (bloque_match -> start_if .)
    PRINT           reduce using rule 25 (bloque_match -> start_if .)
    ID              reduce using rule 25 (bloque_match -> start_if .)
    MATCH           reduce using rule 25 (bloque_match -> start_if .)
    IF              reduce using rule 25 (bloque_match -> start_if .)
    WHILE           reduce using rule 25 (bloque_match -> start_if .)
    RETURN          reduce using rule 25 (bloque_match -> start_if .)
    LOOP            reduce using rule 25 (bloque_match -> start_if .)
    GBAJO           reduce using rule 25 (bloque_match -> start_if .)
    NOT             reduce using rule 25 (bloque_match -> start_if .)
    RESTA           reduce using rule 25 (bloque_match -> start_if .)
    PI              reduce using rule 25 (bloque_match -> start_if .)
    POWF            reduce using rule 25 (bloque_match -> start_if .)
    POW             reduce using rule 25 (bloque_match -> start_if .)
    ENTERO          reduce using rule 25 (bloque_match -> start_if .)
    FLOAT           reduce using rule 25 (bloque_match -> start_if .)
    CADENA          reduce using rule 25 (bloque_match -> start_if .)
    CARACTER        reduce using rule 25 (bloque_match -> start_if .)
    TRUE            reduce using rule 25 (bloque_match -> start_if .)
    FALSE           reduce using rule 25 (bloque_match -> start_if .)
    IGUAL           reduce using rule 25 (bloque_match -> start_if .)
    BARRA           reduce using rule 25 (bloque_match -> start_if .)
    PUNTO           reduce using rule 25 (bloque_match -> start_if .)
    OR              reduce using rule 25 (bloque_match -> start_if .)
    AND             reduce using rule 25 (bloque_match -> start_if .)
    MAYORIGUAL      reduce using rule 25 (bloque_match -> start_if .)
    MAYOR           reduce using rule 25 (bloque_match -> start_if .)
    MENORIGUAL      reduce using rule 25 (bloque_match -> start_if .)
    MENOR           reduce using rule 25 (bloque_match -> start_if .)
    IGUALDAD        reduce using rule 25 (bloque_match -> start_if .)
    DESIGUALDAD     reduce using rule 25 (bloque_match -> start_if .)
    SUMA            reduce using rule 25 (bloque_match -> start_if .)
    MULTI           reduce using rule 25 (bloque_match -> start_if .)
    DIVI            reduce using rule 25 (bloque_match -> start_if .)
    MODULO          reduce using rule 25 (bloque_match -> start_if .)
    COMA            reduce using rule 25 (bloque_match -> start_if .)

  ! PUNTO           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! OR              [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! AND             [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MAYORIGUAL      [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MAYOR           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MENORIGUAL      [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MENOR           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! IGUALDAD        [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! DESIGUALDAD     [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! RESTA           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! SUMA            [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MULTI           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! DIVI            [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MODULO          [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! IGUAL           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! BARRA           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! COMA            [ reduce using rule 104 (expre_valor -> start_if .) ]


state 157

    (26) bloque_match -> start_while .

    LD              reduce using rule 26 (bloque_match -> start_while .)
    PRINTLN         reduce using rule 26 (bloque_match -> start_while .)
    PRINT           reduce using rule 26 (bloque_match -> start_while .)
    ID              reduce using rule 26 (bloque_match -> start_while .)
    MATCH           reduce using rule 26 (bloque_match -> start_while .)
    IF              reduce using rule 26 (bloque_match -> start_while .)
    WHILE           reduce using rule 26 (bloque_match -> start_while .)
    RETURN          reduce using rule 26 (bloque_match -> start_while .)
    LOOP            reduce using rule 26 (bloque_match -> start_while .)
    GBAJO           reduce using rule 26 (bloque_match -> start_while .)
    NOT             reduce using rule 26 (bloque_match -> start_while .)
    RESTA           reduce using rule 26 (bloque_match -> start_while .)
    PI              reduce using rule 26 (bloque_match -> start_while .)
    POWF            reduce using rule 26 (bloque_match -> start_while .)
    POW             reduce using rule 26 (bloque_match -> start_while .)
    ENTERO          reduce using rule 26 (bloque_match -> start_while .)
    FLOAT           reduce using rule 26 (bloque_match -> start_while .)
    CADENA          reduce using rule 26 (bloque_match -> start_while .)
    CARACTER        reduce using rule 26 (bloque_match -> start_while .)
    TRUE            reduce using rule 26 (bloque_match -> start_while .)
    FALSE           reduce using rule 26 (bloque_match -> start_while .)
    IGUAL           reduce using rule 26 (bloque_match -> start_while .)
    BARRA           reduce using rule 26 (bloque_match -> start_while .)
    PUNTO           reduce using rule 26 (bloque_match -> start_while .)
    OR              reduce using rule 26 (bloque_match -> start_while .)
    AND             reduce using rule 26 (bloque_match -> start_while .)
    MAYORIGUAL      reduce using rule 26 (bloque_match -> start_while .)
    MAYOR           reduce using rule 26 (bloque_match -> start_while .)
    MENORIGUAL      reduce using rule 26 (bloque_match -> start_while .)
    MENOR           reduce using rule 26 (bloque_match -> start_while .)
    IGUALDAD        reduce using rule 26 (bloque_match -> start_while .)
    DESIGUALDAD     reduce using rule 26 (bloque_match -> start_while .)
    SUMA            reduce using rule 26 (bloque_match -> start_while .)
    MULTI           reduce using rule 26 (bloque_match -> start_while .)
    DIVI            reduce using rule 26 (bloque_match -> start_while .)
    MODULO          reduce using rule 26 (bloque_match -> start_while .)
    COMA            reduce using rule 26 (bloque_match -> start_while .)


state 158

    (27) bloque_match -> return_ins . PYC

    PYC             shift and go to state 197


state 159

    (28) bloque_match -> start_loop .
    (105) expre_valor -> start_loop .

  ! reduce/reduce conflict for PUNTO resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for OR resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for AND resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MAYOR resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MENOR resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for RESTA resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for SUMA resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MULTI resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for DIVI resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for MODULO resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for IGUAL resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for BARRA resolved using rule 28 (bloque_match -> start_loop .)
  ! reduce/reduce conflict for COMA resolved using rule 28 (bloque_match -> start_loop .)
    LD              reduce using rule 28 (bloque_match -> start_loop .)
    PRINTLN         reduce using rule 28 (bloque_match -> start_loop .)
    PRINT           reduce using rule 28 (bloque_match -> start_loop .)
    ID              reduce using rule 28 (bloque_match -> start_loop .)
    MATCH           reduce using rule 28 (bloque_match -> start_loop .)
    IF              reduce using rule 28 (bloque_match -> start_loop .)
    WHILE           reduce using rule 28 (bloque_match -> start_loop .)
    RETURN          reduce using rule 28 (bloque_match -> start_loop .)
    LOOP            reduce using rule 28 (bloque_match -> start_loop .)
    GBAJO           reduce using rule 28 (bloque_match -> start_loop .)
    NOT             reduce using rule 28 (bloque_match -> start_loop .)
    RESTA           reduce using rule 28 (bloque_match -> start_loop .)
    PI              reduce using rule 28 (bloque_match -> start_loop .)
    POWF            reduce using rule 28 (bloque_match -> start_loop .)
    POW             reduce using rule 28 (bloque_match -> start_loop .)
    ENTERO          reduce using rule 28 (bloque_match -> start_loop .)
    FLOAT           reduce using rule 28 (bloque_match -> start_loop .)
    CADENA          reduce using rule 28 (bloque_match -> start_loop .)
    CARACTER        reduce using rule 28 (bloque_match -> start_loop .)
    TRUE            reduce using rule 28 (bloque_match -> start_loop .)
    FALSE           reduce using rule 28 (bloque_match -> start_loop .)
    IGUAL           reduce using rule 28 (bloque_match -> start_loop .)
    BARRA           reduce using rule 28 (bloque_match -> start_loop .)
    PUNTO           reduce using rule 28 (bloque_match -> start_loop .)
    OR              reduce using rule 28 (bloque_match -> start_loop .)
    AND             reduce using rule 28 (bloque_match -> start_loop .)
    MAYORIGUAL      reduce using rule 28 (bloque_match -> start_loop .)
    MAYOR           reduce using rule 28 (bloque_match -> start_loop .)
    MENORIGUAL      reduce using rule 28 (bloque_match -> start_loop .)
    MENOR           reduce using rule 28 (bloque_match -> start_loop .)
    IGUALDAD        reduce using rule 28 (bloque_match -> start_loop .)
    DESIGUALDAD     reduce using rule 28 (bloque_match -> start_loop .)
    SUMA            reduce using rule 28 (bloque_match -> start_loop .)
    MULTI           reduce using rule 28 (bloque_match -> start_loop .)
    DIVI            reduce using rule 28 (bloque_match -> start_loop .)
    MODULO          reduce using rule 28 (bloque_match -> start_loop .)
    COMA            reduce using rule 28 (bloque_match -> start_loop .)

  ! PUNTO           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! OR              [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! AND             [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MAYORIGUAL      [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MAYOR           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MENORIGUAL      [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MENOR           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! IGUALDAD        [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! DESIGUALDAD     [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! RESTA           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! SUMA            [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MULTI           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! DIVI            [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MODULO          [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! IGUAL           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! BARRA           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! COMA            [ reduce using rule 105 (expre_valor -> start_loop .) ]


state 160

    (49) bloque_match -> varios_match . IGUAL MAYOR simple_bloque_exp COMA
    (50) bloque_match -> varios_match . IGUAL MAYOR LI list_exp_ins LD
    (55) varios_match -> varios_match . BARRA expresiones

    IGUAL           shift and go to state 198
    BARRA           shift and go to state 199


state 161

    (79) asignacion -> ID . IGUAL expresiones
    (58) llamada -> ID . PI PD
    (59) llamada -> ID . PI lista_expres PD
    (136) datos -> ID .

  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for PI resolved as shift
    IGUAL           shift and go to state 13
    PI              shift and go to state 52
    PUNTO           reduce using rule 136 (datos -> ID .)
    OR              reduce using rule 136 (datos -> ID .)
    AND             reduce using rule 136 (datos -> ID .)
    MAYORIGUAL      reduce using rule 136 (datos -> ID .)
    MAYOR           reduce using rule 136 (datos -> ID .)
    MENORIGUAL      reduce using rule 136 (datos -> ID .)
    MENOR           reduce using rule 136 (datos -> ID .)
    IGUALDAD        reduce using rule 136 (datos -> ID .)
    DESIGUALDAD     reduce using rule 136 (datos -> ID .)
    RESTA           reduce using rule 136 (datos -> ID .)
    SUMA            reduce using rule 136 (datos -> ID .)
    MULTI           reduce using rule 136 (datos -> ID .)
    DIVI            reduce using rule 136 (datos -> ID .)
    MODULO          reduce using rule 136 (datos -> ID .)
    BARRA           reduce using rule 136 (datos -> ID .)
    LD              reduce using rule 136 (datos -> ID .)
    PRINTLN         reduce using rule 136 (datos -> ID .)
    PRINT           reduce using rule 136 (datos -> ID .)
    LET             reduce using rule 136 (datos -> ID .)
    ID              reduce using rule 136 (datos -> ID .)
    MATCH           reduce using rule 136 (datos -> ID .)
    IF              reduce using rule 136 (datos -> ID .)
    WHILE           reduce using rule 136 (datos -> ID .)
    RETURN          reduce using rule 136 (datos -> ID .)
    BREAK           reduce using rule 136 (datos -> ID .)
    CONTINUE        reduce using rule 136 (datos -> ID .)
    LOOP            reduce using rule 136 (datos -> ID .)
    NOT             reduce using rule 136 (datos -> ID .)
    POWF            reduce using rule 136 (datos -> ID .)
    POW             reduce using rule 136 (datos -> ID .)
    ENTERO          reduce using rule 136 (datos -> ID .)
    FLOAT           reduce using rule 136 (datos -> ID .)
    CADENA          reduce using rule 136 (datos -> ID .)
    CARACTER        reduce using rule 136 (datos -> ID .)
    TRUE            reduce using rule 136 (datos -> ID .)
    FALSE           reduce using rule 136 (datos -> ID .)
    COMA            reduce using rule 136 (datos -> ID .)

  ! IGUAL           [ reduce using rule 136 (datos -> ID .) ]
  ! PI              [ reduce using rule 136 (datos -> ID .) ]


state 162

    (57) varios_match -> GBAJO .

    IGUAL           reduce using rule 57 (varios_match -> GBAJO .)
    BARRA           reduce using rule 57 (varios_match -> GBAJO .)


state 163

    (54) bloque_exp -> expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DESIGUALDAD resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIVI resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    LD              reduce using rule 54 (bloque_exp -> expresiones .)
    PRINTLN         reduce using rule 54 (bloque_exp -> expresiones .)
    PRINT           reduce using rule 54 (bloque_exp -> expresiones .)
    LET             reduce using rule 54 (bloque_exp -> expresiones .)
    ID              reduce using rule 54 (bloque_exp -> expresiones .)
    MATCH           reduce using rule 54 (bloque_exp -> expresiones .)
    IF              reduce using rule 54 (bloque_exp -> expresiones .)
    WHILE           reduce using rule 54 (bloque_exp -> expresiones .)
    RETURN          reduce using rule 54 (bloque_exp -> expresiones .)
    BREAK           reduce using rule 54 (bloque_exp -> expresiones .)
    CONTINUE        reduce using rule 54 (bloque_exp -> expresiones .)
    LOOP            reduce using rule 54 (bloque_exp -> expresiones .)
    NOT             reduce using rule 54 (bloque_exp -> expresiones .)
    PI              reduce using rule 54 (bloque_exp -> expresiones .)
    POWF            reduce using rule 54 (bloque_exp -> expresiones .)
    POW             reduce using rule 54 (bloque_exp -> expresiones .)
    ENTERO          reduce using rule 54 (bloque_exp -> expresiones .)
    FLOAT           reduce using rule 54 (bloque_exp -> expresiones .)
    CADENA          reduce using rule 54 (bloque_exp -> expresiones .)
    CARACTER        reduce using rule 54 (bloque_exp -> expresiones .)
    TRUE            reduce using rule 54 (bloque_exp -> expresiones .)
    FALSE           reduce using rule 54 (bloque_exp -> expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66

  ! RESTA           [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! PUNTO           [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! OR              [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! AND             [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! MAYORIGUAL      [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! MAYOR           [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! MENORIGUAL      [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! MENOR           [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! IGUALDAD        [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! DESIGUALDAD     [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! SUMA            [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! MULTI           [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! DIVI            [ reduce using rule 54 (bloque_exp -> expresiones .) ]
  ! MODULO          [ reduce using rule 54 (bloque_exp -> expresiones .) ]


state 164

    (39) start_if -> IF expresiones LI list_exp_ins . LD
    (40) start_if -> IF expresiones LI list_exp_ins . LD ELSE LI list_exp_ins LD
    (41) start_if -> IF expresiones LI list_exp_ins . LD lista_elif
    (42) start_if -> IF expresiones LI list_exp_ins . LD lista_elif ELSE LI list_exp_ins LD
    (37) list_exp_ins -> list_exp_ins . bloque_exp
    (53) bloque_exp -> . bloque
    (54) bloque_exp -> . expresiones
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 200
    PUNTO           reduce using rule 20 (bloque -> .)
    OR              reduce using rule 20 (bloque -> .)
    AND             reduce using rule 20 (bloque -> .)
    MAYORIGUAL      reduce using rule 20 (bloque -> .)
    MAYOR           reduce using rule 20 (bloque -> .)
    MENORIGUAL      reduce using rule 20 (bloque -> .)
    MENOR           reduce using rule 20 (bloque -> .)
    IGUALDAD        reduce using rule 20 (bloque -> .)
    DESIGUALDAD     reduce using rule 20 (bloque -> .)
    SUMA            reduce using rule 20 (bloque -> .)
    MULTI           reduce using rule 20 (bloque -> .)
    DIVI            reduce using rule 20 (bloque -> .)
    MODULO          reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! LD              [ reduce using rule 20 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]
  ! NOT             [ reduce using rule 20 (bloque -> .) ]
  ! RESTA           [ reduce using rule 20 (bloque -> .) ]
  ! PI              [ reduce using rule 20 (bloque -> .) ]
  ! POWF            [ reduce using rule 20 (bloque -> .) ]
  ! POW             [ reduce using rule 20 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 20 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 20 (bloque -> .) ]
  ! CADENA          [ reduce using rule 20 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 20 (bloque -> .) ]
  ! TRUE            [ reduce using rule 20 (bloque -> .) ]
  ! FALSE           [ reduce using rule 20 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! LD              [ reduce using rule 101 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 101 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 101 (expresiones -> .) ]
  ! LET             [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 101 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 101 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 101 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 163
    bloque_exp                     shift and go to state 201
    bloque                         shift and go to state 166
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 167
    start_match                    shift and go to state 168
    start_if                       shift and go to state 169
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 170
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 165

    (38) list_exp_ins -> bloque_exp .

    LD              reduce using rule 38 (list_exp_ins -> bloque_exp .)
    PRINTLN         reduce using rule 38 (list_exp_ins -> bloque_exp .)
    PRINT           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    LET             reduce using rule 38 (list_exp_ins -> bloque_exp .)
    ID              reduce using rule 38 (list_exp_ins -> bloque_exp .)
    MATCH           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    IF              reduce using rule 38 (list_exp_ins -> bloque_exp .)
    WHILE           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    RETURN          reduce using rule 38 (list_exp_ins -> bloque_exp .)
    BREAK           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    CONTINUE        reduce using rule 38 (list_exp_ins -> bloque_exp .)
    LOOP            reduce using rule 38 (list_exp_ins -> bloque_exp .)
    NOT             reduce using rule 38 (list_exp_ins -> bloque_exp .)
    RESTA           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    PI              reduce using rule 38 (list_exp_ins -> bloque_exp .)
    POWF            reduce using rule 38 (list_exp_ins -> bloque_exp .)
    POW             reduce using rule 38 (list_exp_ins -> bloque_exp .)
    ENTERO          reduce using rule 38 (list_exp_ins -> bloque_exp .)
    FLOAT           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    CADENA          reduce using rule 38 (list_exp_ins -> bloque_exp .)
    CARACTER        reduce using rule 38 (list_exp_ins -> bloque_exp .)
    TRUE            reduce using rule 38 (list_exp_ins -> bloque_exp .)
    FALSE           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    PUNTO           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    OR              reduce using rule 38 (list_exp_ins -> bloque_exp .)
    AND             reduce using rule 38 (list_exp_ins -> bloque_exp .)
    MAYORIGUAL      reduce using rule 38 (list_exp_ins -> bloque_exp .)
    MAYOR           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    MENORIGUAL      reduce using rule 38 (list_exp_ins -> bloque_exp .)
    MENOR           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    IGUALDAD        reduce using rule 38 (list_exp_ins -> bloque_exp .)
    DESIGUALDAD     reduce using rule 38 (list_exp_ins -> bloque_exp .)
    SUMA            reduce using rule 38 (list_exp_ins -> bloque_exp .)
    MULTI           reduce using rule 38 (list_exp_ins -> bloque_exp .)
    DIVI            reduce using rule 38 (list_exp_ins -> bloque_exp .)
    MODULO          reduce using rule 38 (list_exp_ins -> bloque_exp .)


state 166

    (53) bloque_exp -> bloque .

    LD              reduce using rule 53 (bloque_exp -> bloque .)
    PRINTLN         reduce using rule 53 (bloque_exp -> bloque .)
    PRINT           reduce using rule 53 (bloque_exp -> bloque .)
    LET             reduce using rule 53 (bloque_exp -> bloque .)
    ID              reduce using rule 53 (bloque_exp -> bloque .)
    MATCH           reduce using rule 53 (bloque_exp -> bloque .)
    IF              reduce using rule 53 (bloque_exp -> bloque .)
    WHILE           reduce using rule 53 (bloque_exp -> bloque .)
    RETURN          reduce using rule 53 (bloque_exp -> bloque .)
    BREAK           reduce using rule 53 (bloque_exp -> bloque .)
    CONTINUE        reduce using rule 53 (bloque_exp -> bloque .)
    LOOP            reduce using rule 53 (bloque_exp -> bloque .)
    NOT             reduce using rule 53 (bloque_exp -> bloque .)
    RESTA           reduce using rule 53 (bloque_exp -> bloque .)
    PI              reduce using rule 53 (bloque_exp -> bloque .)
    POWF            reduce using rule 53 (bloque_exp -> bloque .)
    POW             reduce using rule 53 (bloque_exp -> bloque .)
    ENTERO          reduce using rule 53 (bloque_exp -> bloque .)
    FLOAT           reduce using rule 53 (bloque_exp -> bloque .)
    CADENA          reduce using rule 53 (bloque_exp -> bloque .)
    CARACTER        reduce using rule 53 (bloque_exp -> bloque .)
    TRUE            reduce using rule 53 (bloque_exp -> bloque .)
    FALSE           reduce using rule 53 (bloque_exp -> bloque .)
    PUNTO           reduce using rule 53 (bloque_exp -> bloque .)
    OR              reduce using rule 53 (bloque_exp -> bloque .)
    AND             reduce using rule 53 (bloque_exp -> bloque .)
    MAYORIGUAL      reduce using rule 53 (bloque_exp -> bloque .)
    MAYOR           reduce using rule 53 (bloque_exp -> bloque .)
    MENORIGUAL      reduce using rule 53 (bloque_exp -> bloque .)
    MENOR           reduce using rule 53 (bloque_exp -> bloque .)
    IGUALDAD        reduce using rule 53 (bloque_exp -> bloque .)
    DESIGUALDAD     reduce using rule 53 (bloque_exp -> bloque .)
    SUMA            reduce using rule 53 (bloque_exp -> bloque .)
    MULTI           reduce using rule 53 (bloque_exp -> bloque .)
    DIVI            reduce using rule 53 (bloque_exp -> bloque .)
    MODULO          reduce using rule 53 (bloque_exp -> bloque .)


state 167

    (12) bloque -> llamada . PYC
    (106) expre_valor -> llamada .

    PYC             shift and go to state 175
    PUNTO           reduce using rule 106 (expre_valor -> llamada .)
    OR              reduce using rule 106 (expre_valor -> llamada .)
    AND             reduce using rule 106 (expre_valor -> llamada .)
    MAYORIGUAL      reduce using rule 106 (expre_valor -> llamada .)
    MAYOR           reduce using rule 106 (expre_valor -> llamada .)
    MENORIGUAL      reduce using rule 106 (expre_valor -> llamada .)
    MENOR           reduce using rule 106 (expre_valor -> llamada .)
    IGUALDAD        reduce using rule 106 (expre_valor -> llamada .)
    DESIGUALDAD     reduce using rule 106 (expre_valor -> llamada .)
    RESTA           reduce using rule 106 (expre_valor -> llamada .)
    SUMA            reduce using rule 106 (expre_valor -> llamada .)
    MULTI           reduce using rule 106 (expre_valor -> llamada .)
    DIVI            reduce using rule 106 (expre_valor -> llamada .)
    MODULO          reduce using rule 106 (expre_valor -> llamada .)
    LD              reduce using rule 106 (expre_valor -> llamada .)
    PRINTLN         reduce using rule 106 (expre_valor -> llamada .)
    PRINT           reduce using rule 106 (expre_valor -> llamada .)
    LET             reduce using rule 106 (expre_valor -> llamada .)
    ID              reduce using rule 106 (expre_valor -> llamada .)
    MATCH           reduce using rule 106 (expre_valor -> llamada .)
    IF              reduce using rule 106 (expre_valor -> llamada .)
    WHILE           reduce using rule 106 (expre_valor -> llamada .)
    RETURN          reduce using rule 106 (expre_valor -> llamada .)
    BREAK           reduce using rule 106 (expre_valor -> llamada .)
    CONTINUE        reduce using rule 106 (expre_valor -> llamada .)
    LOOP            reduce using rule 106 (expre_valor -> llamada .)
    NOT             reduce using rule 106 (expre_valor -> llamada .)
    PI              reduce using rule 106 (expre_valor -> llamada .)
    POWF            reduce using rule 106 (expre_valor -> llamada .)
    POW             reduce using rule 106 (expre_valor -> llamada .)
    ENTERO          reduce using rule 106 (expre_valor -> llamada .)
    FLOAT           reduce using rule 106 (expre_valor -> llamada .)
    CADENA          reduce using rule 106 (expre_valor -> llamada .)
    CARACTER        reduce using rule 106 (expre_valor -> llamada .)
    TRUE            reduce using rule 106 (expre_valor -> llamada .)
    FALSE           reduce using rule 106 (expre_valor -> llamada .)


state 168

    (13) bloque -> start_match .
    (103) expre_valor -> start_match .

  ! reduce/reduce conflict for PUNTO resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for OR resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for AND resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for MAYOR resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for MENOR resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for RESTA resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for SUMA resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for MULTI resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for DIVI resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for MODULO resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for LD resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for PRINT resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for LET resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for ID resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for MATCH resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for IF resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for RETURN resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for BREAK resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for LOOP resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for NOT resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for PI resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for POWF resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for POW resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for ENTERO resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for FLOAT resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for CADENA resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for CARACTER resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for TRUE resolved using rule 13 (bloque -> start_match .)
  ! reduce/reduce conflict for FALSE resolved using rule 13 (bloque -> start_match .)
    LD              reduce using rule 13 (bloque -> start_match .)
    PRINTLN         reduce using rule 13 (bloque -> start_match .)
    PRINT           reduce using rule 13 (bloque -> start_match .)
    LET             reduce using rule 13 (bloque -> start_match .)
    ID              reduce using rule 13 (bloque -> start_match .)
    MATCH           reduce using rule 13 (bloque -> start_match .)
    IF              reduce using rule 13 (bloque -> start_match .)
    WHILE           reduce using rule 13 (bloque -> start_match .)
    RETURN          reduce using rule 13 (bloque -> start_match .)
    BREAK           reduce using rule 13 (bloque -> start_match .)
    CONTINUE        reduce using rule 13 (bloque -> start_match .)
    LOOP            reduce using rule 13 (bloque -> start_match .)
    NOT             reduce using rule 13 (bloque -> start_match .)
    RESTA           reduce using rule 13 (bloque -> start_match .)
    PI              reduce using rule 13 (bloque -> start_match .)
    POWF            reduce using rule 13 (bloque -> start_match .)
    POW             reduce using rule 13 (bloque -> start_match .)
    ENTERO          reduce using rule 13 (bloque -> start_match .)
    FLOAT           reduce using rule 13 (bloque -> start_match .)
    CADENA          reduce using rule 13 (bloque -> start_match .)
    CARACTER        reduce using rule 13 (bloque -> start_match .)
    TRUE            reduce using rule 13 (bloque -> start_match .)
    FALSE           reduce using rule 13 (bloque -> start_match .)
    PUNTO           reduce using rule 13 (bloque -> start_match .)
    OR              reduce using rule 13 (bloque -> start_match .)
    AND             reduce using rule 13 (bloque -> start_match .)
    MAYORIGUAL      reduce using rule 13 (bloque -> start_match .)
    MAYOR           reduce using rule 13 (bloque -> start_match .)
    MENORIGUAL      reduce using rule 13 (bloque -> start_match .)
    MENOR           reduce using rule 13 (bloque -> start_match .)
    IGUALDAD        reduce using rule 13 (bloque -> start_match .)
    DESIGUALDAD     reduce using rule 13 (bloque -> start_match .)
    SUMA            reduce using rule 13 (bloque -> start_match .)
    MULTI           reduce using rule 13 (bloque -> start_match .)
    DIVI            reduce using rule 13 (bloque -> start_match .)
    MODULO          reduce using rule 13 (bloque -> start_match .)

  ! PUNTO           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! OR              [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! AND             [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MAYORIGUAL      [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MAYOR           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MENORIGUAL      [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MENOR           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! IGUALDAD        [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! DESIGUALDAD     [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! RESTA           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! SUMA            [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MULTI           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! DIVI            [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MODULO          [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! LD              [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! PRINTLN         [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! PRINT           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! LET             [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! ID              [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! MATCH           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! IF              [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! WHILE           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! RETURN          [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! BREAK           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! CONTINUE        [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! LOOP            [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! NOT             [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! PI              [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! POWF            [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! POW             [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! ENTERO          [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! FLOAT           [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! CADENA          [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! CARACTER        [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! TRUE            [ reduce using rule 103 (expre_valor -> start_match .) ]
  ! FALSE           [ reduce using rule 103 (expre_valor -> start_match .) ]


state 169

    (14) bloque -> start_if .
    (104) expre_valor -> start_if .

  ! reduce/reduce conflict for PUNTO resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for OR resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for AND resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for MAYOR resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for MENOR resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for RESTA resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for SUMA resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for MULTI resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for DIVI resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for MODULO resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for LD resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for PRINT resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for LET resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for ID resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for MATCH resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for IF resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for WHILE resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for BREAK resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for LOOP resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for NOT resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for PI resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for POWF resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for POW resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for ENTERO resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for FLOAT resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for CADENA resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for CARACTER resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for TRUE resolved using rule 14 (bloque -> start_if .)
  ! reduce/reduce conflict for FALSE resolved using rule 14 (bloque -> start_if .)
    LD              reduce using rule 14 (bloque -> start_if .)
    PRINTLN         reduce using rule 14 (bloque -> start_if .)
    PRINT           reduce using rule 14 (bloque -> start_if .)
    LET             reduce using rule 14 (bloque -> start_if .)
    ID              reduce using rule 14 (bloque -> start_if .)
    MATCH           reduce using rule 14 (bloque -> start_if .)
    IF              reduce using rule 14 (bloque -> start_if .)
    WHILE           reduce using rule 14 (bloque -> start_if .)
    RETURN          reduce using rule 14 (bloque -> start_if .)
    BREAK           reduce using rule 14 (bloque -> start_if .)
    CONTINUE        reduce using rule 14 (bloque -> start_if .)
    LOOP            reduce using rule 14 (bloque -> start_if .)
    NOT             reduce using rule 14 (bloque -> start_if .)
    RESTA           reduce using rule 14 (bloque -> start_if .)
    PI              reduce using rule 14 (bloque -> start_if .)
    POWF            reduce using rule 14 (bloque -> start_if .)
    POW             reduce using rule 14 (bloque -> start_if .)
    ENTERO          reduce using rule 14 (bloque -> start_if .)
    FLOAT           reduce using rule 14 (bloque -> start_if .)
    CADENA          reduce using rule 14 (bloque -> start_if .)
    CARACTER        reduce using rule 14 (bloque -> start_if .)
    TRUE            reduce using rule 14 (bloque -> start_if .)
    FALSE           reduce using rule 14 (bloque -> start_if .)
    PUNTO           reduce using rule 14 (bloque -> start_if .)
    OR              reduce using rule 14 (bloque -> start_if .)
    AND             reduce using rule 14 (bloque -> start_if .)
    MAYORIGUAL      reduce using rule 14 (bloque -> start_if .)
    MAYOR           reduce using rule 14 (bloque -> start_if .)
    MENORIGUAL      reduce using rule 14 (bloque -> start_if .)
    MENOR           reduce using rule 14 (bloque -> start_if .)
    IGUALDAD        reduce using rule 14 (bloque -> start_if .)
    DESIGUALDAD     reduce using rule 14 (bloque -> start_if .)
    SUMA            reduce using rule 14 (bloque -> start_if .)
    MULTI           reduce using rule 14 (bloque -> start_if .)
    DIVI            reduce using rule 14 (bloque -> start_if .)
    MODULO          reduce using rule 14 (bloque -> start_if .)

  ! PUNTO           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! OR              [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! AND             [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MAYORIGUAL      [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MAYOR           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MENORIGUAL      [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MENOR           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! IGUALDAD        [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! DESIGUALDAD     [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! RESTA           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! SUMA            [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MULTI           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! DIVI            [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MODULO          [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! LD              [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! PRINTLN         [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! PRINT           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! LET             [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! ID              [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! MATCH           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! IF              [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! WHILE           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! RETURN          [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! BREAK           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! CONTINUE        [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! LOOP            [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! NOT             [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! PI              [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! POWF            [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! POW             [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! ENTERO          [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! FLOAT           [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! CADENA          [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! CARACTER        [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! TRUE            [ reduce using rule 104 (expre_valor -> start_if .) ]
  ! FALSE           [ reduce using rule 104 (expre_valor -> start_if .) ]


state 170

    (19) bloque -> start_loop .
    (105) expre_valor -> start_loop .

  ! reduce/reduce conflict for PUNTO resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for OR resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for AND resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for MAYOR resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for MENOR resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for RESTA resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for SUMA resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for MULTI resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for DIVI resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for MODULO resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for LD resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for PRINT resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for LET resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for ID resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for MATCH resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for IF resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for WHILE resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for RETURN resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for BREAK resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for LOOP resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for NOT resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for PI resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for POWF resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for POW resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for ENTERO resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for FLOAT resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for CADENA resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for CARACTER resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for TRUE resolved using rule 19 (bloque -> start_loop .)
  ! reduce/reduce conflict for FALSE resolved using rule 19 (bloque -> start_loop .)
    LD              reduce using rule 19 (bloque -> start_loop .)
    PRINTLN         reduce using rule 19 (bloque -> start_loop .)
    PRINT           reduce using rule 19 (bloque -> start_loop .)
    LET             reduce using rule 19 (bloque -> start_loop .)
    ID              reduce using rule 19 (bloque -> start_loop .)
    MATCH           reduce using rule 19 (bloque -> start_loop .)
    IF              reduce using rule 19 (bloque -> start_loop .)
    WHILE           reduce using rule 19 (bloque -> start_loop .)
    RETURN          reduce using rule 19 (bloque -> start_loop .)
    BREAK           reduce using rule 19 (bloque -> start_loop .)
    CONTINUE        reduce using rule 19 (bloque -> start_loop .)
    LOOP            reduce using rule 19 (bloque -> start_loop .)
    NOT             reduce using rule 19 (bloque -> start_loop .)
    RESTA           reduce using rule 19 (bloque -> start_loop .)
    PI              reduce using rule 19 (bloque -> start_loop .)
    POWF            reduce using rule 19 (bloque -> start_loop .)
    POW             reduce using rule 19 (bloque -> start_loop .)
    ENTERO          reduce using rule 19 (bloque -> start_loop .)
    FLOAT           reduce using rule 19 (bloque -> start_loop .)
    CADENA          reduce using rule 19 (bloque -> start_loop .)
    CARACTER        reduce using rule 19 (bloque -> start_loop .)
    TRUE            reduce using rule 19 (bloque -> start_loop .)
    FALSE           reduce using rule 19 (bloque -> start_loop .)
    PUNTO           reduce using rule 19 (bloque -> start_loop .)
    OR              reduce using rule 19 (bloque -> start_loop .)
    AND             reduce using rule 19 (bloque -> start_loop .)
    MAYORIGUAL      reduce using rule 19 (bloque -> start_loop .)
    MAYOR           reduce using rule 19 (bloque -> start_loop .)
    MENORIGUAL      reduce using rule 19 (bloque -> start_loop .)
    MENOR           reduce using rule 19 (bloque -> start_loop .)
    IGUALDAD        reduce using rule 19 (bloque -> start_loop .)
    DESIGUALDAD     reduce using rule 19 (bloque -> start_loop .)
    SUMA            reduce using rule 19 (bloque -> start_loop .)
    MULTI           reduce using rule 19 (bloque -> start_loop .)
    DIVI            reduce using rule 19 (bloque -> start_loop .)
    MODULO          reduce using rule 19 (bloque -> start_loop .)

  ! PUNTO           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! OR              [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! AND             [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MAYORIGUAL      [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MAYOR           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MENORIGUAL      [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MENOR           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! IGUALDAD        [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! DESIGUALDAD     [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! RESTA           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! SUMA            [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MULTI           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! DIVI            [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MODULO          [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! LD              [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! PRINTLN         [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! PRINT           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! LET             [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! ID              [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! MATCH           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! IF              [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! WHILE           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! RETURN          [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! BREAK           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! CONTINUE        [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! LOOP            [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! NOT             [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! PI              [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! POWF            [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! POW             [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! ENTERO          [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! FLOAT           [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! CADENA          [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! CARACTER        [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! TRUE            [ reduce using rule 105 (expre_valor -> start_loop .) ]
  ! FALSE           [ reduce using rule 105 (expre_valor -> start_loop .) ]


state 171

    (30) start_loop -> LOOP LI lista_bloque LD .

    PUNTO           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    OR              reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    AND             reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    MAYORIGUAL      reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    MAYOR           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    MENORIGUAL      reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    MENOR           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    IGUALDAD        reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    DESIGUALDAD     reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    RESTA           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    SUMA            reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    MULTI           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    DIVI            reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    MODULO          reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    FUNCION         reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    LET             reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    ID              reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    $end            reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    PYC             reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    LD              reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    PRINTLN         reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    PRINT           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    MATCH           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    IF              reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    WHILE           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    RETURN          reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    LOOP            reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    GBAJO           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    NOT             reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    PI              reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    POWF            reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    POW             reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    ENTERO          reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    FLOAT           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    CADENA          reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    CARACTER        reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    TRUE            reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    FALSE           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    IGUAL           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    BARRA           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    COMA            reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    PD              reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    LI              reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    BREAK           reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)
    CONTINUE        reduce using rule 30 (start_loop -> LOOP LI lista_bloque LD .)


state 172

    (7) lista_bloque -> lista_bloque bloque .

    LD              reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    PRINTLN         reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    PRINT           reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    LET             reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    ID              reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    MATCH           reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    IF              reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    WHILE           reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    RETURN          reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    BREAK           reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    CONTINUE        reduce using rule 7 (lista_bloque -> lista_bloque bloque .)
    LOOP            reduce using rule 7 (lista_bloque -> lista_bloque bloque .)


state 173

    (9) bloque -> impresiones PYC .

    LD              reduce using rule 9 (bloque -> impresiones PYC .)
    PRINTLN         reduce using rule 9 (bloque -> impresiones PYC .)
    PRINT           reduce using rule 9 (bloque -> impresiones PYC .)
    LET             reduce using rule 9 (bloque -> impresiones PYC .)
    ID              reduce using rule 9 (bloque -> impresiones PYC .)
    MATCH           reduce using rule 9 (bloque -> impresiones PYC .)
    IF              reduce using rule 9 (bloque -> impresiones PYC .)
    WHILE           reduce using rule 9 (bloque -> impresiones PYC .)
    RETURN          reduce using rule 9 (bloque -> impresiones PYC .)
    BREAK           reduce using rule 9 (bloque -> impresiones PYC .)
    CONTINUE        reduce using rule 9 (bloque -> impresiones PYC .)
    LOOP            reduce using rule 9 (bloque -> impresiones PYC .)
    NOT             reduce using rule 9 (bloque -> impresiones PYC .)
    RESTA           reduce using rule 9 (bloque -> impresiones PYC .)
    PI              reduce using rule 9 (bloque -> impresiones PYC .)
    POWF            reduce using rule 9 (bloque -> impresiones PYC .)
    POW             reduce using rule 9 (bloque -> impresiones PYC .)
    ENTERO          reduce using rule 9 (bloque -> impresiones PYC .)
    FLOAT           reduce using rule 9 (bloque -> impresiones PYC .)
    CADENA          reduce using rule 9 (bloque -> impresiones PYC .)
    CARACTER        reduce using rule 9 (bloque -> impresiones PYC .)
    TRUE            reduce using rule 9 (bloque -> impresiones PYC .)
    FALSE           reduce using rule 9 (bloque -> impresiones PYC .)
    PUNTO           reduce using rule 9 (bloque -> impresiones PYC .)
    OR              reduce using rule 9 (bloque -> impresiones PYC .)
    AND             reduce using rule 9 (bloque -> impresiones PYC .)
    MAYORIGUAL      reduce using rule 9 (bloque -> impresiones PYC .)
    MAYOR           reduce using rule 9 (bloque -> impresiones PYC .)
    MENORIGUAL      reduce using rule 9 (bloque -> impresiones PYC .)
    MENOR           reduce using rule 9 (bloque -> impresiones PYC .)
    IGUALDAD        reduce using rule 9 (bloque -> impresiones PYC .)
    DESIGUALDAD     reduce using rule 9 (bloque -> impresiones PYC .)
    SUMA            reduce using rule 9 (bloque -> impresiones PYC .)
    MULTI           reduce using rule 9 (bloque -> impresiones PYC .)
    DIVI            reduce using rule 9 (bloque -> impresiones PYC .)
    MODULO          reduce using rule 9 (bloque -> impresiones PYC .)


state 174

    (11) bloque -> asignacion PYC .

    LD              reduce using rule 11 (bloque -> asignacion PYC .)
    PRINTLN         reduce using rule 11 (bloque -> asignacion PYC .)
    PRINT           reduce using rule 11 (bloque -> asignacion PYC .)
    LET             reduce using rule 11 (bloque -> asignacion PYC .)
    ID              reduce using rule 11 (bloque -> asignacion PYC .)
    MATCH           reduce using rule 11 (bloque -> asignacion PYC .)
    IF              reduce using rule 11 (bloque -> asignacion PYC .)
    WHILE           reduce using rule 11 (bloque -> asignacion PYC .)
    RETURN          reduce using rule 11 (bloque -> asignacion PYC .)
    BREAK           reduce using rule 11 (bloque -> asignacion PYC .)
    CONTINUE        reduce using rule 11 (bloque -> asignacion PYC .)
    LOOP            reduce using rule 11 (bloque -> asignacion PYC .)
    NOT             reduce using rule 11 (bloque -> asignacion PYC .)
    RESTA           reduce using rule 11 (bloque -> asignacion PYC .)
    PI              reduce using rule 11 (bloque -> asignacion PYC .)
    POWF            reduce using rule 11 (bloque -> asignacion PYC .)
    POW             reduce using rule 11 (bloque -> asignacion PYC .)
    ENTERO          reduce using rule 11 (bloque -> asignacion PYC .)
    FLOAT           reduce using rule 11 (bloque -> asignacion PYC .)
    CADENA          reduce using rule 11 (bloque -> asignacion PYC .)
    CARACTER        reduce using rule 11 (bloque -> asignacion PYC .)
    TRUE            reduce using rule 11 (bloque -> asignacion PYC .)
    FALSE           reduce using rule 11 (bloque -> asignacion PYC .)
    PUNTO           reduce using rule 11 (bloque -> asignacion PYC .)
    OR              reduce using rule 11 (bloque -> asignacion PYC .)
    AND             reduce using rule 11 (bloque -> asignacion PYC .)
    MAYORIGUAL      reduce using rule 11 (bloque -> asignacion PYC .)
    MAYOR           reduce using rule 11 (bloque -> asignacion PYC .)
    MENORIGUAL      reduce using rule 11 (bloque -> asignacion PYC .)
    MENOR           reduce using rule 11 (bloque -> asignacion PYC .)
    IGUALDAD        reduce using rule 11 (bloque -> asignacion PYC .)
    DESIGUALDAD     reduce using rule 11 (bloque -> asignacion PYC .)
    SUMA            reduce using rule 11 (bloque -> asignacion PYC .)
    MULTI           reduce using rule 11 (bloque -> asignacion PYC .)
    DIVI            reduce using rule 11 (bloque -> asignacion PYC .)
    MODULO          reduce using rule 11 (bloque -> asignacion PYC .)


state 175

    (12) bloque -> llamada PYC .

    LD              reduce using rule 12 (bloque -> llamada PYC .)
    PRINTLN         reduce using rule 12 (bloque -> llamada PYC .)
    PRINT           reduce using rule 12 (bloque -> llamada PYC .)
    LET             reduce using rule 12 (bloque -> llamada PYC .)
    ID              reduce using rule 12 (bloque -> llamada PYC .)
    MATCH           reduce using rule 12 (bloque -> llamada PYC .)
    IF              reduce using rule 12 (bloque -> llamada PYC .)
    WHILE           reduce using rule 12 (bloque -> llamada PYC .)
    RETURN          reduce using rule 12 (bloque -> llamada PYC .)
    BREAK           reduce using rule 12 (bloque -> llamada PYC .)
    CONTINUE        reduce using rule 12 (bloque -> llamada PYC .)
    LOOP            reduce using rule 12 (bloque -> llamada PYC .)
    NOT             reduce using rule 12 (bloque -> llamada PYC .)
    RESTA           reduce using rule 12 (bloque -> llamada PYC .)
    PI              reduce using rule 12 (bloque -> llamada PYC .)
    POWF            reduce using rule 12 (bloque -> llamada PYC .)
    POW             reduce using rule 12 (bloque -> llamada PYC .)
    ENTERO          reduce using rule 12 (bloque -> llamada PYC .)
    FLOAT           reduce using rule 12 (bloque -> llamada PYC .)
    CADENA          reduce using rule 12 (bloque -> llamada PYC .)
    CARACTER        reduce using rule 12 (bloque -> llamada PYC .)
    TRUE            reduce using rule 12 (bloque -> llamada PYC .)
    FALSE           reduce using rule 12 (bloque -> llamada PYC .)
    PUNTO           reduce using rule 12 (bloque -> llamada PYC .)
    OR              reduce using rule 12 (bloque -> llamada PYC .)
    AND             reduce using rule 12 (bloque -> llamada PYC .)
    MAYORIGUAL      reduce using rule 12 (bloque -> llamada PYC .)
    MAYOR           reduce using rule 12 (bloque -> llamada PYC .)
    MENORIGUAL      reduce using rule 12 (bloque -> llamada PYC .)
    MENOR           reduce using rule 12 (bloque -> llamada PYC .)
    IGUALDAD        reduce using rule 12 (bloque -> llamada PYC .)
    DESIGUALDAD     reduce using rule 12 (bloque -> llamada PYC .)
    SUMA            reduce using rule 12 (bloque -> llamada PYC .)
    MULTI           reduce using rule 12 (bloque -> llamada PYC .)
    DIVI            reduce using rule 12 (bloque -> llamada PYC .)
    MODULO          reduce using rule 12 (bloque -> llamada PYC .)


state 176

    (16) bloque -> return_ins PYC .

    LD              reduce using rule 16 (bloque -> return_ins PYC .)
    PRINTLN         reduce using rule 16 (bloque -> return_ins PYC .)
    PRINT           reduce using rule 16 (bloque -> return_ins PYC .)
    LET             reduce using rule 16 (bloque -> return_ins PYC .)
    ID              reduce using rule 16 (bloque -> return_ins PYC .)
    MATCH           reduce using rule 16 (bloque -> return_ins PYC .)
    IF              reduce using rule 16 (bloque -> return_ins PYC .)
    WHILE           reduce using rule 16 (bloque -> return_ins PYC .)
    RETURN          reduce using rule 16 (bloque -> return_ins PYC .)
    BREAK           reduce using rule 16 (bloque -> return_ins PYC .)
    CONTINUE        reduce using rule 16 (bloque -> return_ins PYC .)
    LOOP            reduce using rule 16 (bloque -> return_ins PYC .)
    NOT             reduce using rule 16 (bloque -> return_ins PYC .)
    RESTA           reduce using rule 16 (bloque -> return_ins PYC .)
    PI              reduce using rule 16 (bloque -> return_ins PYC .)
    POWF            reduce using rule 16 (bloque -> return_ins PYC .)
    POW             reduce using rule 16 (bloque -> return_ins PYC .)
    ENTERO          reduce using rule 16 (bloque -> return_ins PYC .)
    FLOAT           reduce using rule 16 (bloque -> return_ins PYC .)
    CADENA          reduce using rule 16 (bloque -> return_ins PYC .)
    CARACTER        reduce using rule 16 (bloque -> return_ins PYC .)
    TRUE            reduce using rule 16 (bloque -> return_ins PYC .)
    FALSE           reduce using rule 16 (bloque -> return_ins PYC .)
    PUNTO           reduce using rule 16 (bloque -> return_ins PYC .)
    OR              reduce using rule 16 (bloque -> return_ins PYC .)
    AND             reduce using rule 16 (bloque -> return_ins PYC .)
    MAYORIGUAL      reduce using rule 16 (bloque -> return_ins PYC .)
    MAYOR           reduce using rule 16 (bloque -> return_ins PYC .)
    MENORIGUAL      reduce using rule 16 (bloque -> return_ins PYC .)
    MENOR           reduce using rule 16 (bloque -> return_ins PYC .)
    IGUALDAD        reduce using rule 16 (bloque -> return_ins PYC .)
    DESIGUALDAD     reduce using rule 16 (bloque -> return_ins PYC .)
    SUMA            reduce using rule 16 (bloque -> return_ins PYC .)
    MULTI           reduce using rule 16 (bloque -> return_ins PYC .)
    DIVI            reduce using rule 16 (bloque -> return_ins PYC .)
    MODULO          reduce using rule 16 (bloque -> return_ins PYC .)


state 177

    (17) bloque -> break_ins PYC .

    LD              reduce using rule 17 (bloque -> break_ins PYC .)
    PRINTLN         reduce using rule 17 (bloque -> break_ins PYC .)
    PRINT           reduce using rule 17 (bloque -> break_ins PYC .)
    LET             reduce using rule 17 (bloque -> break_ins PYC .)
    ID              reduce using rule 17 (bloque -> break_ins PYC .)
    MATCH           reduce using rule 17 (bloque -> break_ins PYC .)
    IF              reduce using rule 17 (bloque -> break_ins PYC .)
    WHILE           reduce using rule 17 (bloque -> break_ins PYC .)
    RETURN          reduce using rule 17 (bloque -> break_ins PYC .)
    BREAK           reduce using rule 17 (bloque -> break_ins PYC .)
    CONTINUE        reduce using rule 17 (bloque -> break_ins PYC .)
    LOOP            reduce using rule 17 (bloque -> break_ins PYC .)
    NOT             reduce using rule 17 (bloque -> break_ins PYC .)
    RESTA           reduce using rule 17 (bloque -> break_ins PYC .)
    PI              reduce using rule 17 (bloque -> break_ins PYC .)
    POWF            reduce using rule 17 (bloque -> break_ins PYC .)
    POW             reduce using rule 17 (bloque -> break_ins PYC .)
    ENTERO          reduce using rule 17 (bloque -> break_ins PYC .)
    FLOAT           reduce using rule 17 (bloque -> break_ins PYC .)
    CADENA          reduce using rule 17 (bloque -> break_ins PYC .)
    CARACTER        reduce using rule 17 (bloque -> break_ins PYC .)
    TRUE            reduce using rule 17 (bloque -> break_ins PYC .)
    FALSE           reduce using rule 17 (bloque -> break_ins PYC .)
    PUNTO           reduce using rule 17 (bloque -> break_ins PYC .)
    OR              reduce using rule 17 (bloque -> break_ins PYC .)
    AND             reduce using rule 17 (bloque -> break_ins PYC .)
    MAYORIGUAL      reduce using rule 17 (bloque -> break_ins PYC .)
    MAYOR           reduce using rule 17 (bloque -> break_ins PYC .)
    MENORIGUAL      reduce using rule 17 (bloque -> break_ins PYC .)
    MENOR           reduce using rule 17 (bloque -> break_ins PYC .)
    IGUALDAD        reduce using rule 17 (bloque -> break_ins PYC .)
    DESIGUALDAD     reduce using rule 17 (bloque -> break_ins PYC .)
    SUMA            reduce using rule 17 (bloque -> break_ins PYC .)
    MULTI           reduce using rule 17 (bloque -> break_ins PYC .)
    DIVI            reduce using rule 17 (bloque -> break_ins PYC .)
    MODULO          reduce using rule 17 (bloque -> break_ins PYC .)


state 178

    (18) bloque -> continue_ins PYC .

    LD              reduce using rule 18 (bloque -> continue_ins PYC .)
    PRINTLN         reduce using rule 18 (bloque -> continue_ins PYC .)
    PRINT           reduce using rule 18 (bloque -> continue_ins PYC .)
    LET             reduce using rule 18 (bloque -> continue_ins PYC .)
    ID              reduce using rule 18 (bloque -> continue_ins PYC .)
    MATCH           reduce using rule 18 (bloque -> continue_ins PYC .)
    IF              reduce using rule 18 (bloque -> continue_ins PYC .)
    WHILE           reduce using rule 18 (bloque -> continue_ins PYC .)
    RETURN          reduce using rule 18 (bloque -> continue_ins PYC .)
    BREAK           reduce using rule 18 (bloque -> continue_ins PYC .)
    CONTINUE        reduce using rule 18 (bloque -> continue_ins PYC .)
    LOOP            reduce using rule 18 (bloque -> continue_ins PYC .)
    NOT             reduce using rule 18 (bloque -> continue_ins PYC .)
    RESTA           reduce using rule 18 (bloque -> continue_ins PYC .)
    PI              reduce using rule 18 (bloque -> continue_ins PYC .)
    POWF            reduce using rule 18 (bloque -> continue_ins PYC .)
    POW             reduce using rule 18 (bloque -> continue_ins PYC .)
    ENTERO          reduce using rule 18 (bloque -> continue_ins PYC .)
    FLOAT           reduce using rule 18 (bloque -> continue_ins PYC .)
    CADENA          reduce using rule 18 (bloque -> continue_ins PYC .)
    CARACTER        reduce using rule 18 (bloque -> continue_ins PYC .)
    TRUE            reduce using rule 18 (bloque -> continue_ins PYC .)
    FALSE           reduce using rule 18 (bloque -> continue_ins PYC .)
    PUNTO           reduce using rule 18 (bloque -> continue_ins PYC .)
    OR              reduce using rule 18 (bloque -> continue_ins PYC .)
    AND             reduce using rule 18 (bloque -> continue_ins PYC .)
    MAYORIGUAL      reduce using rule 18 (bloque -> continue_ins PYC .)
    MAYOR           reduce using rule 18 (bloque -> continue_ins PYC .)
    MENORIGUAL      reduce using rule 18 (bloque -> continue_ins PYC .)
    MENOR           reduce using rule 18 (bloque -> continue_ins PYC .)
    IGUALDAD        reduce using rule 18 (bloque -> continue_ins PYC .)
    DESIGUALDAD     reduce using rule 18 (bloque -> continue_ins PYC .)
    SUMA            reduce using rule 18 (bloque -> continue_ins PYC .)
    MULTI           reduce using rule 18 (bloque -> continue_ins PYC .)
    DIVI            reduce using rule 18 (bloque -> continue_ins PYC .)
    MODULO          reduce using rule 18 (bloque -> continue_ins PYC .)


state 179

    (90) impresiones -> PRINTLN PI . CADENA PD
    (92) impresiones -> PRINTLN PI . CADENA COMA impresion_valores PD

    CADENA          shift and go to state 202


state 180

    (91) impresiones -> PRINT PI . CADENA PD
    (93) impresiones -> PRINT PI . CADENA COMA impresion_valores PD

    CADENA          shift and go to state 203


state 181

    (36) start_while -> WHILE expresiones . LI lista_bloque LD
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    LI              shift and go to state 204
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 182

    (35) return_ins -> RETURN expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PYC             reduce using rule 35 (return_ins -> RETURN expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 183

    (33) break_ins -> BREAK expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PYC             reduce using rule 33 (break_ins -> BREAK expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 184

    (78) declaracion -> LET mutable ID tipado IGUAL expresiones . PYC
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PYC             shift and go to state 205
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 185

    (62) funcion -> FUNCION MAIN PI PD LI lista_bloque LD .

    FUNCION         reduce using rule 62 (funcion -> FUNCION MAIN PI PD LI lista_bloque LD .)
    LET             reduce using rule 62 (funcion -> FUNCION MAIN PI PD LI lista_bloque LD .)
    ID              reduce using rule 62 (funcion -> FUNCION MAIN PI PD LI lista_bloque LD .)
    $end            reduce using rule 62 (funcion -> FUNCION MAIN PI PD LI lista_bloque LD .)


state 186

    (63) funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque . LD
    (7) lista_bloque -> lista_bloque . bloque
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              shift and go to state 206
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 125
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38

  ! LD              [ reduce using rule 20 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]

    bloque                         shift and go to state 172
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    start_match                    shift and go to state 116
    start_if                       shift and go to state 117
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 122

state 187

    (74) tipo_funcion -> RESTA MAYOR tipo_datos .

    LI              reduce using rule 74 (tipo_funcion -> RESTA MAYOR tipo_datos .)


state 188

    (75) tipo_funcion -> RESTA MAYOR VECTOR . MENOR tipo_datos MAYOR

    MENOR           shift and go to state 207


state 189

    (64) funcion -> FUNCION ID PI parametros PD tipo_funcion LI . lista_bloque LD
    (7) lista_bloque -> . lista_bloque bloque
    (8) lista_bloque -> . bloque
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 125
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38

  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]

    lista_bloque                   shift and go to state 208
    bloque                         shift and go to state 111
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    start_match                    shift and go to state 116
    start_if                       shift and go to state 117
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 122

state 190

    (67) definiciones -> referencias mutable ID VECTOR . tipado_vector
    (71) tipado_vector -> .

    PD              reduce using rule 71 (tipado_vector -> .)
    COMA            reduce using rule 71 (tipado_vector -> .)

    tipado_vector                  shift and go to state 209

state 191

    (68) definiciones -> referencias mutable ID tipado .

    PD              reduce using rule 68 (definiciones -> referencias mutable ID tipado .)
    COMA            reduce using rule 68 (definiciones -> referencias mutable ID tipado .)


state 192

    (60) lista_expres -> lista_expres COMA expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PD              reduce using rule 60 (lista_expres -> lista_expres COMA expresiones .)
    COMA            reduce using rule 60 (lista_expres -> lista_expres COMA expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 193

    (129) expre_aritmetica -> POWF PI expresiones COMA expresiones . PD
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PD              shift and go to state 210
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 194

    (130) expre_aritmetica -> POW PI expresiones COMA expresiones . PD
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PD              shift and go to state 211
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 195

    (46) start_match -> MATCH expresiones LI matches LD .

    PUNTO           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    OR              reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    AND             reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    MAYORIGUAL      reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    MAYOR           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    MENORIGUAL      reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    MENOR           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    IGUALDAD        reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    DESIGUALDAD     reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    RESTA           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    SUMA            reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    MULTI           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    DIVI            reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    MODULO          reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    FUNCION         reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    LET             reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    ID              reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    $end            reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    PYC             reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    LD              reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    PRINTLN         reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    PRINT           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    MATCH           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    IF              reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    WHILE           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    RETURN          reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    LOOP            reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    GBAJO           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    NOT             reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    PI              reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    POWF            reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    POW             reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    ENTERO          reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    FLOAT           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    CADENA          reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    CARACTER        reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    TRUE            reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    FALSE           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    IGUAL           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    BARRA           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    COMA            reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    PD              reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    LI              reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    BREAK           reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)
    CONTINUE        reduce using rule 46 (start_match -> MATCH expresiones LI matches LD .)


state 196

    (47) matches -> matches bloque_match .

    LD              reduce using rule 47 (matches -> matches bloque_match .)
    PRINTLN         reduce using rule 47 (matches -> matches bloque_match .)
    PRINT           reduce using rule 47 (matches -> matches bloque_match .)
    ID              reduce using rule 47 (matches -> matches bloque_match .)
    MATCH           reduce using rule 47 (matches -> matches bloque_match .)
    IF              reduce using rule 47 (matches -> matches bloque_match .)
    WHILE           reduce using rule 47 (matches -> matches bloque_match .)
    RETURN          reduce using rule 47 (matches -> matches bloque_match .)
    LOOP            reduce using rule 47 (matches -> matches bloque_match .)
    GBAJO           reduce using rule 47 (matches -> matches bloque_match .)
    NOT             reduce using rule 47 (matches -> matches bloque_match .)
    RESTA           reduce using rule 47 (matches -> matches bloque_match .)
    PI              reduce using rule 47 (matches -> matches bloque_match .)
    POWF            reduce using rule 47 (matches -> matches bloque_match .)
    POW             reduce using rule 47 (matches -> matches bloque_match .)
    ENTERO          reduce using rule 47 (matches -> matches bloque_match .)
    FLOAT           reduce using rule 47 (matches -> matches bloque_match .)
    CADENA          reduce using rule 47 (matches -> matches bloque_match .)
    CARACTER        reduce using rule 47 (matches -> matches bloque_match .)
    TRUE            reduce using rule 47 (matches -> matches bloque_match .)
    FALSE           reduce using rule 47 (matches -> matches bloque_match .)
    IGUAL           reduce using rule 47 (matches -> matches bloque_match .)
    BARRA           reduce using rule 47 (matches -> matches bloque_match .)
    PUNTO           reduce using rule 47 (matches -> matches bloque_match .)
    OR              reduce using rule 47 (matches -> matches bloque_match .)
    AND             reduce using rule 47 (matches -> matches bloque_match .)
    MAYORIGUAL      reduce using rule 47 (matches -> matches bloque_match .)
    MAYOR           reduce using rule 47 (matches -> matches bloque_match .)
    MENORIGUAL      reduce using rule 47 (matches -> matches bloque_match .)
    MENOR           reduce using rule 47 (matches -> matches bloque_match .)
    IGUALDAD        reduce using rule 47 (matches -> matches bloque_match .)
    DESIGUALDAD     reduce using rule 47 (matches -> matches bloque_match .)
    SUMA            reduce using rule 47 (matches -> matches bloque_match .)
    MULTI           reduce using rule 47 (matches -> matches bloque_match .)
    DIVI            reduce using rule 47 (matches -> matches bloque_match .)
    MODULO          reduce using rule 47 (matches -> matches bloque_match .)


state 197

    (27) bloque_match -> return_ins PYC .

    LD              reduce using rule 27 (bloque_match -> return_ins PYC .)
    PRINTLN         reduce using rule 27 (bloque_match -> return_ins PYC .)
    PRINT           reduce using rule 27 (bloque_match -> return_ins PYC .)
    ID              reduce using rule 27 (bloque_match -> return_ins PYC .)
    MATCH           reduce using rule 27 (bloque_match -> return_ins PYC .)
    IF              reduce using rule 27 (bloque_match -> return_ins PYC .)
    WHILE           reduce using rule 27 (bloque_match -> return_ins PYC .)
    RETURN          reduce using rule 27 (bloque_match -> return_ins PYC .)
    LOOP            reduce using rule 27 (bloque_match -> return_ins PYC .)
    GBAJO           reduce using rule 27 (bloque_match -> return_ins PYC .)
    NOT             reduce using rule 27 (bloque_match -> return_ins PYC .)
    RESTA           reduce using rule 27 (bloque_match -> return_ins PYC .)
    PI              reduce using rule 27 (bloque_match -> return_ins PYC .)
    POWF            reduce using rule 27 (bloque_match -> return_ins PYC .)
    POW             reduce using rule 27 (bloque_match -> return_ins PYC .)
    ENTERO          reduce using rule 27 (bloque_match -> return_ins PYC .)
    FLOAT           reduce using rule 27 (bloque_match -> return_ins PYC .)
    CADENA          reduce using rule 27 (bloque_match -> return_ins PYC .)
    CARACTER        reduce using rule 27 (bloque_match -> return_ins PYC .)
    TRUE            reduce using rule 27 (bloque_match -> return_ins PYC .)
    FALSE           reduce using rule 27 (bloque_match -> return_ins PYC .)
    IGUAL           reduce using rule 27 (bloque_match -> return_ins PYC .)
    BARRA           reduce using rule 27 (bloque_match -> return_ins PYC .)
    PUNTO           reduce using rule 27 (bloque_match -> return_ins PYC .)
    OR              reduce using rule 27 (bloque_match -> return_ins PYC .)
    AND             reduce using rule 27 (bloque_match -> return_ins PYC .)
    MAYORIGUAL      reduce using rule 27 (bloque_match -> return_ins PYC .)
    MAYOR           reduce using rule 27 (bloque_match -> return_ins PYC .)
    MENORIGUAL      reduce using rule 27 (bloque_match -> return_ins PYC .)
    MENOR           reduce using rule 27 (bloque_match -> return_ins PYC .)
    IGUALDAD        reduce using rule 27 (bloque_match -> return_ins PYC .)
    DESIGUALDAD     reduce using rule 27 (bloque_match -> return_ins PYC .)
    SUMA            reduce using rule 27 (bloque_match -> return_ins PYC .)
    MULTI           reduce using rule 27 (bloque_match -> return_ins PYC .)
    DIVI            reduce using rule 27 (bloque_match -> return_ins PYC .)
    MODULO          reduce using rule 27 (bloque_match -> return_ins PYC .)
    COMA            reduce using rule 27 (bloque_match -> return_ins PYC .)


state 198

    (49) bloque_match -> varios_match IGUAL . MAYOR simple_bloque_exp COMA
    (50) bloque_match -> varios_match IGUAL . MAYOR LI list_exp_ins LD

    MAYOR           shift and go to state 212


state 199

    (55) varios_match -> varios_match BARRA . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 213
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 200

    (39) start_if -> IF expresiones LI list_exp_ins LD .
    (40) start_if -> IF expresiones LI list_exp_ins LD . ELSE LI list_exp_ins LD
    (41) start_if -> IF expresiones LI list_exp_ins LD . lista_elif
    (42) start_if -> IF expresiones LI list_exp_ins LD . lista_elif ELSE LI list_exp_ins LD
    (43) lista_elif -> . lista_elif else_if
    (44) lista_elif -> . else_if
    (45) else_if -> . ELSE IF expresiones LI list_exp_ins LD

    PUNTO           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    OR              reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    AND             reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    MAYORIGUAL      reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    MAYOR           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    MENORIGUAL      reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    MENOR           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    IGUALDAD        reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    DESIGUALDAD     reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    RESTA           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    SUMA            reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    MULTI           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    DIVI            reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    MODULO          reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    FUNCION         reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    LET             reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    ID              reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    $end            reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    PYC             reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    LD              reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    PRINTLN         reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    PRINT           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    MATCH           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    IF              reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    WHILE           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    RETURN          reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    LOOP            reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    GBAJO           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    NOT             reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    PI              reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    POWF            reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    POW             reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    ENTERO          reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    FLOAT           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    CADENA          reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    CARACTER        reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    TRUE            reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    FALSE           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    IGUAL           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    BARRA           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    COMA            reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    PD              reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    LI              reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    BREAK           reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    CONTINUE        reduce using rule 39 (start_if -> IF expresiones LI list_exp_ins LD .)
    ELSE            shift and go to state 214

    lista_elif                     shift and go to state 215
    else_if                        shift and go to state 216

state 201

    (37) list_exp_ins -> list_exp_ins bloque_exp .

    LD              reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    PRINTLN         reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    PRINT           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    LET             reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    ID              reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    MATCH           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    IF              reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    WHILE           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    RETURN          reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    BREAK           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    CONTINUE        reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    LOOP            reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    NOT             reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    RESTA           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    PI              reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    POWF            reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    POW             reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    ENTERO          reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    FLOAT           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    CADENA          reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    CARACTER        reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    TRUE            reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    FALSE           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    PUNTO           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    OR              reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    AND             reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    MAYORIGUAL      reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    MAYOR           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    MENORIGUAL      reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    MENOR           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    IGUALDAD        reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    DESIGUALDAD     reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    SUMA            reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    MULTI           reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    DIVI            reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)
    MODULO          reduce using rule 37 (list_exp_ins -> list_exp_ins bloque_exp .)


state 202

    (90) impresiones -> PRINTLN PI CADENA . PD
    (92) impresiones -> PRINTLN PI CADENA . COMA impresion_valores PD

    PD              shift and go to state 217
    COMA            shift and go to state 218


state 203

    (91) impresiones -> PRINT PI CADENA . PD
    (93) impresiones -> PRINT PI CADENA . COMA impresion_valores PD

    PD              shift and go to state 219
    COMA            shift and go to state 220


state 204

    (36) start_while -> WHILE expresiones LI . lista_bloque LD
    (7) lista_bloque -> . lista_bloque bloque
    (8) lista_bloque -> . bloque
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD

  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 125
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38

  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]

    lista_bloque                   shift and go to state 221
    bloque                         shift and go to state 111
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    start_match                    shift and go to state 116
    start_if                       shift and go to state 117
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 122

state 205

    (78) declaracion -> LET mutable ID tipado IGUAL expresiones PYC .

    FUNCION         reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    LET             reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    ID              reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    $end            reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    LD              reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    PRINTLN         reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    PRINT           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MATCH           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    IF              reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    WHILE           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    RETURN          reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    BREAK           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    CONTINUE        reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    LOOP            reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    NOT             reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    RESTA           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    PI              reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    POWF            reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    POW             reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    ENTERO          reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    FLOAT           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    CADENA          reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    CARACTER        reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    TRUE            reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    FALSE           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    PUNTO           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    OR              reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    AND             reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MAYORIGUAL      reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MAYOR           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MENORIGUAL      reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MENOR           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    IGUALDAD        reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    DESIGUALDAD     reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    SUMA            reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MULTI           reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    DIVI            reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)
    MODULO          reduce using rule 78 (declaracion -> LET mutable ID tipado IGUAL expresiones PYC .)


state 206

    (63) funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD .

    FUNCION         reduce using rule 63 (funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD .)
    LET             reduce using rule 63 (funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD .)
    ID              reduce using rule 63 (funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD .)
    $end            reduce using rule 63 (funcion -> FUNCION ID PI PD tipo_funcion LI lista_bloque LD .)


state 207

    (75) tipo_funcion -> RESTA MAYOR VECTOR MENOR . tipo_datos MAYOR
    (84) tipo_datos -> . TIPOINT
    (85) tipo_datos -> . TIPOFLOAT
    (86) tipo_datos -> . TIPOCHAR
    (87) tipo_datos -> . TIPOSTRING
    (88) tipo_datos -> . DIRSTRING
    (89) tipo_datos -> . TIPOBOOL

    TIPOINT         shift and go to state 133
    TIPOFLOAT       shift and go to state 134
    TIPOCHAR        shift and go to state 135
    TIPOSTRING      shift and go to state 136
    DIRSTRING       shift and go to state 137
    TIPOBOOL        shift and go to state 138

    tipo_datos                     shift and go to state 222

state 208

    (64) funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque . LD
    (7) lista_bloque -> lista_bloque . bloque
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              shift and go to state 223
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 125
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38

  ! LD              [ reduce using rule 20 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]

    bloque                         shift and go to state 172
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    start_match                    shift and go to state 116
    start_if                       shift and go to state 117
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 122

state 209

    (67) definiciones -> referencias mutable ID VECTOR tipado_vector .

    PD              reduce using rule 67 (definiciones -> referencias mutable ID VECTOR tipado_vector .)
    COMA            reduce using rule 67 (definiciones -> referencias mutable ID VECTOR tipado_vector .)


state 210

    (129) expre_aritmetica -> POWF PI expresiones COMA expresiones PD .

    PUNTO           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    OR              reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    AND             reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MAYORIGUAL      reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MAYOR           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MENORIGUAL      reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MENOR           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    IGUALDAD        reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    DESIGUALDAD     reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    RESTA           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    SUMA            reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MULTI           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    DIVI            reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MODULO          reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    FUNCION         reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    LET             reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    ID              reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    $end            reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    PYC             reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    LD              reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    PRINTLN         reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    PRINT           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    MATCH           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    IF              reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    WHILE           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    RETURN          reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    LOOP            reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    GBAJO           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    NOT             reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    PI              reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    POWF            reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    POW             reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    ENTERO          reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    FLOAT           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    CADENA          reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    CARACTER        reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    TRUE            reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    FALSE           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    IGUAL           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    BARRA           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    COMA            reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    PD              reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    LI              reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    BREAK           reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)
    CONTINUE        reduce using rule 129 (expre_aritmetica -> POWF PI expresiones COMA expresiones PD .)


state 211

    (130) expre_aritmetica -> POW PI expresiones COMA expresiones PD .

    PUNTO           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    OR              reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    AND             reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MAYORIGUAL      reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MAYOR           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MENORIGUAL      reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MENOR           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    IGUALDAD        reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    DESIGUALDAD     reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    RESTA           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    SUMA            reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MULTI           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    DIVI            reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MODULO          reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    FUNCION         reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    LET             reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    ID              reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    $end            reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    PYC             reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    LD              reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    PRINTLN         reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    PRINT           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    MATCH           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    IF              reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    WHILE           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    RETURN          reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    LOOP            reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    GBAJO           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    NOT             reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    PI              reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    POWF            reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    POW             reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    ENTERO          reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    FLOAT           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    CADENA          reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    CARACTER        reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    TRUE            reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    FALSE           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    IGUAL           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    BARRA           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    COMA            reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    PD              reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    LI              reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    BREAK           reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)
    CONTINUE        reduce using rule 130 (expre_aritmetica -> POW PI expresiones COMA expresiones PD .)


state 212

    (49) bloque_match -> varios_match IGUAL MAYOR . simple_bloque_exp COMA
    (50) bloque_match -> varios_match IGUAL MAYOR . LI list_exp_ins LD
    (51) simple_bloque_exp -> . expresiones
    (52) simple_bloque_exp -> . bloque_match
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (21) bloque_match -> . impresiones
    (22) bloque_match -> . asignacion
    (23) bloque_match -> . llamada
    (24) bloque_match -> . start_match
    (25) bloque_match -> . start_if
    (26) bloque_match -> . start_while
    (27) bloque_match -> . return_ins PYC
    (28) bloque_match -> . start_loop
    (29) bloque_match -> .
    (49) bloque_match -> . varios_match IGUAL MAYOR simple_bloque_exp COMA
    (50) bloque_match -> . varios_match IGUAL MAYOR LI list_exp_ins LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (30) start_loop -> . LOOP LI lista_bloque LD
    (55) varios_match -> . varios_match BARRA expresiones
    (56) varios_match -> . expresiones
    (57) varios_match -> . GBAJO
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! reduce/reduce conflict for COMA resolved using rule 29 (bloque_match -> .)
  ! shift/reduce conflict for RESTA resolved as shift
    LI              shift and go to state 225
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    IGUAL           reduce using rule 101 (expresiones -> .)
    BARRA           reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 29 (bloque_match -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    LOOP            shift and go to state 38
    GBAJO           shift and go to state 162
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! COMA            [ reduce using rule 101 (expresiones -> .) ]

    varios_match                   shift and go to state 160
    simple_bloque_exp              shift and go to state 224
    expresiones                    shift and go to state 226
    bloque_match                   shift and go to state 227
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    impresiones                    shift and go to state 152
    asignacion                     shift and go to state 153
    llamada                        shift and go to state 154
    start_match                    shift and go to state 155
    start_if                       shift and go to state 156
    start_while                    shift and go to state 157
    return_ins                     shift and go to state 158
    start_loop                     shift and go to state 159
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 213

    (55) varios_match -> varios_match BARRA expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    IGUAL           reduce using rule 55 (varios_match -> varios_match BARRA expresiones .)
    BARRA           reduce using rule 55 (varios_match -> varios_match BARRA expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 214

    (40) start_if -> IF expresiones LI list_exp_ins LD ELSE . LI list_exp_ins LD
    (45) else_if -> ELSE . IF expresiones LI list_exp_ins LD

    LI              shift and go to state 229
    IF              shift and go to state 228


state 215

    (41) start_if -> IF expresiones LI list_exp_ins LD lista_elif .
    (42) start_if -> IF expresiones LI list_exp_ins LD lista_elif . ELSE LI list_exp_ins LD
    (43) lista_elif -> lista_elif . else_if
    (45) else_if -> . ELSE IF expresiones LI list_exp_ins LD

    PUNTO           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    OR              reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    AND             reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MAYORIGUAL      reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MAYOR           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MENORIGUAL      reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MENOR           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    IGUALDAD        reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    DESIGUALDAD     reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    RESTA           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    SUMA            reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MULTI           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    DIVI            reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MODULO          reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    FUNCION         reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    LET             reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    ID              reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    $end            reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    PYC             reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    LD              reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    PRINTLN         reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    PRINT           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    MATCH           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    IF              reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    WHILE           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    RETURN          reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    LOOP            reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    GBAJO           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    NOT             reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    PI              reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    POWF            reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    POW             reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    ENTERO          reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    FLOAT           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    CADENA          reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    CARACTER        reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    TRUE            reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    FALSE           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    IGUAL           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    BARRA           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    COMA            reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    PD              reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    LI              reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    BREAK           reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    CONTINUE        reduce using rule 41 (start_if -> IF expresiones LI list_exp_ins LD lista_elif .)
    ELSE            shift and go to state 230

    else_if                        shift and go to state 231

state 216

    (44) lista_elif -> else_if .

    ELSE            reduce using rule 44 (lista_elif -> else_if .)
    PUNTO           reduce using rule 44 (lista_elif -> else_if .)
    OR              reduce using rule 44 (lista_elif -> else_if .)
    AND             reduce using rule 44 (lista_elif -> else_if .)
    MAYORIGUAL      reduce using rule 44 (lista_elif -> else_if .)
    MAYOR           reduce using rule 44 (lista_elif -> else_if .)
    MENORIGUAL      reduce using rule 44 (lista_elif -> else_if .)
    MENOR           reduce using rule 44 (lista_elif -> else_if .)
    IGUALDAD        reduce using rule 44 (lista_elif -> else_if .)
    DESIGUALDAD     reduce using rule 44 (lista_elif -> else_if .)
    RESTA           reduce using rule 44 (lista_elif -> else_if .)
    SUMA            reduce using rule 44 (lista_elif -> else_if .)
    MULTI           reduce using rule 44 (lista_elif -> else_if .)
    DIVI            reduce using rule 44 (lista_elif -> else_if .)
    MODULO          reduce using rule 44 (lista_elif -> else_if .)
    FUNCION         reduce using rule 44 (lista_elif -> else_if .)
    LET             reduce using rule 44 (lista_elif -> else_if .)
    ID              reduce using rule 44 (lista_elif -> else_if .)
    $end            reduce using rule 44 (lista_elif -> else_if .)
    PYC             reduce using rule 44 (lista_elif -> else_if .)
    LD              reduce using rule 44 (lista_elif -> else_if .)
    PRINTLN         reduce using rule 44 (lista_elif -> else_if .)
    PRINT           reduce using rule 44 (lista_elif -> else_if .)
    MATCH           reduce using rule 44 (lista_elif -> else_if .)
    IF              reduce using rule 44 (lista_elif -> else_if .)
    WHILE           reduce using rule 44 (lista_elif -> else_if .)
    RETURN          reduce using rule 44 (lista_elif -> else_if .)
    LOOP            reduce using rule 44 (lista_elif -> else_if .)
    GBAJO           reduce using rule 44 (lista_elif -> else_if .)
    NOT             reduce using rule 44 (lista_elif -> else_if .)
    PI              reduce using rule 44 (lista_elif -> else_if .)
    POWF            reduce using rule 44 (lista_elif -> else_if .)
    POW             reduce using rule 44 (lista_elif -> else_if .)
    ENTERO          reduce using rule 44 (lista_elif -> else_if .)
    FLOAT           reduce using rule 44 (lista_elif -> else_if .)
    CADENA          reduce using rule 44 (lista_elif -> else_if .)
    CARACTER        reduce using rule 44 (lista_elif -> else_if .)
    TRUE            reduce using rule 44 (lista_elif -> else_if .)
    FALSE           reduce using rule 44 (lista_elif -> else_if .)
    IGUAL           reduce using rule 44 (lista_elif -> else_if .)
    BARRA           reduce using rule 44 (lista_elif -> else_if .)
    COMA            reduce using rule 44 (lista_elif -> else_if .)
    PD              reduce using rule 44 (lista_elif -> else_if .)
    LI              reduce using rule 44 (lista_elif -> else_if .)
    BREAK           reduce using rule 44 (lista_elif -> else_if .)
    CONTINUE        reduce using rule 44 (lista_elif -> else_if .)


state 217

    (90) impresiones -> PRINTLN PI CADENA PD .

    PYC             reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    LD              reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    PRINTLN         reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    PRINT           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    ID              reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    MATCH           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    IF              reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    WHILE           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    RETURN          reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    LOOP            reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    GBAJO           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    NOT             reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    RESTA           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    PI              reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    POWF            reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    POW             reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    ENTERO          reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    FLOAT           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    CADENA          reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    CARACTER        reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    TRUE            reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    FALSE           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    IGUAL           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    BARRA           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    PUNTO           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    OR              reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    AND             reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    MAYORIGUAL      reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    MAYOR           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    MENORIGUAL      reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    MENOR           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    IGUALDAD        reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    DESIGUALDAD     reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    SUMA            reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    MULTI           reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    DIVI            reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    MODULO          reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)
    COMA            reduce using rule 90 (impresiones -> PRINTLN PI CADENA PD .)


state 218

    (92) impresiones -> PRINTLN PI CADENA COMA . impresion_valores PD
    (94) impresion_valores -> . impresion_valores COMA expresiones
    (95) impresion_valores -> . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    impresion_valores              shift and go to state 232
    expresiones                    shift and go to state 233
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 219

    (91) impresiones -> PRINT PI CADENA PD .

    PYC             reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    LD              reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    PRINTLN         reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    PRINT           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    ID              reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    MATCH           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    IF              reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    WHILE           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    RETURN          reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    LOOP            reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    GBAJO           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    NOT             reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    RESTA           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    PI              reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    POWF            reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    POW             reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    ENTERO          reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    FLOAT           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    CADENA          reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    CARACTER        reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    TRUE            reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    FALSE           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    IGUAL           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    BARRA           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    PUNTO           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    OR              reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    AND             reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    MAYORIGUAL      reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    MAYOR           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    MENORIGUAL      reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    MENOR           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    IGUALDAD        reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    DESIGUALDAD     reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    SUMA            reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    MULTI           reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    DIVI            reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    MODULO          reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)
    COMA            reduce using rule 91 (impresiones -> PRINT PI CADENA PD .)


state 220

    (93) impresiones -> PRINT PI CADENA COMA . impresion_valores PD
    (94) impresion_valores -> . impresion_valores COMA expresiones
    (95) impresion_valores -> . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    impresion_valores              shift and go to state 234
    expresiones                    shift and go to state 233
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 221

    (36) start_while -> WHILE expresiones LI lista_bloque . LD
    (7) lista_bloque -> lista_bloque . bloque
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD

  ! shift/reduce conflict for LD resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
    LD              shift and go to state 235
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 125
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38

  ! LD              [ reduce using rule 20 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]

    bloque                         shift and go to state 172
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 115
    start_match                    shift and go to state 116
    start_if                       shift and go to state 117
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 122

state 222

    (75) tipo_funcion -> RESTA MAYOR VECTOR MENOR tipo_datos . MAYOR

    MAYOR           shift and go to state 236


state 223

    (64) funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD .

    FUNCION         reduce using rule 64 (funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD .)
    LET             reduce using rule 64 (funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD .)
    ID              reduce using rule 64 (funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD .)
    $end            reduce using rule 64 (funcion -> FUNCION ID PI parametros PD tipo_funcion LI lista_bloque LD .)


state 224

    (49) bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp . COMA

    COMA            shift and go to state 237


state 225

    (50) bloque_match -> varios_match IGUAL MAYOR LI . list_exp_ins LD
    (37) list_exp_ins -> . list_exp_ins bloque_exp
    (38) list_exp_ins -> . bloque_exp
    (53) bloque_exp -> . bloque
    (54) bloque_exp -> . expresiones
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 20 (bloque -> .)
    PUNTO           reduce using rule 20 (bloque -> .)
    OR              reduce using rule 20 (bloque -> .)
    AND             reduce using rule 20 (bloque -> .)
    MAYORIGUAL      reduce using rule 20 (bloque -> .)
    MAYOR           reduce using rule 20 (bloque -> .)
    MENORIGUAL      reduce using rule 20 (bloque -> .)
    MENOR           reduce using rule 20 (bloque -> .)
    IGUALDAD        reduce using rule 20 (bloque -> .)
    DESIGUALDAD     reduce using rule 20 (bloque -> .)
    SUMA            reduce using rule 20 (bloque -> .)
    MULTI           reduce using rule 20 (bloque -> .)
    DIVI            reduce using rule 20 (bloque -> .)
    MODULO          reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]
  ! NOT             [ reduce using rule 20 (bloque -> .) ]
  ! RESTA           [ reduce using rule 20 (bloque -> .) ]
  ! PI              [ reduce using rule 20 (bloque -> .) ]
  ! POWF            [ reduce using rule 20 (bloque -> .) ]
  ! POW             [ reduce using rule 20 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 20 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 20 (bloque -> .) ]
  ! CADENA          [ reduce using rule 20 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 20 (bloque -> .) ]
  ! TRUE            [ reduce using rule 20 (bloque -> .) ]
  ! FALSE           [ reduce using rule 20 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! LD              [ reduce using rule 101 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 101 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 101 (expresiones -> .) ]
  ! LET             [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 101 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 101 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 101 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    list_exp_ins                   shift and go to state 238
    bloque_exp                     shift and go to state 165
    bloque                         shift and go to state 166
    expresiones                    shift and go to state 163
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 167
    start_match                    shift and go to state 168
    start_if                       shift and go to state 169
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 170
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 226

    (51) simple_bloque_exp -> expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones
    (56) varios_match -> expresiones .

    COMA            reduce using rule 51 (simple_bloque_exp -> expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66
    IGUAL           reduce using rule 56 (varios_match -> expresiones .)
    BARRA           reduce using rule 56 (varios_match -> expresiones .)


state 227

    (52) simple_bloque_exp -> bloque_match .

    COMA            reduce using rule 52 (simple_bloque_exp -> bloque_match .)


state 228

    (45) else_if -> ELSE IF . expresiones LI list_exp_ins LD
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    LI              reduce using rule 101 (expresiones -> .)
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 239
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 229

    (40) start_if -> IF expresiones LI list_exp_ins LD ELSE LI . list_exp_ins LD
    (37) list_exp_ins -> . list_exp_ins bloque_exp
    (38) list_exp_ins -> . bloque_exp
    (53) bloque_exp -> . bloque
    (54) bloque_exp -> . expresiones
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 20 (bloque -> .)
    PUNTO           reduce using rule 20 (bloque -> .)
    OR              reduce using rule 20 (bloque -> .)
    AND             reduce using rule 20 (bloque -> .)
    MAYORIGUAL      reduce using rule 20 (bloque -> .)
    MAYOR           reduce using rule 20 (bloque -> .)
    MENORIGUAL      reduce using rule 20 (bloque -> .)
    MENOR           reduce using rule 20 (bloque -> .)
    IGUALDAD        reduce using rule 20 (bloque -> .)
    DESIGUALDAD     reduce using rule 20 (bloque -> .)
    SUMA            reduce using rule 20 (bloque -> .)
    MULTI           reduce using rule 20 (bloque -> .)
    DIVI            reduce using rule 20 (bloque -> .)
    MODULO          reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]
  ! NOT             [ reduce using rule 20 (bloque -> .) ]
  ! RESTA           [ reduce using rule 20 (bloque -> .) ]
  ! PI              [ reduce using rule 20 (bloque -> .) ]
  ! POWF            [ reduce using rule 20 (bloque -> .) ]
  ! POW             [ reduce using rule 20 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 20 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 20 (bloque -> .) ]
  ! CADENA          [ reduce using rule 20 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 20 (bloque -> .) ]
  ! TRUE            [ reduce using rule 20 (bloque -> .) ]
  ! FALSE           [ reduce using rule 20 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! LD              [ reduce using rule 101 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 101 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 101 (expresiones -> .) ]
  ! LET             [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 101 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 101 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 101 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 163
    list_exp_ins                   shift and go to state 240
    bloque_exp                     shift and go to state 165
    bloque                         shift and go to state 166
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 167
    start_match                    shift and go to state 168
    start_if                       shift and go to state 169
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 170
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 230

    (42) start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE . LI list_exp_ins LD
    (45) else_if -> ELSE . IF expresiones LI list_exp_ins LD

    LI              shift and go to state 241
    IF              shift and go to state 228


state 231

    (43) lista_elif -> lista_elif else_if .

    ELSE            reduce using rule 43 (lista_elif -> lista_elif else_if .)
    PUNTO           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    OR              reduce using rule 43 (lista_elif -> lista_elif else_if .)
    AND             reduce using rule 43 (lista_elif -> lista_elif else_if .)
    MAYORIGUAL      reduce using rule 43 (lista_elif -> lista_elif else_if .)
    MAYOR           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    MENORIGUAL      reduce using rule 43 (lista_elif -> lista_elif else_if .)
    MENOR           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    IGUALDAD        reduce using rule 43 (lista_elif -> lista_elif else_if .)
    DESIGUALDAD     reduce using rule 43 (lista_elif -> lista_elif else_if .)
    RESTA           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    SUMA            reduce using rule 43 (lista_elif -> lista_elif else_if .)
    MULTI           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    DIVI            reduce using rule 43 (lista_elif -> lista_elif else_if .)
    MODULO          reduce using rule 43 (lista_elif -> lista_elif else_if .)
    FUNCION         reduce using rule 43 (lista_elif -> lista_elif else_if .)
    LET             reduce using rule 43 (lista_elif -> lista_elif else_if .)
    ID              reduce using rule 43 (lista_elif -> lista_elif else_if .)
    $end            reduce using rule 43 (lista_elif -> lista_elif else_if .)
    PYC             reduce using rule 43 (lista_elif -> lista_elif else_if .)
    LD              reduce using rule 43 (lista_elif -> lista_elif else_if .)
    PRINTLN         reduce using rule 43 (lista_elif -> lista_elif else_if .)
    PRINT           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    MATCH           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    IF              reduce using rule 43 (lista_elif -> lista_elif else_if .)
    WHILE           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    RETURN          reduce using rule 43 (lista_elif -> lista_elif else_if .)
    LOOP            reduce using rule 43 (lista_elif -> lista_elif else_if .)
    GBAJO           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    NOT             reduce using rule 43 (lista_elif -> lista_elif else_if .)
    PI              reduce using rule 43 (lista_elif -> lista_elif else_if .)
    POWF            reduce using rule 43 (lista_elif -> lista_elif else_if .)
    POW             reduce using rule 43 (lista_elif -> lista_elif else_if .)
    ENTERO          reduce using rule 43 (lista_elif -> lista_elif else_if .)
    FLOAT           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    CADENA          reduce using rule 43 (lista_elif -> lista_elif else_if .)
    CARACTER        reduce using rule 43 (lista_elif -> lista_elif else_if .)
    TRUE            reduce using rule 43 (lista_elif -> lista_elif else_if .)
    FALSE           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    IGUAL           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    BARRA           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    COMA            reduce using rule 43 (lista_elif -> lista_elif else_if .)
    PD              reduce using rule 43 (lista_elif -> lista_elif else_if .)
    LI              reduce using rule 43 (lista_elif -> lista_elif else_if .)
    BREAK           reduce using rule 43 (lista_elif -> lista_elif else_if .)
    CONTINUE        reduce using rule 43 (lista_elif -> lista_elif else_if .)


state 232

    (92) impresiones -> PRINTLN PI CADENA COMA impresion_valores . PD
    (94) impresion_valores -> impresion_valores . COMA expresiones

    PD              shift and go to state 243
    COMA            shift and go to state 242


state 233

    (95) impresion_valores -> expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PD              reduce using rule 95 (impresion_valores -> expresiones .)
    COMA            reduce using rule 95 (impresion_valores -> expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 234

    (93) impresiones -> PRINT PI CADENA COMA impresion_valores . PD
    (94) impresion_valores -> impresion_valores . COMA expresiones

    PD              shift and go to state 244
    COMA            shift and go to state 242


state 235

    (36) start_while -> WHILE expresiones LI lista_bloque LD .

    LD              reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    PRINTLN         reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    PRINT           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    LET             reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    ID              reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MATCH           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    IF              reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    WHILE           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    RETURN          reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    BREAK           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    CONTINUE        reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    LOOP            reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    GBAJO           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    NOT             reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    RESTA           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    PI              reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    POWF            reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    POW             reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    ENTERO          reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    FLOAT           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    CADENA          reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    CARACTER        reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    TRUE            reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    FALSE           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    IGUAL           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    BARRA           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    PUNTO           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    OR              reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    AND             reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MAYORIGUAL      reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MAYOR           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MENORIGUAL      reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MENOR           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    IGUALDAD        reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    DESIGUALDAD     reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    SUMA            reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MULTI           reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    DIVI            reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    MODULO          reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)
    COMA            reduce using rule 36 (start_while -> WHILE expresiones LI lista_bloque LD .)


state 236

    (75) tipo_funcion -> RESTA MAYOR VECTOR MENOR tipo_datos MAYOR .

    LI              reduce using rule 75 (tipo_funcion -> RESTA MAYOR VECTOR MENOR tipo_datos MAYOR .)


state 237

    (49) bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .

    LD              reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    PRINTLN         reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    PRINT           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    ID              reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MATCH           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    IF              reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    WHILE           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    RETURN          reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    LOOP            reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    GBAJO           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    NOT             reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    RESTA           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    PI              reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    POWF            reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    POW             reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    ENTERO          reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    FLOAT           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    CADENA          reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    CARACTER        reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    TRUE            reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    FALSE           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    IGUAL           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    BARRA           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    PUNTO           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    OR              reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    AND             reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MAYORIGUAL      reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MAYOR           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MENORIGUAL      reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MENOR           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    IGUALDAD        reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    DESIGUALDAD     reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    SUMA            reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MULTI           reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    DIVI            reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    MODULO          reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)
    COMA            reduce using rule 49 (bloque_match -> varios_match IGUAL MAYOR simple_bloque_exp COMA .)


state 238

    (50) bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins . LD
    (37) list_exp_ins -> list_exp_ins . bloque_exp
    (53) bloque_exp -> . bloque
    (54) bloque_exp -> . expresiones
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 245
    PUNTO           reduce using rule 20 (bloque -> .)
    OR              reduce using rule 20 (bloque -> .)
    AND             reduce using rule 20 (bloque -> .)
    MAYORIGUAL      reduce using rule 20 (bloque -> .)
    MAYOR           reduce using rule 20 (bloque -> .)
    MENORIGUAL      reduce using rule 20 (bloque -> .)
    MENOR           reduce using rule 20 (bloque -> .)
    IGUALDAD        reduce using rule 20 (bloque -> .)
    DESIGUALDAD     reduce using rule 20 (bloque -> .)
    SUMA            reduce using rule 20 (bloque -> .)
    MULTI           reduce using rule 20 (bloque -> .)
    DIVI            reduce using rule 20 (bloque -> .)
    MODULO          reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! LD              [ reduce using rule 20 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]
  ! NOT             [ reduce using rule 20 (bloque -> .) ]
  ! RESTA           [ reduce using rule 20 (bloque -> .) ]
  ! PI              [ reduce using rule 20 (bloque -> .) ]
  ! POWF            [ reduce using rule 20 (bloque -> .) ]
  ! POW             [ reduce using rule 20 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 20 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 20 (bloque -> .) ]
  ! CADENA          [ reduce using rule 20 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 20 (bloque -> .) ]
  ! TRUE            [ reduce using rule 20 (bloque -> .) ]
  ! FALSE           [ reduce using rule 20 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! LD              [ reduce using rule 101 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 101 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 101 (expresiones -> .) ]
  ! LET             [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 101 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 101 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 101 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    bloque_exp                     shift and go to state 201
    bloque                         shift and go to state 166
    expresiones                    shift and go to state 163
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 167
    start_match                    shift and go to state 168
    start_if                       shift and go to state 169
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 170
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 239

    (45) else_if -> ELSE IF expresiones . LI list_exp_ins LD
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    LI              shift and go to state 246
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 240

    (40) start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins . LD
    (37) list_exp_ins -> list_exp_ins . bloque_exp
    (53) bloque_exp -> . bloque
    (54) bloque_exp -> . expresiones
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 247
    PUNTO           reduce using rule 20 (bloque -> .)
    OR              reduce using rule 20 (bloque -> .)
    AND             reduce using rule 20 (bloque -> .)
    MAYORIGUAL      reduce using rule 20 (bloque -> .)
    MAYOR           reduce using rule 20 (bloque -> .)
    MENORIGUAL      reduce using rule 20 (bloque -> .)
    MENOR           reduce using rule 20 (bloque -> .)
    IGUALDAD        reduce using rule 20 (bloque -> .)
    DESIGUALDAD     reduce using rule 20 (bloque -> .)
    SUMA            reduce using rule 20 (bloque -> .)
    MULTI           reduce using rule 20 (bloque -> .)
    DIVI            reduce using rule 20 (bloque -> .)
    MODULO          reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! LD              [ reduce using rule 20 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]
  ! NOT             [ reduce using rule 20 (bloque -> .) ]
  ! RESTA           [ reduce using rule 20 (bloque -> .) ]
  ! PI              [ reduce using rule 20 (bloque -> .) ]
  ! POWF            [ reduce using rule 20 (bloque -> .) ]
  ! POW             [ reduce using rule 20 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 20 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 20 (bloque -> .) ]
  ! CADENA          [ reduce using rule 20 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 20 (bloque -> .) ]
  ! TRUE            [ reduce using rule 20 (bloque -> .) ]
  ! FALSE           [ reduce using rule 20 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! LD              [ reduce using rule 101 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 101 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 101 (expresiones -> .) ]
  ! LET             [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 101 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 101 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 101 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 163
    bloque_exp                     shift and go to state 201
    bloque                         shift and go to state 166
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 167
    start_match                    shift and go to state 168
    start_if                       shift and go to state 169
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 170
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 241

    (42) start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI . list_exp_ins LD
    (37) list_exp_ins -> . list_exp_ins bloque_exp
    (38) list_exp_ins -> . bloque_exp
    (53) bloque_exp -> . bloque
    (54) bloque_exp -> . expresiones
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 20 (bloque -> .)
    PUNTO           reduce using rule 20 (bloque -> .)
    OR              reduce using rule 20 (bloque -> .)
    AND             reduce using rule 20 (bloque -> .)
    MAYORIGUAL      reduce using rule 20 (bloque -> .)
    MAYOR           reduce using rule 20 (bloque -> .)
    MENORIGUAL      reduce using rule 20 (bloque -> .)
    MENOR           reduce using rule 20 (bloque -> .)
    IGUALDAD        reduce using rule 20 (bloque -> .)
    DESIGUALDAD     reduce using rule 20 (bloque -> .)
    SUMA            reduce using rule 20 (bloque -> .)
    MULTI           reduce using rule 20 (bloque -> .)
    DIVI            reduce using rule 20 (bloque -> .)
    MODULO          reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]
  ! NOT             [ reduce using rule 20 (bloque -> .) ]
  ! RESTA           [ reduce using rule 20 (bloque -> .) ]
  ! PI              [ reduce using rule 20 (bloque -> .) ]
  ! POWF            [ reduce using rule 20 (bloque -> .) ]
  ! POW             [ reduce using rule 20 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 20 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 20 (bloque -> .) ]
  ! CADENA          [ reduce using rule 20 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 20 (bloque -> .) ]
  ! TRUE            [ reduce using rule 20 (bloque -> .) ]
  ! FALSE           [ reduce using rule 20 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! LD              [ reduce using rule 101 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 101 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 101 (expresiones -> .) ]
  ! LET             [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 101 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 101 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 101 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 163
    list_exp_ins                   shift and go to state 248
    bloque_exp                     shift and go to state 165
    bloque                         shift and go to state 166
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 167
    start_match                    shift and go to state 168
    start_if                       shift and go to state 169
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 170
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 242

    (94) impresion_valores -> impresion_valores COMA . expresiones
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (30) start_loop -> . LOOP LI lista_bloque LD
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for RESTA resolved as shift
    PUNTO           reduce using rule 101 (expresiones -> .)
    OR              reduce using rule 101 (expresiones -> .)
    AND             reduce using rule 101 (expresiones -> .)
    MAYORIGUAL      reduce using rule 101 (expresiones -> .)
    MAYOR           reduce using rule 101 (expresiones -> .)
    MENORIGUAL      reduce using rule 101 (expresiones -> .)
    MENOR           reduce using rule 101 (expresiones -> .)
    IGUALDAD        reduce using rule 101 (expresiones -> .)
    DESIGUALDAD     reduce using rule 101 (expresiones -> .)
    SUMA            reduce using rule 101 (expresiones -> .)
    MULTI           reduce using rule 101 (expresiones -> .)
    DIVI            reduce using rule 101 (expresiones -> .)
    MODULO          reduce using rule 101 (expresiones -> .)
    PD              reduce using rule 101 (expresiones -> .)
    COMA            reduce using rule 101 (expresiones -> .)
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    LOOP            shift and go to state 38
    ID              shift and go to state 18
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 249
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    start_match                    shift and go to state 31
    start_if                       shift and go to state 32
    start_loop                     shift and go to state 33
    llamada                        shift and go to state 34
    datos                          shift and go to state 35

state 243

    (92) impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .

    PYC             reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    LD              reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    PRINTLN         reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    PRINT           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    ID              reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MATCH           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    IF              reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    WHILE           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    RETURN          reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    LOOP            reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    GBAJO           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    NOT             reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    RESTA           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    PI              reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    POWF            reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    POW             reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    ENTERO          reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    FLOAT           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    CADENA          reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    CARACTER        reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    TRUE            reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    FALSE           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    IGUAL           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    BARRA           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    PUNTO           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    OR              reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    AND             reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MAYORIGUAL      reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MAYOR           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MENORIGUAL      reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MENOR           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    IGUALDAD        reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    DESIGUALDAD     reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    SUMA            reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MULTI           reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    DIVI            reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    MODULO          reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)
    COMA            reduce using rule 92 (impresiones -> PRINTLN PI CADENA COMA impresion_valores PD .)


state 244

    (93) impresiones -> PRINT PI CADENA COMA impresion_valores PD .

    PYC             reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    LD              reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    PRINTLN         reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    PRINT           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    ID              reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MATCH           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    IF              reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    WHILE           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    RETURN          reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    LOOP            reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    GBAJO           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    NOT             reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    RESTA           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    PI              reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    POWF            reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    POW             reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    ENTERO          reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    FLOAT           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    CADENA          reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    CARACTER        reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    TRUE            reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    FALSE           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    IGUAL           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    BARRA           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    PUNTO           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    OR              reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    AND             reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MAYORIGUAL      reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MAYOR           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MENORIGUAL      reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MENOR           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    IGUALDAD        reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    DESIGUALDAD     reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    SUMA            reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MULTI           reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    DIVI            reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    MODULO          reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)
    COMA            reduce using rule 93 (impresiones -> PRINT PI CADENA COMA impresion_valores PD .)


state 245

    (50) bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .

    LD              reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    PRINTLN         reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    PRINT           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    ID              reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MATCH           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    IF              reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    WHILE           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    RETURN          reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    LOOP            reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    GBAJO           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    NOT             reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    RESTA           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    PI              reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    POWF            reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    POW             reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    ENTERO          reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    FLOAT           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    CADENA          reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    CARACTER        reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    TRUE            reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    FALSE           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    IGUAL           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    BARRA           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    PUNTO           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    OR              reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    AND             reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MAYORIGUAL      reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MAYOR           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MENORIGUAL      reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MENOR           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    IGUALDAD        reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    DESIGUALDAD     reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    SUMA            reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MULTI           reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    DIVI            reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    MODULO          reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)
    COMA            reduce using rule 50 (bloque_match -> varios_match IGUAL MAYOR LI list_exp_ins LD .)


state 246

    (45) else_if -> ELSE IF expresiones LI . list_exp_ins LD
    (37) list_exp_ins -> . list_exp_ins bloque_exp
    (38) list_exp_ins -> . bloque_exp
    (53) bloque_exp -> . bloque
    (54) bloque_exp -> . expresiones
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              reduce using rule 20 (bloque -> .)
    PUNTO           reduce using rule 20 (bloque -> .)
    OR              reduce using rule 20 (bloque -> .)
    AND             reduce using rule 20 (bloque -> .)
    MAYORIGUAL      reduce using rule 20 (bloque -> .)
    MAYOR           reduce using rule 20 (bloque -> .)
    MENORIGUAL      reduce using rule 20 (bloque -> .)
    MENOR           reduce using rule 20 (bloque -> .)
    IGUALDAD        reduce using rule 20 (bloque -> .)
    DESIGUALDAD     reduce using rule 20 (bloque -> .)
    SUMA            reduce using rule 20 (bloque -> .)
    MULTI           reduce using rule 20 (bloque -> .)
    DIVI            reduce using rule 20 (bloque -> .)
    MODULO          reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]
  ! NOT             [ reduce using rule 20 (bloque -> .) ]
  ! RESTA           [ reduce using rule 20 (bloque -> .) ]
  ! PI              [ reduce using rule 20 (bloque -> .) ]
  ! POWF            [ reduce using rule 20 (bloque -> .) ]
  ! POW             [ reduce using rule 20 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 20 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 20 (bloque -> .) ]
  ! CADENA          [ reduce using rule 20 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 20 (bloque -> .) ]
  ! TRUE            [ reduce using rule 20 (bloque -> .) ]
  ! FALSE           [ reduce using rule 20 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! LD              [ reduce using rule 101 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 101 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 101 (expresiones -> .) ]
  ! LET             [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 101 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 101 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 101 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 163
    list_exp_ins                   shift and go to state 250
    bloque_exp                     shift and go to state 165
    bloque                         shift and go to state 166
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 167
    start_match                    shift and go to state 168
    start_if                       shift and go to state 169
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 170
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 247

    (40) start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .

    PUNTO           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    OR              reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    AND             reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MAYORIGUAL      reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MAYOR           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MENORIGUAL      reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MENOR           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    IGUALDAD        reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    DESIGUALDAD     reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    RESTA           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    SUMA            reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MULTI           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    DIVI            reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MODULO          reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    FUNCION         reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    LET             reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    ID              reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    $end            reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    PYC             reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    LD              reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    PRINTLN         reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    PRINT           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    MATCH           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    IF              reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    WHILE           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    RETURN          reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    LOOP            reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    GBAJO           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    NOT             reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    PI              reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    POWF            reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    POW             reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    ENTERO          reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    FLOAT           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    CADENA          reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    CARACTER        reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    TRUE            reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    FALSE           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    IGUAL           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    BARRA           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    COMA            reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    PD              reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    LI              reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    BREAK           reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)
    CONTINUE        reduce using rule 40 (start_if -> IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD .)


state 248

    (42) start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins . LD
    (37) list_exp_ins -> list_exp_ins . bloque_exp
    (53) bloque_exp -> . bloque
    (54) bloque_exp -> . expresiones
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 251
    PUNTO           reduce using rule 20 (bloque -> .)
    OR              reduce using rule 20 (bloque -> .)
    AND             reduce using rule 20 (bloque -> .)
    MAYORIGUAL      reduce using rule 20 (bloque -> .)
    MAYOR           reduce using rule 20 (bloque -> .)
    MENORIGUAL      reduce using rule 20 (bloque -> .)
    MENOR           reduce using rule 20 (bloque -> .)
    IGUALDAD        reduce using rule 20 (bloque -> .)
    DESIGUALDAD     reduce using rule 20 (bloque -> .)
    SUMA            reduce using rule 20 (bloque -> .)
    MULTI           reduce using rule 20 (bloque -> .)
    DIVI            reduce using rule 20 (bloque -> .)
    MODULO          reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! LD              [ reduce using rule 20 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]
  ! NOT             [ reduce using rule 20 (bloque -> .) ]
  ! RESTA           [ reduce using rule 20 (bloque -> .) ]
  ! PI              [ reduce using rule 20 (bloque -> .) ]
  ! POWF            [ reduce using rule 20 (bloque -> .) ]
  ! POW             [ reduce using rule 20 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 20 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 20 (bloque -> .) ]
  ! CADENA          [ reduce using rule 20 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 20 (bloque -> .) ]
  ! TRUE            [ reduce using rule 20 (bloque -> .) ]
  ! FALSE           [ reduce using rule 20 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! LD              [ reduce using rule 101 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 101 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 101 (expresiones -> .) ]
  ! LET             [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 101 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 101 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 101 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 163
    bloque_exp                     shift and go to state 201
    bloque                         shift and go to state 166
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 167
    start_match                    shift and go to state 168
    start_if                       shift and go to state 169
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 170
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 249

    (94) impresion_valores -> impresion_valores COMA expresiones .
    (107) funcion_nativa -> expresiones . PUNTO nativas
    (113) expre_logica -> expresiones . OR expresiones
    (114) expre_logica -> expresiones . AND expresiones
    (116) expre_relacional -> expresiones . MAYORIGUAL expresiones
    (117) expre_relacional -> expresiones . MAYOR expresiones
    (118) expre_relacional -> expresiones . MENORIGUAL expresiones
    (119) expre_relacional -> expresiones . MENOR expresiones
    (120) expre_relacional -> expresiones . IGUALDAD expresiones
    (121) expre_relacional -> expresiones . DESIGUALDAD expresiones
    (124) expre_aritmetica -> expresiones . RESTA expresiones
    (125) expre_aritmetica -> expresiones . SUMA expresiones
    (126) expre_aritmetica -> expresiones . MULTI expresiones
    (127) expre_aritmetica -> expresiones . DIVI expresiones
    (128) expre_aritmetica -> expresiones . MODULO expresiones

    PD              reduce using rule 94 (impresion_valores -> impresion_valores COMA expresiones .)
    COMA            reduce using rule 94 (impresion_valores -> impresion_valores COMA expresiones .)
    PUNTO           shift and go to state 53
    OR              shift and go to state 54
    AND             shift and go to state 55
    MAYORIGUAL      shift and go to state 56
    MAYOR           shift and go to state 57
    MENORIGUAL      shift and go to state 58
    MENOR           shift and go to state 59
    IGUALDAD        shift and go to state 60
    DESIGUALDAD     shift and go to state 61
    RESTA           shift and go to state 62
    SUMA            shift and go to state 63
    MULTI           shift and go to state 64
    DIVI            shift and go to state 65
    MODULO          shift and go to state 66


state 250

    (45) else_if -> ELSE IF expresiones LI list_exp_ins . LD
    (37) list_exp_ins -> list_exp_ins . bloque_exp
    (53) bloque_exp -> . bloque
    (54) bloque_exp -> . expresiones
    (9) bloque -> . impresiones PYC
    (10) bloque -> . declaracion
    (11) bloque -> . asignacion PYC
    (12) bloque -> . llamada PYC
    (13) bloque -> . start_match
    (14) bloque -> . start_if
    (15) bloque -> . start_while
    (16) bloque -> . return_ins PYC
    (17) bloque -> . break_ins PYC
    (18) bloque -> . continue_ins PYC
    (19) bloque -> . start_loop
    (20) bloque -> .
    (96) expresiones -> . funcion_nativa
    (97) expresiones -> . expre_logica
    (98) expresiones -> . expre_relacional
    (99) expresiones -> . expre_aritmetica
    (100) expresiones -> . expre_valor
    (101) expresiones -> .
    (90) impresiones -> . PRINTLN PI CADENA PD
    (91) impresiones -> . PRINT PI CADENA PD
    (92) impresiones -> . PRINTLN PI CADENA COMA impresion_valores PD
    (93) impresiones -> . PRINT PI CADENA COMA impresion_valores PD
    (77) declaracion -> . LET mutable ID tipado PYC
    (78) declaracion -> . LET mutable ID tipado IGUAL expresiones PYC
    (79) asignacion -> . ID IGUAL expresiones
    (58) llamada -> . ID PI PD
    (59) llamada -> . ID PI lista_expres PD
    (46) start_match -> . MATCH expresiones LI matches LD
    (39) start_if -> . IF expresiones LI list_exp_ins LD
    (40) start_if -> . IF expresiones LI list_exp_ins LD ELSE LI list_exp_ins LD
    (41) start_if -> . IF expresiones LI list_exp_ins LD lista_elif
    (42) start_if -> . IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD
    (36) start_while -> . WHILE expresiones LI lista_bloque LD
    (34) return_ins -> . RETURN
    (35) return_ins -> . RETURN expresiones
    (32) break_ins -> . BREAK
    (33) break_ins -> . BREAK expresiones
    (31) continue_ins -> . CONTINUE
    (30) start_loop -> . LOOP LI lista_bloque LD
    (107) funcion_nativa -> . expresiones PUNTO nativas
    (113) expre_logica -> . expresiones OR expresiones
    (114) expre_logica -> . expresiones AND expresiones
    (115) expre_logica -> . NOT expresiones
    (116) expre_relacional -> . expresiones MAYORIGUAL expresiones
    (117) expre_relacional -> . expresiones MAYOR expresiones
    (118) expre_relacional -> . expresiones MENORIGUAL expresiones
    (119) expre_relacional -> . expresiones MENOR expresiones
    (120) expre_relacional -> . expresiones IGUALDAD expresiones
    (121) expre_relacional -> . expresiones DESIGUALDAD expresiones
    (122) expre_aritmetica -> . RESTA expresiones
    (123) expre_aritmetica -> . PI expresiones PD
    (124) expre_aritmetica -> . expresiones RESTA expresiones
    (125) expre_aritmetica -> . expresiones SUMA expresiones
    (126) expre_aritmetica -> . expresiones MULTI expresiones
    (127) expre_aritmetica -> . expresiones DIVI expresiones
    (128) expre_aritmetica -> . expresiones MODULO expresiones
    (129) expre_aritmetica -> . POWF PI expresiones COMA expresiones PD
    (130) expre_aritmetica -> . POW PI expresiones COMA expresiones PD
    (102) expre_valor -> . datos_cast
    (103) expre_valor -> . start_match
    (104) expre_valor -> . start_if
    (105) expre_valor -> . start_loop
    (106) expre_valor -> . llamada
    (131) datos_cast -> . datos
    (132) datos -> . ENTERO
    (133) datos -> . FLOAT
    (134) datos -> . CADENA
    (135) datos -> . CARACTER
    (136) datos -> . ID
    (137) datos -> . TRUE
    (138) datos -> . FALSE

  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PUNTO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for OR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for AND resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MAYOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MENOR resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RESTA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for SUMA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for DIVI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MODULO resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for LD resolved as shift
  ! reduce/reduce conflict for PRINTLN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LET resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ID resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for MATCH resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for IF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for LOOP resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for NOT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for PI resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POWF resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for POW resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for ENTERO resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CADENA resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for CARACTER resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 20 (bloque -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 20 (bloque -> .)
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for PI resolved as shift
  ! shift/reduce conflict for POWF resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LD              shift and go to state 252
    PUNTO           reduce using rule 20 (bloque -> .)
    OR              reduce using rule 20 (bloque -> .)
    AND             reduce using rule 20 (bloque -> .)
    MAYORIGUAL      reduce using rule 20 (bloque -> .)
    MAYOR           reduce using rule 20 (bloque -> .)
    MENORIGUAL      reduce using rule 20 (bloque -> .)
    MENOR           reduce using rule 20 (bloque -> .)
    IGUALDAD        reduce using rule 20 (bloque -> .)
    DESIGUALDAD     reduce using rule 20 (bloque -> .)
    SUMA            reduce using rule 20 (bloque -> .)
    MULTI           reduce using rule 20 (bloque -> .)
    DIVI            reduce using rule 20 (bloque -> .)
    MODULO          reduce using rule 20 (bloque -> .)
    PRINTLN         shift and go to state 123
    PRINT           shift and go to state 124
    LET             shift and go to state 9
    ID              shift and go to state 161
    MATCH           shift and go to state 36
    IF              shift and go to state 37
    WHILE           shift and go to state 126
    RETURN          shift and go to state 127
    BREAK           shift and go to state 128
    CONTINUE        shift and go to state 129
    LOOP            shift and go to state 38
    NOT             shift and go to state 25
    RESTA           shift and go to state 26
    PI              shift and go to state 27
    POWF            shift and go to state 28
    POW             shift and go to state 29
    ENTERO          shift and go to state 39
    FLOAT           shift and go to state 40
    CADENA          shift and go to state 41
    CARACTER        shift and go to state 42
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44

  ! LD              [ reduce using rule 20 (bloque -> .) ]
  ! PRINTLN         [ reduce using rule 20 (bloque -> .) ]
  ! PRINT           [ reduce using rule 20 (bloque -> .) ]
  ! LET             [ reduce using rule 20 (bloque -> .) ]
  ! ID              [ reduce using rule 20 (bloque -> .) ]
  ! MATCH           [ reduce using rule 20 (bloque -> .) ]
  ! IF              [ reduce using rule 20 (bloque -> .) ]
  ! WHILE           [ reduce using rule 20 (bloque -> .) ]
  ! RETURN          [ reduce using rule 20 (bloque -> .) ]
  ! BREAK           [ reduce using rule 20 (bloque -> .) ]
  ! CONTINUE        [ reduce using rule 20 (bloque -> .) ]
  ! LOOP            [ reduce using rule 20 (bloque -> .) ]
  ! NOT             [ reduce using rule 20 (bloque -> .) ]
  ! RESTA           [ reduce using rule 20 (bloque -> .) ]
  ! PI              [ reduce using rule 20 (bloque -> .) ]
  ! POWF            [ reduce using rule 20 (bloque -> .) ]
  ! POW             [ reduce using rule 20 (bloque -> .) ]
  ! ENTERO          [ reduce using rule 20 (bloque -> .) ]
  ! FLOAT           [ reduce using rule 20 (bloque -> .) ]
  ! CADENA          [ reduce using rule 20 (bloque -> .) ]
  ! CARACTER        [ reduce using rule 20 (bloque -> .) ]
  ! TRUE            [ reduce using rule 20 (bloque -> .) ]
  ! FALSE           [ reduce using rule 20 (bloque -> .) ]
  ! PUNTO           [ reduce using rule 101 (expresiones -> .) ]
  ! OR              [ reduce using rule 101 (expresiones -> .) ]
  ! AND             [ reduce using rule 101 (expresiones -> .) ]
  ! MAYORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MAYOR           [ reduce using rule 101 (expresiones -> .) ]
  ! MENORIGUAL      [ reduce using rule 101 (expresiones -> .) ]
  ! MENOR           [ reduce using rule 101 (expresiones -> .) ]
  ! IGUALDAD        [ reduce using rule 101 (expresiones -> .) ]
  ! DESIGUALDAD     [ reduce using rule 101 (expresiones -> .) ]
  ! RESTA           [ reduce using rule 101 (expresiones -> .) ]
  ! SUMA            [ reduce using rule 101 (expresiones -> .) ]
  ! MULTI           [ reduce using rule 101 (expresiones -> .) ]
  ! DIVI            [ reduce using rule 101 (expresiones -> .) ]
  ! MODULO          [ reduce using rule 101 (expresiones -> .) ]
  ! LD              [ reduce using rule 101 (expresiones -> .) ]
  ! PRINTLN         [ reduce using rule 101 (expresiones -> .) ]
  ! PRINT           [ reduce using rule 101 (expresiones -> .) ]
  ! LET             [ reduce using rule 101 (expresiones -> .) ]
  ! ID              [ reduce using rule 101 (expresiones -> .) ]
  ! MATCH           [ reduce using rule 101 (expresiones -> .) ]
  ! IF              [ reduce using rule 101 (expresiones -> .) ]
  ! WHILE           [ reduce using rule 101 (expresiones -> .) ]
  ! RETURN          [ reduce using rule 101 (expresiones -> .) ]
  ! BREAK           [ reduce using rule 101 (expresiones -> .) ]
  ! CONTINUE        [ reduce using rule 101 (expresiones -> .) ]
  ! LOOP            [ reduce using rule 101 (expresiones -> .) ]
  ! NOT             [ reduce using rule 101 (expresiones -> .) ]
  ! PI              [ reduce using rule 101 (expresiones -> .) ]
  ! POWF            [ reduce using rule 101 (expresiones -> .) ]
  ! POW             [ reduce using rule 101 (expresiones -> .) ]
  ! ENTERO          [ reduce using rule 101 (expresiones -> .) ]
  ! FLOAT           [ reduce using rule 101 (expresiones -> .) ]
  ! CADENA          [ reduce using rule 101 (expresiones -> .) ]
  ! CARACTER        [ reduce using rule 101 (expresiones -> .) ]
  ! TRUE            [ reduce using rule 101 (expresiones -> .) ]
  ! FALSE           [ reduce using rule 101 (expresiones -> .) ]

    expresiones                    shift and go to state 163
    bloque_exp                     shift and go to state 201
    bloque                         shift and go to state 166
    impresiones                    shift and go to state 112
    declaracion                    shift and go to state 113
    asignacion                     shift and go to state 114
    llamada                        shift and go to state 167
    start_match                    shift and go to state 168
    start_if                       shift and go to state 169
    start_while                    shift and go to state 118
    return_ins                     shift and go to state 119
    break_ins                      shift and go to state 120
    continue_ins                   shift and go to state 121
    start_loop                     shift and go to state 170
    funcion_nativa                 shift and go to state 20
    expre_logica                   shift and go to state 21
    expre_relacional               shift and go to state 22
    expre_aritmetica               shift and go to state 23
    expre_valor                    shift and go to state 24
    datos_cast                     shift and go to state 30
    datos                          shift and go to state 35

state 251

    (42) start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .

    PUNTO           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    OR              reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    AND             reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MAYORIGUAL      reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MAYOR           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MENORIGUAL      reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MENOR           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    IGUALDAD        reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    DESIGUALDAD     reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    RESTA           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    SUMA            reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MULTI           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    DIVI            reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MODULO          reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    FUNCION         reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    LET             reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    ID              reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    $end            reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    PYC             reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    LD              reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    PRINTLN         reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    PRINT           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    MATCH           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    IF              reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    WHILE           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    RETURN          reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    LOOP            reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    GBAJO           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    NOT             reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    PI              reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    POWF            reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    POW             reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    ENTERO          reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    FLOAT           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    CADENA          reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    CARACTER        reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    TRUE            reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    FALSE           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    IGUAL           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    BARRA           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    COMA            reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    PD              reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    LI              reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    BREAK           reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)
    CONTINUE        reduce using rule 42 (start_if -> IF expresiones LI list_exp_ins LD lista_elif ELSE LI list_exp_ins LD .)


state 252

    (45) else_if -> ELSE IF expresiones LI list_exp_ins LD .

    ELSE            reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PUNTO           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    OR              reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    AND             reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MAYORIGUAL      reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MAYOR           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MENORIGUAL      reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MENOR           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    IGUALDAD        reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    DESIGUALDAD     reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    RESTA           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    SUMA            reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MULTI           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    DIVI            reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MODULO          reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    FUNCION         reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    LET             reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    ID              reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    $end            reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PYC             reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    LD              reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PRINTLN         reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PRINT           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    MATCH           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    IF              reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    WHILE           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    RETURN          reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    LOOP            reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    GBAJO           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    NOT             reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PI              reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    POWF            reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    POW             reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    ENTERO          reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    FLOAT           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    CADENA          reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    CARACTER        reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    TRUE            reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    FALSE           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    IGUAL           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    BARRA           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    COMA            reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    PD              reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    LI              reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    BREAK           reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)
    CONTINUE        reduce using rule 45 (else_if -> ELSE IF expresiones LI list_exp_ins LD .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NOT in state 13 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 13 resolved as shift
WARNING: shift/reduce conflict for PI in state 13 resolved as shift
WARNING: shift/reduce conflict for POWF in state 13 resolved as shift
WARNING: shift/reduce conflict for POW in state 13 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 13 resolved as shift
WARNING: shift/reduce conflict for IF in state 13 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 13 resolved as shift
WARNING: shift/reduce conflict for ID in state 13 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 13 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 13 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 13 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 13 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 13 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 13 resolved as shift
WARNING: shift/reduce conflict for PI in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 19 resolved as shift
WARNING: shift/reduce conflict for OR in state 19 resolved as shift
WARNING: shift/reduce conflict for AND in state 19 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 19 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 19 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 19 resolved as shift
WARNING: shift/reduce conflict for DESIGUALDAD in state 19 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 19 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 19 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 19 resolved as shift
WARNING: shift/reduce conflict for DIVI in state 19 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 19 resolved as shift
WARNING: shift/reduce conflict for NOT in state 25 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 25 resolved as shift
WARNING: shift/reduce conflict for PI in state 25 resolved as shift
WARNING: shift/reduce conflict for POWF in state 25 resolved as shift
WARNING: shift/reduce conflict for POW in state 25 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 25 resolved as shift
WARNING: shift/reduce conflict for IF in state 25 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 25 resolved as shift
WARNING: shift/reduce conflict for ID in state 25 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 25 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 25 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 25 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 25 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 25 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 25 resolved as shift
WARNING: shift/reduce conflict for NOT in state 26 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 26 resolved as shift
WARNING: shift/reduce conflict for PI in state 26 resolved as shift
WARNING: shift/reduce conflict for POWF in state 26 resolved as shift
WARNING: shift/reduce conflict for POW in state 26 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 26 resolved as shift
WARNING: shift/reduce conflict for IF in state 26 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 26 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 26 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 26 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 26 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 26 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 26 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 26 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 27 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 36 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 37 resolved as shift
WARNING: shift/reduce conflict for PD in state 52 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 52 resolved as shift
WARNING: shift/reduce conflict for NOT in state 54 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 54 resolved as shift
WARNING: shift/reduce conflict for PI in state 54 resolved as shift
WARNING: shift/reduce conflict for POWF in state 54 resolved as shift
WARNING: shift/reduce conflict for POW in state 54 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 54 resolved as shift
WARNING: shift/reduce conflict for IF in state 54 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 54 resolved as shift
WARNING: shift/reduce conflict for ID in state 54 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 54 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 54 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 54 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 54 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 54 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 54 resolved as shift
WARNING: shift/reduce conflict for NOT in state 55 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 55 resolved as shift
WARNING: shift/reduce conflict for PI in state 55 resolved as shift
WARNING: shift/reduce conflict for POWF in state 55 resolved as shift
WARNING: shift/reduce conflict for POW in state 55 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 55 resolved as shift
WARNING: shift/reduce conflict for IF in state 55 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 55 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 55 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 55 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 55 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 55 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 55 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 55 resolved as shift
WARNING: shift/reduce conflict for NOT in state 56 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 56 resolved as shift
WARNING: shift/reduce conflict for PI in state 56 resolved as shift
WARNING: shift/reduce conflict for POWF in state 56 resolved as shift
WARNING: shift/reduce conflict for POW in state 56 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 56 resolved as shift
WARNING: shift/reduce conflict for IF in state 56 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 56 resolved as shift
WARNING: shift/reduce conflict for ID in state 56 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 56 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 56 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 56 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 56 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 56 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 56 resolved as shift
WARNING: shift/reduce conflict for NOT in state 57 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 57 resolved as shift
WARNING: shift/reduce conflict for PI in state 57 resolved as shift
WARNING: shift/reduce conflict for POWF in state 57 resolved as shift
WARNING: shift/reduce conflict for POW in state 57 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 57 resolved as shift
WARNING: shift/reduce conflict for IF in state 57 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 57 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 57 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 57 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 57 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 57 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 57 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT in state 58 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 58 resolved as shift
WARNING: shift/reduce conflict for PI in state 58 resolved as shift
WARNING: shift/reduce conflict for POWF in state 58 resolved as shift
WARNING: shift/reduce conflict for POW in state 58 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 58 resolved as shift
WARNING: shift/reduce conflict for IF in state 58 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 58 resolved as shift
WARNING: shift/reduce conflict for ID in state 58 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 58 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 58 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 58 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 58 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 58 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 58 resolved as shift
WARNING: shift/reduce conflict for NOT in state 59 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 59 resolved as shift
WARNING: shift/reduce conflict for PI in state 59 resolved as shift
WARNING: shift/reduce conflict for POWF in state 59 resolved as shift
WARNING: shift/reduce conflict for POW in state 59 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 59 resolved as shift
WARNING: shift/reduce conflict for ID in state 59 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 59 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 59 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 59 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 59 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 59 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 59 resolved as shift
WARNING: shift/reduce conflict for NOT in state 60 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 60 resolved as shift
WARNING: shift/reduce conflict for PI in state 60 resolved as shift
WARNING: shift/reduce conflict for POWF in state 60 resolved as shift
WARNING: shift/reduce conflict for POW in state 60 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 60 resolved as shift
WARNING: shift/reduce conflict for IF in state 60 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 60 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 60 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 60 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 60 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 60 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 60 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 60 resolved as shift
WARNING: shift/reduce conflict for NOT in state 61 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 61 resolved as shift
WARNING: shift/reduce conflict for PI in state 61 resolved as shift
WARNING: shift/reduce conflict for POWF in state 61 resolved as shift
WARNING: shift/reduce conflict for POW in state 61 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 61 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 61 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 61 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 61 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 61 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 61 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 61 resolved as shift
WARNING: shift/reduce conflict for NOT in state 62 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 62 resolved as shift
WARNING: shift/reduce conflict for PI in state 62 resolved as shift
WARNING: shift/reduce conflict for POWF in state 62 resolved as shift
WARNING: shift/reduce conflict for POW in state 62 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 62 resolved as shift
WARNING: shift/reduce conflict for IF in state 62 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 62 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 62 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 62 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 62 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 62 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 62 resolved as shift
WARNING: shift/reduce conflict for NOT in state 63 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 63 resolved as shift
WARNING: shift/reduce conflict for PI in state 63 resolved as shift
WARNING: shift/reduce conflict for POWF in state 63 resolved as shift
WARNING: shift/reduce conflict for POW in state 63 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 63 resolved as shift
WARNING: shift/reduce conflict for IF in state 63 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 63 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 63 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 63 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 63 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 63 resolved as shift
WARNING: shift/reduce conflict for NOT in state 64 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 64 resolved as shift
WARNING: shift/reduce conflict for PI in state 64 resolved as shift
WARNING: shift/reduce conflict for POWF in state 64 resolved as shift
WARNING: shift/reduce conflict for POW in state 64 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 64 resolved as shift
WARNING: shift/reduce conflict for IF in state 64 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 64 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 64 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 64 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 64 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 64 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 64 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 64 resolved as shift
WARNING: shift/reduce conflict for NOT in state 65 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 65 resolved as shift
WARNING: shift/reduce conflict for PI in state 65 resolved as shift
WARNING: shift/reduce conflict for POWF in state 65 resolved as shift
WARNING: shift/reduce conflict for POW in state 65 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 65 resolved as shift
WARNING: shift/reduce conflict for ID in state 65 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 65 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 65 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 65 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 65 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 65 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 65 resolved as shift
WARNING: shift/reduce conflict for NOT in state 66 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 66 resolved as shift
WARNING: shift/reduce conflict for PI in state 66 resolved as shift
WARNING: shift/reduce conflict for POWF in state 66 resolved as shift
WARNING: shift/reduce conflict for POW in state 66 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 66 resolved as shift
WARNING: shift/reduce conflict for ID in state 66 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 66 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 66 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 66 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 66 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 66 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 66 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 70 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 71 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 74 resolved as shift
WARNING: shift/reduce conflict for LET in state 74 resolved as shift
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 74 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 74 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 74 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 74 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 77 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 77 resolved as shift
WARNING: shift/reduce conflict for LET in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 77 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 77 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 77 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 77 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 77 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 77 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 77 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 108 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 108 resolved as shift
WARNING: shift/reduce conflict for ID in state 108 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 108 resolved as shift
WARNING: shift/reduce conflict for IF in state 108 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 108 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 108 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 108 resolved as shift
WARNING: shift/reduce conflict for GBAJO in state 108 resolved as shift
WARNING: shift/reduce conflict for NOT in state 108 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 108 resolved as shift
WARNING: shift/reduce conflict for PI in state 108 resolved as shift
WARNING: shift/reduce conflict for POWF in state 108 resolved as shift
WARNING: shift/reduce conflict for POW in state 108 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 108 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 108 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 108 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 108 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 108 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 108 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 109 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 109 resolved as shift
WARNING: shift/reduce conflict for LET in state 109 resolved as shift
WARNING: shift/reduce conflict for ID in state 109 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 109 resolved as shift
WARNING: shift/reduce conflict for IF in state 109 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 109 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 109 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 109 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 109 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 109 resolved as shift
WARNING: shift/reduce conflict for NOT in state 109 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 109 resolved as shift
WARNING: shift/reduce conflict for PI in state 109 resolved as shift
WARNING: shift/reduce conflict for POWF in state 109 resolved as shift
WARNING: shift/reduce conflict for POW in state 109 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 109 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 109 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 109 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 109 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 109 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 109 resolved as shift
WARNING: shift/reduce conflict for LD in state 110 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 110 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 110 resolved as shift
WARNING: shift/reduce conflict for LET in state 110 resolved as shift
WARNING: shift/reduce conflict for ID in state 110 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 110 resolved as shift
WARNING: shift/reduce conflict for IF in state 110 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 110 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 110 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 110 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 110 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 110 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 126 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 127 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 128 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 131 resolved as shift
WARNING: shift/reduce conflict for LD in state 139 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 139 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 139 resolved as shift
WARNING: shift/reduce conflict for LET in state 139 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 139 resolved as shift
WARNING: shift/reduce conflict for IF in state 139 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 139 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 139 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 139 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 139 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 139 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 140 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 140 resolved as shift
WARNING: shift/reduce conflict for LET in state 140 resolved as shift
WARNING: shift/reduce conflict for ID in state 140 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 140 resolved as shift
WARNING: shift/reduce conflict for IF in state 140 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 140 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 140 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 140 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 140 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 140 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 146 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 147 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 148 resolved as shift
WARNING: shift/reduce conflict for LD in state 150 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 150 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 150 resolved as shift
WARNING: shift/reduce conflict for ID in state 150 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 150 resolved as shift
WARNING: shift/reduce conflict for IF in state 150 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 150 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 150 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 150 resolved as shift
WARNING: shift/reduce conflict for GBAJO in state 150 resolved as shift
WARNING: shift/reduce conflict for NOT in state 150 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 150 resolved as shift
WARNING: shift/reduce conflict for PI in state 150 resolved as shift
WARNING: shift/reduce conflict for POWF in state 150 resolved as shift
WARNING: shift/reduce conflict for POW in state 150 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 150 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 150 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 150 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 150 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 150 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 150 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for PI in state 161 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 163 resolved as shift
WARNING: shift/reduce conflict for OR in state 163 resolved as shift
WARNING: shift/reduce conflict for AND in state 163 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 163 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 163 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 163 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 163 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 163 resolved as shift
WARNING: shift/reduce conflict for DESIGUALDAD in state 163 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 163 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 163 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 163 resolved as shift
WARNING: shift/reduce conflict for DIVI in state 163 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 163 resolved as shift
WARNING: shift/reduce conflict for LD in state 164 resolved as shift
WARNING: shift/reduce conflict for LD in state 164 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 164 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 164 resolved as shift
WARNING: shift/reduce conflict for LET in state 164 resolved as shift
WARNING: shift/reduce conflict for ID in state 164 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 164 resolved as shift
WARNING: shift/reduce conflict for IF in state 164 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 164 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 164 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 164 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 164 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 164 resolved as shift
WARNING: shift/reduce conflict for NOT in state 164 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 164 resolved as shift
WARNING: shift/reduce conflict for PI in state 164 resolved as shift
WARNING: shift/reduce conflict for POWF in state 164 resolved as shift
WARNING: shift/reduce conflict for POW in state 164 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 164 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 164 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 164 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 164 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 164 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 164 resolved as shift
WARNING: shift/reduce conflict for LD in state 186 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 186 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 186 resolved as shift
WARNING: shift/reduce conflict for LET in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 186 resolved as shift
WARNING: shift/reduce conflict for IF in state 186 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 186 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 186 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 186 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 186 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 186 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 189 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 189 resolved as shift
WARNING: shift/reduce conflict for LET in state 189 resolved as shift
WARNING: shift/reduce conflict for ID in state 189 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 189 resolved as shift
WARNING: shift/reduce conflict for IF in state 189 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 189 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 189 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 189 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 189 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 189 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 199 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 204 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 204 resolved as shift
WARNING: shift/reduce conflict for LET in state 204 resolved as shift
WARNING: shift/reduce conflict for ID in state 204 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 204 resolved as shift
WARNING: shift/reduce conflict for IF in state 204 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 204 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 204 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 204 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 204 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 204 resolved as shift
WARNING: shift/reduce conflict for LD in state 208 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 208 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 208 resolved as shift
WARNING: shift/reduce conflict for LET in state 208 resolved as shift
WARNING: shift/reduce conflict for ID in state 208 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 208 resolved as shift
WARNING: shift/reduce conflict for IF in state 208 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 208 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 208 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 208 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 208 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 208 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 212 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 218 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 220 resolved as shift
WARNING: shift/reduce conflict for LD in state 221 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 221 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 221 resolved as shift
WARNING: shift/reduce conflict for LET in state 221 resolved as shift
WARNING: shift/reduce conflict for ID in state 221 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 221 resolved as shift
WARNING: shift/reduce conflict for IF in state 221 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 221 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 221 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 221 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 221 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 221 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 225 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 225 resolved as shift
WARNING: shift/reduce conflict for LET in state 225 resolved as shift
WARNING: shift/reduce conflict for ID in state 225 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 225 resolved as shift
WARNING: shift/reduce conflict for IF in state 225 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 225 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 225 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 225 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 225 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 225 resolved as shift
WARNING: shift/reduce conflict for NOT in state 225 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 225 resolved as shift
WARNING: shift/reduce conflict for PI in state 225 resolved as shift
WARNING: shift/reduce conflict for POWF in state 225 resolved as shift
WARNING: shift/reduce conflict for POW in state 225 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 225 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 225 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 225 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 225 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 225 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 225 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 228 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 229 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 229 resolved as shift
WARNING: shift/reduce conflict for LET in state 229 resolved as shift
WARNING: shift/reduce conflict for ID in state 229 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 229 resolved as shift
WARNING: shift/reduce conflict for IF in state 229 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 229 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 229 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 229 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 229 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 229 resolved as shift
WARNING: shift/reduce conflict for NOT in state 229 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 229 resolved as shift
WARNING: shift/reduce conflict for PI in state 229 resolved as shift
WARNING: shift/reduce conflict for POWF in state 229 resolved as shift
WARNING: shift/reduce conflict for POW in state 229 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 229 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 229 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 229 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 229 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 229 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 229 resolved as shift
WARNING: shift/reduce conflict for LD in state 238 resolved as shift
WARNING: shift/reduce conflict for LD in state 238 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 238 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 238 resolved as shift
WARNING: shift/reduce conflict for LET in state 238 resolved as shift
WARNING: shift/reduce conflict for ID in state 238 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 238 resolved as shift
WARNING: shift/reduce conflict for IF in state 238 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 238 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 238 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 238 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 238 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 238 resolved as shift
WARNING: shift/reduce conflict for NOT in state 238 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 238 resolved as shift
WARNING: shift/reduce conflict for PI in state 238 resolved as shift
WARNING: shift/reduce conflict for POWF in state 238 resolved as shift
WARNING: shift/reduce conflict for POW in state 238 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 238 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 238 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 238 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 238 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 238 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 238 resolved as shift
WARNING: shift/reduce conflict for LD in state 240 resolved as shift
WARNING: shift/reduce conflict for LD in state 240 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 240 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 240 resolved as shift
WARNING: shift/reduce conflict for LET in state 240 resolved as shift
WARNING: shift/reduce conflict for ID in state 240 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 240 resolved as shift
WARNING: shift/reduce conflict for IF in state 240 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 240 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 240 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 240 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 240 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 240 resolved as shift
WARNING: shift/reduce conflict for NOT in state 240 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 240 resolved as shift
WARNING: shift/reduce conflict for PI in state 240 resolved as shift
WARNING: shift/reduce conflict for POWF in state 240 resolved as shift
WARNING: shift/reduce conflict for POW in state 240 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 240 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 240 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 240 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 240 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 240 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 240 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 241 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 241 resolved as shift
WARNING: shift/reduce conflict for LET in state 241 resolved as shift
WARNING: shift/reduce conflict for ID in state 241 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 241 resolved as shift
WARNING: shift/reduce conflict for IF in state 241 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 241 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 241 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 241 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 241 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 241 resolved as shift
WARNING: shift/reduce conflict for NOT in state 241 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 241 resolved as shift
WARNING: shift/reduce conflict for PI in state 241 resolved as shift
WARNING: shift/reduce conflict for POWF in state 241 resolved as shift
WARNING: shift/reduce conflict for POW in state 241 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 241 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 241 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 241 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 241 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 241 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 241 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 242 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 246 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 246 resolved as shift
WARNING: shift/reduce conflict for LET in state 246 resolved as shift
WARNING: shift/reduce conflict for ID in state 246 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 246 resolved as shift
WARNING: shift/reduce conflict for IF in state 246 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 246 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 246 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 246 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 246 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 246 resolved as shift
WARNING: shift/reduce conflict for NOT in state 246 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 246 resolved as shift
WARNING: shift/reduce conflict for PI in state 246 resolved as shift
WARNING: shift/reduce conflict for POWF in state 246 resolved as shift
WARNING: shift/reduce conflict for POW in state 246 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 246 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 246 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 246 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 246 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 246 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 246 resolved as shift
WARNING: shift/reduce conflict for LD in state 248 resolved as shift
WARNING: shift/reduce conflict for LD in state 248 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 248 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 248 resolved as shift
WARNING: shift/reduce conflict for LET in state 248 resolved as shift
WARNING: shift/reduce conflict for ID in state 248 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 248 resolved as shift
WARNING: shift/reduce conflict for IF in state 248 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 248 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 248 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 248 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 248 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 248 resolved as shift
WARNING: shift/reduce conflict for NOT in state 248 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 248 resolved as shift
WARNING: shift/reduce conflict for PI in state 248 resolved as shift
WARNING: shift/reduce conflict for POWF in state 248 resolved as shift
WARNING: shift/reduce conflict for POW in state 248 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 248 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 248 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 248 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 248 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 248 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 248 resolved as shift
WARNING: shift/reduce conflict for LD in state 250 resolved as shift
WARNING: shift/reduce conflict for LD in state 250 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 250 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 250 resolved as shift
WARNING: shift/reduce conflict for LET in state 250 resolved as shift
WARNING: shift/reduce conflict for ID in state 250 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 250 resolved as shift
WARNING: shift/reduce conflict for IF in state 250 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 250 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 250 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 250 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 250 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 250 resolved as shift
WARNING: shift/reduce conflict for NOT in state 250 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 250 resolved as shift
WARNING: shift/reduce conflict for PI in state 250 resolved as shift
WARNING: shift/reduce conflict for POWF in state 250 resolved as shift
WARNING: shift/reduce conflict for POW in state 250 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 250 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 250 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 250 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 250 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 250 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 250 resolved as shift
WARNING: reduce/reduce conflict in state 108 resolved using rule (bloque_match -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 108
WARNING: reduce/reduce conflict in state 109 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 109
WARNING: reduce/reduce conflict in state 127 resolved using rule (return_ins -> RETURN)
WARNING: rejected rule (expresiones -> <empty>) in state 127
WARNING: reduce/reduce conflict in state 128 resolved using rule (break_ins -> BREAK)
WARNING: rejected rule (expresiones -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 150 resolved using rule (bloque_match -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 150
WARNING: reduce/reduce conflict in state 154 resolved using rule (bloque_match -> llamada)
WARNING: rejected rule (expre_valor -> llamada) in state 154
WARNING: reduce/reduce conflict in state 155 resolved using rule (bloque_match -> start_match)
WARNING: rejected rule (expre_valor -> start_match) in state 155
WARNING: reduce/reduce conflict in state 156 resolved using rule (bloque_match -> start_if)
WARNING: rejected rule (expre_valor -> start_if) in state 156
WARNING: reduce/reduce conflict in state 159 resolved using rule (bloque_match -> start_loop)
WARNING: rejected rule (expre_valor -> start_loop) in state 159
WARNING: reduce/reduce conflict in state 164 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 164
WARNING: reduce/reduce conflict in state 168 resolved using rule (bloque -> start_match)
WARNING: rejected rule (expre_valor -> start_match) in state 168
WARNING: reduce/reduce conflict in state 169 resolved using rule (bloque -> start_if)
WARNING: rejected rule (expre_valor -> start_if) in state 169
WARNING: reduce/reduce conflict in state 170 resolved using rule (bloque -> start_loop)
WARNING: rejected rule (expre_valor -> start_loop) in state 170
WARNING: reduce/reduce conflict in state 212 resolved using rule (bloque_match -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 212
WARNING: reduce/reduce conflict in state 225 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 225
WARNING: reduce/reduce conflict in state 229 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 229
WARNING: reduce/reduce conflict in state 238 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 238
WARNING: reduce/reduce conflict in state 240 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 240
WARNING: reduce/reduce conflict in state 241 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 241
WARNING: reduce/reduce conflict in state 246 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 246
WARNING: reduce/reduce conflict in state 248 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 248
WARNING: reduce/reduce conflict in state 250 resolved using rule (bloque -> <empty>)
WARNING: rejected rule (expresiones -> <empty>) in state 250
